

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Mar 18 11:34:27 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F44K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    24  0000                     
    25                           ; Version 2.05
    26                           ; Generated 20/12/2018 GMT
    27                           ; 
    28                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F44K22 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     
    60                           	psect	nvCOMRAM
    61  000007                     __pnvCOMRAM:
    62                           	opt callstack 0
    63  000007                     _timer0ReloadVal:
    64                           	opt callstack 0
    65  000007                     	ds	2
    66  000009                     _TMR0_InterruptHandler:
    67                           	opt callstack 0
    68  000009                     	ds	2
    69  0000                     _ANSELA	set	3896
    70  0000                     _ANSELE	set	3900
    71  0000                     _ANSELB	set	3897
    72  0000                     _ANSELC	set	3898
    73  0000                     _ANSELD	set	3899
    74  0000                     _LATDbits	set	3980
    75  0000                     _LATBbits	set	3978
    76  0000                     _PORTAbits	set	3968
    77  0000                     _RCONbits	set	4048
    78  0000                     _T0CON	set	4053
    79  0000                     _TMR0L	set	4054
    80  0000                     _TMR0H	set	4055
    81  0000                     _T0CONbits	set	4053
    82  0000                     _INTCONbits	set	4082
    83  0000                     _INTCON2bits	set	4081
    84  0000                     _WPUB	set	3937
    85  0000                     _TRISD	set	3989
    86  0000                     _TRISC	set	3988
    87  0000                     _TRISB	set	3987
    88  0000                     _TRISA	set	3986
    89  0000                     _TRISE	set	3990
    90  0000                     _LATC	set	3979
    91  0000                     _LATB	set	3978
    92  0000                     _LATA	set	3977
    93  0000                     _LATD	set	3980
    94  0000                     _LATE	set	3981
    95  0000                     _OSCTUNE	set	3995
    96  0000                     _OSCCON2	set	4050
    97  0000                     _OSCCON	set	4051
    98  0000                     _ADCON0bits	set	4034
    99  0000                     _ADRESH	set	4036
   100  0000                     _ADRESL	set	4035
   101  0000                     _ADCON2	set	4032
   102  0000                     _ADCON1	set	4033
   103  0000                     _ADCON0	set	4034
   104                           
   105                           ; #config settings
   106  0000                     
   107                           	psect	cinit
   108  0000FC                     __pcinit:
   109                           	opt callstack 0
   110  0000FC                     start_initialization:
   111                           	opt callstack 0
   112  0000FC                     __initialization:
   113                           	opt callstack 0
   114  0000FC                     end_of_initialization:
   115                           	opt callstack 0
   116  0000FC                     __end_of__initialization:
   117                           	opt callstack 0
   118  0000FC  900B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   119  0000FE  920B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   120  000100  0E00               	movlw	low (__Lmediumconst shr (0+16))
   121  000102  6EF8               	movwf	tblptru,c
   122  000104  0100               	movlb	0
   123  000106  EF95  F000         	goto	_main	;jump to C main() function
   124                           
   125                           	psect	cstackCOMRAM
   126  000001                     __pcstackCOMRAM:
   127                           	opt callstack 0
   128  000001                     ??_INTERRUPT_InterruptManager:
   129  000001                     
   130                           ; 1 bytes @ 0x0
   131  000001                     	ds	2
   132  000003                     TMR0_SetInterruptHandler@InterruptHandler:
   133                           	opt callstack 0
   134                           
   135                           ; 2 bytes @ 0x2
   136  000003                     	ds	2
   137  000005                     ??_TMR0_Initialize:
   138  000005                     
   139                           ; 1 bytes @ 0x4
   140  000005                     	ds	2
   141  000007                     
   142                           ; 1 bytes @ 0x6
   143 ;;
   144 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   145 ;;
   146 ;; *************** function _main *****************
   147 ;; Defined at:
   148 ;;		line 13 in file "main.c"
   149 ;; Parameters:    Size  Location     Type
   150 ;;		None
   151 ;; Auto vars:     Size  Location     Type
   152 ;;		None
   153 ;; Return value:  Size  Location     Type
   154 ;;                  1    wreg      void 
   155 ;; Registers used:
   156 ;;		wreg, status,2, status,0, cstack
   157 ;; Tracked objects:
   158 ;;		On entry : 0/0
   159 ;;		On exit  : 0/0
   160 ;;		Unchanged: 0/0
   161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   162 ;;      Params:         0       0       0       0
   163 ;;      Locals:         0       0       0       0
   164 ;;      Temps:          0       0       0       0
   165 ;;      Totals:         0       0       0       0
   166 ;;Total ram usage:        0 bytes
   167 ;; Hardware stack levels required when called:    7
   168 ;; This function calls:
   169 ;;		_initialize
   170 ;; This function is called by:
   171 ;;		Startup code after reset
   172 ;; This function uses a non-reentrant model
   173 ;;
   174                           
   175                           	psect	text0
   176  00012A                     __ptext0:
   177                           	opt callstack 0
   178  00012A                     _main:
   179                           	opt callstack 24
   180                           
   181                           ;main.c: 15:     initialize();
   182                           
   183                           ;incstack = 0
   184  00012A  EC91  F000         	call	_initialize	;wreg free
   185  00012E                     l234:
   186                           
   187                           ;main.c: 25:     }
   188  00012E  D7FF               	goto	l234
   189  000130                     __end_of_main:
   190                           	opt callstack 0
   191                           
   192 ;; *************** function _initialize *****************
   193 ;; Defined at:
   194 ;;		line 23 in file "./methods.h"
   195 ;; Parameters:    Size  Location     Type
   196 ;;		None
   197 ;; Auto vars:     Size  Location     Type
   198 ;;		None
   199 ;; Return value:  Size  Location     Type
   200 ;;                  1    wreg      void 
   201 ;; Registers used:
   202 ;;		wreg, status,2, status,0, cstack
   203 ;; Tracked objects:
   204 ;;		On entry : 0/0
   205 ;;		On exit  : 0/0
   206 ;;		Unchanged: 0/0
   207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   208 ;;      Params:         0       0       0       0
   209 ;;      Locals:         0       0       0       0
   210 ;;      Temps:          0       0       0       0
   211 ;;      Totals:         0       0       0       0
   212 ;;Total ram usage:        0 bytes
   213 ;; Hardware stack levels used:    1
   214 ;; Hardware stack levels required when called:    6
   215 ;; This function calls:
   216 ;;		_SYSTEM_Initialize
   217 ;; This function is called by:
   218 ;;		_main
   219 ;; This function uses a non-reentrant model
   220 ;;
   221                           
   222                           	psect	text1
   223  000122                     __ptext1:
   224                           	opt callstack 0
   225  000122                     _initialize:
   226                           	opt callstack 24
   227                           
   228                           ;./methods.h: 25:     INTCONbits.GIE = 1;
   229                           
   230                           ;incstack = 0
   231  000122  8EF2               	bsf	4082,7,c	;volatile
   232                           
   233                           ;./methods.h: 27:     SYSTEM_Initialize();
   234  000124  EC68  F000         	call	_SYSTEM_Initialize	;wreg free
   235  000128  0012               	return		;funcret
   236  00012A                     __end_of_initialize:
   237                           	opt callstack 0
   238                           
   239 ;; *************** function _SYSTEM_Initialize *****************
   240 ;; Defined at:
   241 ;;		line 50 in file "mcc_generated_files/mcc.c"
   242 ;; Parameters:    Size  Location     Type
   243 ;;		None
   244 ;; Auto vars:     Size  Location     Type
   245 ;;		None
   246 ;; Return value:  Size  Location     Type
   247 ;;                  1    wreg      void 
   248 ;; Registers used:
   249 ;;		wreg, status,2, status,0, cstack
   250 ;; Tracked objects:
   251 ;;		On entry : 0/0
   252 ;;		On exit  : 0/0
   253 ;;		Unchanged: 0/0
   254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   255 ;;      Params:         0       0       0       0
   256 ;;      Locals:         0       0       0       0
   257 ;;      Temps:          0       0       0       0
   258 ;;      Totals:         0       0       0       0
   259 ;;Total ram usage:        0 bytes
   260 ;; Hardware stack levels used:    1
   261 ;; Hardware stack levels required when called:    5
   262 ;; This function calls:
   263 ;;		_ADC_Initialize
   264 ;;		_INTERRUPT_Initialize
   265 ;;		_OSCILLATOR_Initialize
   266 ;;		_PIN_MANAGER_Initialize
   267 ;;		_TMR0_Initialize
   268 ;; This function is called by:
   269 ;;		_initialize
   270 ;; This function uses a non-reentrant model
   271 ;;
   272                           
   273                           	psect	text2
   274  0000D0                     __ptext2:
   275                           	opt callstack 0
   276  0000D0                     _SYSTEM_Initialize:
   277                           	opt callstack 24
   278                           
   279                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
   280                           
   281                           ;incstack = 0
   282  0000D0  EC98  F000         	call	_INTERRUPT_Initialize	;wreg free
   283                           
   284                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
   285  0000D4  EC16  F000         	call	_PIN_MANAGER_Initialize	;wreg free
   286                           
   287                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
   288  0000D8  EC85  F000         	call	_OSCILLATOR_Initialize	;wreg free
   289                           
   290                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
   291  0000DC  EC73  F000         	call	_ADC_Initialize	;wreg free
   292                           
   293                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
   294  0000E0  EC39  F000         	call	_TMR0_Initialize	;wreg free
   295  0000E4  0012               	return		;funcret
   296  0000E6                     __end_of_SYSTEM_Initialize:
   297                           	opt callstack 0
   298                           
   299 ;; *************** function _TMR0_Initialize *****************
   300 ;; Defined at:
   301 ;;		line 67 in file "mcc_generated_files/tmr0.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;		None
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		wreg, status,2, status,0, cstack
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   315 ;;      Params:         0       0       0       0
   316 ;;      Locals:         0       0       0       0
   317 ;;      Temps:          2       0       0       0
   318 ;;      Totals:         2       0       0       0
   319 ;;Total ram usage:        2 bytes
   320 ;; Hardware stack levels used:    1
   321 ;; Hardware stack levels required when called:    4
   322 ;; This function calls:
   323 ;;		_TMR0_SetInterruptHandler
   324 ;; This function is called by:
   325 ;;		_SYSTEM_Initialize
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329                           	psect	text3
   330  000072                     __ptext3:
   331                           	opt callstack 0
   332  000072                     _TMR0_Initialize:
   333                           	opt callstack 24
   334                           
   335                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
   336                           
   337                           ;incstack = 0
   338  000072  9CD5               	bcf	4053,6,c	;volatile
   339                           
   340                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xFF;
   341  000074  68D7               	setf	4055,c	;volatile
   342                           
   343                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x37;
   344  000076  0E37               	movlw	55
   345  000078  6ED6               	movwf	4054,c	;volatile
   346                           
   347                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
   348  00007A  50D6               	movf	4054,w,c	;volatile
   349  00007C  CFD7 F005          	movff	4055,??_TMR0_Initialize	;volatile
   350  000080  6A06               	clrf	(??_TMR0_Initialize+1)& (0+255),c
   351  000082  C005  F006         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
   352  000086  6A05               	clrf	??_TMR0_Initialize,c
   353  000088  1005               	iorwf	??_TMR0_Initialize,w,c
   354  00008A  6E07               	movwf	_timer0ReloadVal,c	;volatile
   355  00008C  5006               	movf	??_TMR0_Initialize+1,w,c
   356  00008E  6E08               	movwf	_timer0ReloadVal+1,c	;volatile
   357                           
   358                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
   359  000090  94F2               	bcf	4082,2,c	;volatile
   360                           
   361                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
   362  000092  8AF2               	bsf	4082,5,c	;volatile
   363                           
   364                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
   365  000094  0E34               	movlw	low _TMR0_DefaultInterruptHandler
   366  000096  6E03               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
   367  000098  0E01               	movlw	high _TMR0_DefaultInterruptHandler
   368  00009A  6E04               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
   369  00009C  EC8C  F000         	call	_TMR0_SetInterruptHandler	;wreg free
   370                           
   371                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x98;
   372  0000A0  0E98               	movlw	152
   373  0000A2  6ED5               	movwf	4053,c	;volatile
   374  0000A4  0012               	return		;funcret
   375  0000A6                     __end_of_TMR0_Initialize:
   376                           	opt callstack 0
   377                           
   378 ;; *************** function _TMR0_SetInterruptHandler *****************
   379 ;; Defined at:
   380 ;;		line 156 in file "mcc_generated_files/tmr0.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
   383 ;;		 -> TMR0_DefaultInterruptHandler(1), 
   384 ;; Auto vars:     Size  Location     Type
   385 ;;		None
   386 ;; Return value:  Size  Location     Type
   387 ;;                  1    wreg      void 
   388 ;; Registers used:
   389 ;;		wreg, status,2, status,0
   390 ;; Tracked objects:
   391 ;;		On entry : 0/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   395 ;;      Params:         2       0       0       0
   396 ;;      Locals:         0       0       0       0
   397 ;;      Temps:          0       0       0       0
   398 ;;      Totals:         2       0       0       0
   399 ;;Total ram usage:        2 bytes
   400 ;; Hardware stack levels used:    1
   401 ;; Hardware stack levels required when called:    3
   402 ;; This function calls:
   403 ;;		Nothing
   404 ;; This function is called by:
   405 ;;		_TMR0_Initialize
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           	psect	text4
   410  000118                     __ptext4:
   411                           	opt callstack 0
   412  000118                     _TMR0_SetInterruptHandler:
   413                           	opt callstack 24
   414                           
   415                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
   416                           
   417                           ;incstack = 0
   418  000118  C003  F009         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
   419  00011C  C004  F00A         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
   420  000120  0012               	return		;funcret
   421  000122                     __end_of_TMR0_SetInterruptHandler:
   422                           	opt callstack 0
   423                           
   424 ;; *************** function _PIN_MANAGER_Initialize *****************
   425 ;; Defined at:
   426 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;		None
   429 ;; Auto vars:     Size  Location     Type
   430 ;;		None
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      void 
   433 ;; Registers used:
   434 ;;		wreg, status,2
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   440 ;;      Params:         0       0       0       0
   441 ;;      Locals:         0       0       0       0
   442 ;;      Temps:          0       0       0       0
   443 ;;      Totals:         0       0       0       0
   444 ;;Total ram usage:        0 bytes
   445 ;; Hardware stack levels used:    1
   446 ;; Hardware stack levels required when called:    3
   447 ;; This function calls:
   448 ;;		Nothing
   449 ;; This function is called by:
   450 ;;		_SYSTEM_Initialize
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           	psect	text5
   455  00002C                     __ptext5:
   456                           	opt callstack 0
   457  00002C                     _PIN_MANAGER_Initialize:
   458                           	opt callstack 25
   459                           
   460                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   461                           
   462                           ;incstack = 0
   463  00002C  0E00               	movlw	0
   464  00002E  6E8D               	movwf	3981,c	;volatile
   465                           
   466                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
   467  000030  0E00               	movlw	0
   468  000032  6E8C               	movwf	3980,c	;volatile
   469                           
   470                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
   471  000034  0E00               	movlw	0
   472  000036  6E89               	movwf	3977,c	;volatile
   473                           
   474                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
   475  000038  0E00               	movlw	0
   476  00003A  6E8A               	movwf	3978,c	;volatile
   477                           
   478                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
   479  00003C  0E00               	movlw	0
   480  00003E  6E8B               	movwf	3979,c	;volatile
   481                           
   482                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
   483  000040  0E07               	movlw	7
   484  000042  6E96               	movwf	3990,c	;volatile
   485                           
   486                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xDF;
   487  000044  0EDF               	movlw	223
   488  000046  6E92               	movwf	3986,c	;volatile
   489                           
   490                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF0;
   491  000048  0EF0               	movlw	240
   492  00004A  6E93               	movwf	3987,c	;volatile
   493                           
   494                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x5F;
   495  00004C  0E5F               	movlw	95
   496  00004E  6E94               	movwf	3988,c	;volatile
   497                           
   498                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x0E;
   499  000050  0E0E               	movlw	14
   500  000052  6E95               	movwf	3989,c	;volatile
   501                           
   502                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xF1;
   503  000054  0EF1               	movlw	241
   504  000056  010F               	movlb	15	; () banked
   505  000058  6F3B               	movwf	59,b	;volatile
   506                           
   507                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xE4;
   508  00005A  0EE4               	movlw	228
   509  00005C  6F3A               	movwf	58,b	;volatile
   510                           
   511                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x0F;
   512  00005E  0E0F               	movlw	15
   513  000060  6F39               	movwf	57,b	;volatile
   514                           
   515                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
   516  000062  0E07               	movlw	7
   517  000064  6F3C               	movwf	60,b	;volatile
   518                           
   519                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x20;
   520  000066  0E20               	movlw	32
   521  000068  6F38               	movwf	56,b	;volatile
   522                           
   523                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
   524  00006A  0E00               	movlw	0
   525  00006C  6E61               	movwf	3937,c	;volatile
   526                           
   527                           ; BSR set to: 15
   528                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
   529  00006E  8EF1               	bsf	4081,7,c	;volatile
   530                           
   531                           ; BSR set to: 15
   532  000070  0012               	return		;funcret
   533  000072                     __end_of_PIN_MANAGER_Initialize:
   534                           	opt callstack 0
   535                           
   536 ;; *************** function _OSCILLATOR_Initialize *****************
   537 ;; Defined at:
   538 ;;		line 60 in file "mcc_generated_files/mcc.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;		None
   541 ;; Auto vars:     Size  Location     Type
   542 ;;		None
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1    wreg      void 
   545 ;; Registers used:
   546 ;;		wreg, status,2
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   552 ;;      Params:         0       0       0       0
   553 ;;      Locals:         0       0       0       0
   554 ;;      Temps:          0       0       0       0
   555 ;;      Totals:         0       0       0       0
   556 ;;Total ram usage:        0 bytes
   557 ;; Hardware stack levels used:    1
   558 ;; Hardware stack levels required when called:    3
   559 ;; This function calls:
   560 ;;		Nothing
   561 ;; This function is called by:
   562 ;;		_SYSTEM_Initialize
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           	psect	text6
   567  00010A                     __ptext6:
   568                           	opt callstack 0
   569  00010A                     _OSCILLATOR_Initialize:
   570                           	opt callstack 25
   571                           
   572                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
   573                           
   574                           ; BSR set to: 15
   575                           ;incstack = 0
   576  00010A  0E70               	movlw	112
   577  00010C  6ED3               	movwf	4051,c	;volatile
   578                           
   579                           ;mcc_generated_files/mcc.c: 65:     OSCCON2 = 0x04;
   580  00010E  0E04               	movlw	4
   581  000110  6ED2               	movwf	4050,c	;volatile
   582                           
   583                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
   584  000112  0E00               	movlw	0
   585  000114  6E9B               	movwf	3995,c	;volatile
   586  000116  0012               	return		;funcret
   587  000118                     __end_of_OSCILLATOR_Initialize:
   588                           	opt callstack 0
   589                           
   590 ;; *************** function _INTERRUPT_Initialize *****************
   591 ;; Defined at:
   592 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;		None
   597 ;; Return value:  Size  Location     Type
   598 ;;                  1    wreg      void 
   599 ;; Registers used:
   600 ;;		None
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   606 ;;      Params:         0       0       0       0
   607 ;;      Locals:         0       0       0       0
   608 ;;      Temps:          0       0       0       0
   609 ;;      Totals:         0       0       0       0
   610 ;;Total ram usage:        0 bytes
   611 ;; Hardware stack levels used:    1
   612 ;; Hardware stack levels required when called:    3
   613 ;; This function calls:
   614 ;;		Nothing
   615 ;; This function is called by:
   616 ;;		_SYSTEM_Initialize
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           	psect	text7
   621  000130                     __ptext7:
   622                           	opt callstack 0
   623  000130                     _INTERRUPT_Initialize:
   624                           	opt callstack 25
   625                           
   626                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
   627                           
   628                           ;incstack = 0
   629  000130  9ED0               	bcf	4048,7,c	;volatile
   630  000132  0012               	return		;funcret
   631  000134                     __end_of_INTERRUPT_Initialize:
   632                           	opt callstack 0
   633                           
   634 ;; *************** function _ADC_Initialize *****************
   635 ;; Defined at:
   636 ;;		line 60 in file "mcc_generated_files/adc.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;		None
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      void 
   643 ;; Registers used:
   644 ;;		wreg, status,2
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   650 ;;      Params:         0       0       0       0
   651 ;;      Locals:         0       0       0       0
   652 ;;      Temps:          0       0       0       0
   653 ;;      Totals:         0       0       0       0
   654 ;;Total ram usage:        0 bytes
   655 ;; Hardware stack levels used:    1
   656 ;; Hardware stack levels required when called:    3
   657 ;; This function calls:
   658 ;;		Nothing
   659 ;; This function is called by:
   660 ;;		_SYSTEM_Initialize
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           	psect	text8
   665  0000E6                     __ptext8:
   666                           	opt callstack 0
   667  0000E6                     _ADC_Initialize:
   668                           	opt callstack 25
   669                           
   670                           ;mcc_generated_files/adc.c: 65:     ADCON0 = 0x00;
   671                           
   672                           ;incstack = 0
   673  0000E6  0E00               	movlw	0
   674  0000E8  6EC2               	movwf	4034,c	;volatile
   675                           
   676                           ;mcc_generated_files/adc.c: 68:     ADCON1 = 0x00;
   677  0000EA  0E00               	movlw	0
   678  0000EC  6EC1               	movwf	4033,c	;volatile
   679                           
   680                           ;mcc_generated_files/adc.c: 71:     ADCON2 = 0x00;
   681  0000EE  0E00               	movlw	0
   682  0000F0  6EC0               	movwf	4032,c	;volatile
   683                           
   684                           ;mcc_generated_files/adc.c: 74:     ADRESL = 0x00;
   685  0000F2  0E00               	movlw	0
   686  0000F4  6EC3               	movwf	4035,c	;volatile
   687                           
   688                           ;mcc_generated_files/adc.c: 77:     ADRESH = 0x00;
   689  0000F6  0E00               	movlw	0
   690  0000F8  6EC4               	movwf	4036,c	;volatile
   691  0000FA  0012               	return		;funcret
   692  0000FC                     __end_of_ADC_Initialize:
   693                           	opt callstack 0
   694                           
   695 ;; *************** function _INTERRUPT_InterruptManager *****************
   696 ;; Defined at:
   697 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;		None
   700 ;; Auto vars:     Size  Location     Type
   701 ;;		None
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		wreg, status,2, status,0, pclath, tosl, cstack
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   711 ;;      Params:         0       0       0       0
   712 ;;      Locals:         0       0       0       0
   713 ;;      Temps:          2       0       0       0
   714 ;;      Totals:         2       0       0       0
   715 ;;Total ram usage:        2 bytes
   716 ;; Hardware stack levels used:    1
   717 ;; Hardware stack levels required when called:    2
   718 ;; This function calls:
   719 ;;		_TMR0_ISR
   720 ;; This function is called by:
   721 ;;		Interrupt level 2
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           	psect	intcode
   726  000008                     __pintcode:
   727                           	opt callstack 0
   728  000008                     _INTERRUPT_InterruptManager:
   729                           	opt callstack 24
   730                           
   731                           ;incstack = 0
   732  000008  820B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   733  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
   734  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
   735                           
   736                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
   737  000012  BAF2               	btfsc	4082,5,c	;volatile
   738  000014  A4F2               	btfss	4082,2,c	;volatile
   739  000016  D002               	goto	i2l164
   740                           
   741                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
   742  000018  EC53  F000         	call	_TMR0_ISR	;wreg free
   743  00001C                     i2l164:
   744  00001C  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
   745  000020  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
   746  000024  920B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   747  000026  0011               	retfie		f
   748  000028                     __end_of_INTERRUPT_InterruptManager:
   749                           	opt callstack 0
   750                           
   751 ;; *************** function _TMR0_ISR *****************
   752 ;; Defined at:
   753 ;;		line 136 in file "mcc_generated_files/tmr0.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;		None
   756 ;; Auto vars:     Size  Location     Type
   757 ;;		None
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		wreg, status,2, status,0, pclath, tosl, cstack
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   767 ;;      Params:         0       0       0       0
   768 ;;      Locals:         0       0       0       0
   769 ;;      Temps:          0       0       0       0
   770 ;;      Totals:         0       0       0       0
   771 ;;Total ram usage:        0 bytes
   772 ;; Hardware stack levels used:    1
   773 ;; Hardware stack levels required when called:    1
   774 ;; This function calls:
   775 ;;		Absolute function
   776 ;;		_TMR0_DefaultInterruptHandler
   777 ;; This function is called by:
   778 ;;		_INTERRUPT_InterruptManager
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           	psect	text10
   783  0000A6                     __ptext10:
   784                           	opt callstack 0
   785  0000A6                     _TMR0_ISR:
   786                           	opt callstack 24
   787                           
   788                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
   789                           
   790                           ;incstack = 0
   791  0000A6  94F2               	bcf	4082,2,c	;volatile
   792                           
   793                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
   794  0000A8  5008               	movf	_timer0ReloadVal+1,w,c	;volatile
   795  0000AA  6ED7               	movwf	4055,c	;volatile
   796                           
   797                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
   798  0000AC  C007  FFD6         	movff	_timer0ReloadVal,4054	;volatile
   799                           
   800                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
   801  0000B0  5009               	movf	_TMR0_InterruptHandler,w,c
   802  0000B2  100A               	iorwf	_TMR0_InterruptHandler+1,w,c
   803  0000B4  B4D8               	btfsc	status,2,c
   804  0000B6  0012               	return	
   805                           
   806                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
   807  0000B8  D801               	call	i2u2_48
   808  0000BA  0012               	return	
   809  0000BC                     i2u2_48:
   810  0000BC  0005               	push	
   811  0000BE  6EFA               	movwf	pclath,c
   812  0000C0  5009               	movf	_TMR0_InterruptHandler,w,c
   813  0000C2  6EFD               	movwf	tosl,c
   814  0000C4  500A               	movf	_TMR0_InterruptHandler+1,w,c
   815  0000C6  6EFE               	movwf	tosh,c
   816  0000C8  50F8               	movf	tblptru,w,c
   817  0000CA  6EFF               	movwf	tosu,c
   818  0000CC  50FA               	movf	pclath,w,c
   819  0000CE  0012               	return		;indir
   820  0000D0                     __end_of_TMR0_ISR:
   821                           	opt callstack 0
   822                           
   823 ;; *************** function _TMR0_DefaultInterruptHandler *****************
   824 ;; Defined at:
   825 ;;		line 160 in file "mcc_generated_files/tmr0.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;		None
   828 ;; Auto vars:     Size  Location     Type
   829 ;;		None
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      void 
   832 ;; Registers used:
   833 ;;		None
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   839 ;;      Params:         0       0       0       0
   840 ;;      Locals:         0       0       0       0
   841 ;;      Temps:          0       0       0       0
   842 ;;      Totals:         0       0       0       0
   843 ;;Total ram usage:        0 bytes
   844 ;; Hardware stack levels used:    1
   845 ;; This function calls:
   846 ;;		Nothing
   847 ;; This function is called by:
   848 ;;		_TMR0_Initialize
   849 ;;		_TMR0_ISR
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text11
   854  000134                     __ptext11:
   855                           	opt callstack 0
   856  000134                     _TMR0_DefaultInterruptHandler:
   857                           	opt callstack 24
   858                           
   859                           ;incstack = 0
   860  000134  0012               	return		;funcret
   861  000136                     __end_of_TMR0_DefaultInterruptHandler:
   862                           	opt callstack 0
   863  0000                     
   864                           	psect	text12
   865  000000                     __ptext12:
   866                           	opt callstack 0
   867                           
   868                           	psect	rparam
   869  0000                     
   870                           	psect	temp
   871  00000B                     btemp:
   872                           	opt callstack 0
   873  00000B                     	ds	1
   874  0000                     int$flags	set	btemp
   875  0000                     wtemp8	set	btemp+1
   876  0000                     ttemp5	set	btemp+1
   877  0000                     ttemp6	set	btemp+4
   878  0000                     ttemp7	set	btemp+8
   879                           tosu	equ	0xFFF
   880                           tosh	equ	0xFFE
   881                           tosl	equ	0xFFD
   882                           stkptr	equ	0xFFC
   883                           pclatu	equ	0xFFB
   884                           pclath	equ	0xFFA
   885                           pcl	equ	0xFF9
   886                           tblptru	equ	0xFF8
   887                           tblptrh	equ	0xFF7
   888                           tblptrl	equ	0xFF6
   889                           tablat	equ	0xFF5
   890                           prodh	equ	0xFF4
   891                           prodl	equ	0xFF3
   892                           indf0	equ	0xFEF
   893                           postinc0	equ	0xFEE
   894                           postdec0	equ	0xFED
   895                           preinc0	equ	0xFEC
   896                           plusw0	equ	0xFEB
   897                           fsr0h	equ	0xFEA
   898                           fsr0l	equ	0xFE9
   899                           wreg	equ	0xFE8
   900                           indf1	equ	0xFE7
   901                           postinc1	equ	0xFE6
   902                           postdec1	equ	0xFE5
   903                           preinc1	equ	0xFE4
   904                           plusw1	equ	0xFE3
   905                           fsr1h	equ	0xFE2
   906                           fsr1l	equ	0xFE1
   907                           bsr	equ	0xFE0
   908                           indf2	equ	0xFDF
   909                           postinc2	equ	0xFDE
   910                           postdec2	equ	0xFDD
   911                           preinc2	equ	0xFDC
   912                           plusw2	equ	0xFDB
   913                           fsr2h	equ	0xFDA
   914                           fsr2l	equ	0xFD9
   915                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      6      10
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      98
                         _initialize
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0      98
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0      98
                     _ADC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      2     2      0      98
                                              4 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR0_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
     _SYSTEM_Initialize
       _ADC_Initialize
       _INTERRUPT_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      6       A       1       10.6%
STACK                0      0       0       2        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BANK1              100      0       0       5        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
ABS                  0      0       A       8        0.0%
BITBANK1           100      0       0       9        0.0%
BIGRAM             2FF      0       0      10        0.0%
DATA                 0      0       A      11        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Mar 18 11:34:27 2020

                         _timer0ReloadVal 0007                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                               __CFG_LVP$ON 000000  
                                     l234 012E                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                                       tosl 000FFD  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      _WPUB 000F61  
                                    _main 012A                                      btemp 000B  
                           __CFG_BORV$190 000000                                      start 0028  
                           __CFG_IESO$OFF 000000                              ___param_bank 000000  
                 __end_of_TMR0_Initialize 00A6            ??_TMR0_DefaultInterruptHandler 0001  
          __size_of_OSCILLATOR_Initialize 000E             __end_of_OSCILLATOR_Initialize 0118  
                                   ?_main 0001                                     _T0CON 000FD5  
                          __CFG_DEBUG$OFF 000000                                     i2l164 001C  
                                   _TMR0H 000FD7                                     _TMR0L 000FD6  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96         __size_of_TMR0_SetInterruptHandler 000A  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
               ?_TMR0_SetInterruptHandler 0003                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                        __end_of_TMR0_ISR 00D0                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                        __CFG_MCLRE$EXTMCLR 000000  
                                   pclath 000FFA                                     ttemp5 000C  
                                   ttemp6 000F                                     ttemp7 0013  
                                   status 000FD8                                     wtemp8 000C  
                          __CFG_HFOFST$ON 000000                            __CFG_PBADEN$ON 000000  
                         __initialization 00FC                              __end_of_main 0130  
             ?_INTERRUPT_InterruptManager 0001                                    ??_main 0007  
                           __activetblptr 000002                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                            __CFG_WDTEN$OFF 000000  
                                  _OSCCON 000FD3                                    i2u2_48 00BC  
                          __CFG_XINST$OFF 000000                            __CFG_STVREN$ON 000000  
                        ?_TMR0_Initialize 0001                                    tblptru 000FF8  
TMR0_SetInterruptHandler@InterruptHandler 0003             __size_of_INTERRUPT_Initialize 0004  
                       _SYSTEM_Initialize 00D0                                __accesstop 0060  
                 __end_of__initialization 00FC                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 000001                            __pcstackCOMRAM 0001  
                     ??_SYSTEM_Initialize 0007                                 ?_TMR0_ISR 0001  
               __end_of_SYSTEM_Initialize 00E6                           __CFG_PLLCFG$OFF 000000  
                              __pnvCOMRAM 0007                        __CFG_CCP2MX$PORTC1 000000  
        __end_of_TMR0_SetInterruptHandler 0122                                ??_TMR0_ISR 0001  
                      __CFG_CCP3MX$PORTB5 000000                   __size_of_ADC_Initialize 0016  
                                 _OSCCON2 000FD2                                   _OSCTUNE 000F9B  
                         __CFG_PWRTEN$OFF 000000                                   __Hparam 0000  
                                 __Lparam 0000                                   __pcinit 00FC  
                                 __ramtop 0300                                _initialize 0122  
                                 __ptext0 012A                                   __ptext1 0122  
                                 __ptext2 00D0                                   __ptext3 0072  
                                 __ptext4 0118                                   __ptext5 002C  
                                 __ptext6 010A                                   __ptext7 0130  
                                 __ptext8 00E6                                 _T0CONbits 000FD5  
                   _OSCILLATOR_Initialize 010A                  ??_PIN_MANAGER_Initialize 0003  
              __size_of_SYSTEM_Initialize 0016                      end_of_initialization 00FC  
                           __Lmediumconst 0000                  _TMR0_SetInterruptHandler 0118  
                               _PORTAbits 000F80              __end_of_INTERRUPT_Initialize 0134  
                       __size_of_TMR0_ISR 002A                               ?_initialize 0001  
                          _ADC_Initialize 00E6                    ?_OSCILLATOR_Initialize 0001  
                     start_initialization 00FC                  __size_of_TMR0_Initialize 0034  
         __size_of_PIN_MANAGER_Initialize 0046                    __end_of_ADC_Initialize 00FC  
                     __size_of_initialize 0008                     _TMR0_InterruptHandler 0009  
                  _PIN_MANAGER_Initialize 002C                                 __pintcode 0008  
                         ?_ADC_Initialize 0001              ??_INTERRUPT_InterruptManager 0001  
                        __CFG_PRICLKEN$ON 000000                      _INTERRUPT_Initialize 0130  
                       ??_TMR0_Initialize 0005                                  _LATBbits 000F8A  
                                _LATDbits 000F8C       __size_of_INTERRUPT_InterruptManager 0020  
              ??_TMR0_SetInterruptHandler 0005                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                                  _TMR0_ISR 00A6  
                              _ADCON0bits 000FC2                               _INTCON2bits 000FF1  
                   ?_INTERRUPT_Initialize 0001                                  __Hrparam 0000  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                       __CFG_P2BMX$PORTD2 000000                   ??_OSCILLATOR_Initialize 0003  
                            ??_initialize 0007                                  __ptext10 00A6  
                                __ptext11 0134                                  __ptext12 0000  
                           __size_of_main 0006                        __end_of_initialize 012A  
    __end_of_TMR0_DefaultInterruptHandler 0136     __size_of_TMR0_DefaultInterruptHandler 0002  
            _TMR0_DefaultInterruptHandler 0134                                  int$flags 000B  
      __end_of_INTERRUPT_InterruptManager 0028                _INTERRUPT_InterruptManager 0008  
                              _INTCONbits 000FF2                    ??_INTERRUPT_Initialize 0003  
                                intlevel2 0000                   ?_PIN_MANAGER_Initialize 0001  
                        ??_ADC_Initialize 0003             ?_TMR0_DefaultInterruptHandler 0001  
                         _TMR0_Initialize 0072                         __CFG_T3CMX$PORTC0 000000  
          __end_of_PIN_MANAGER_Initialize 0072                         __CFG_FOSC$INTIO67 000000  
