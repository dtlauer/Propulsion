

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Mar 11 10:58:14 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F44K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62  0000                     
    63                           ; Version 2.05
    64                           ; Generated 20/12/2018 GMT
    65                           ; 
    66                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F44K22 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     
    98 ;; Function _TEST_V1 is unused but had its address taken
    99  0000                     
   100 ;; Function _TEST_V2 is unused but had its address taken
   101  0000                     
   102 ;; Function _TEST_V3 is unused but had its address taken
   103  0000                     
   104 ;; Function _TEST_V4 is unused but had its address taken
   105  0000                     
   106 ;; Function _TEST_V5 is unused but had its address taken
   107  0000                     
   108 ;; Function _TEST_V6 is unused but had its address taken
   109  0000                     
   110                           	psect	idataBANK1
   111  0010DC                     __pidataBANK1:
   112                           	opt callstack 0
   113                           
   114                           ;initializer for main@F779
   115  0010DC  000C               	dw	12
   116  0010DE  002D               	dw	45
   117  0010E0  003B               	dw	59
   118  0010E2  003C               	dw	60
   119  0010E4  0069               	dw	105
   120  0010E6  0077               	dw	119
   121  0010E8  0078               	dw	120
   122  0010EA  009B               	dw	155
   123  0010EC  00B3               	dw	179
   124  0010EE  00B4               	dw	180
   125  0010F0  00CB               	dw	203
   126  0010F2  00EF               	dw	239
   127  0010F4  00F0               	dw	240
   128  0010F6  0102               	dw	258
   129  0010F8  012B               	dw	299
   130  0010FA  012C               	dw	300
   131  0010FC  013B               	dw	315
   132  0010FE  0167               	dw	359
   133  001100  0168               	dw	360
   134                           
   135                           	psect	mediumconst
   136  003318                     __pmediumconst:
   137                           	opt callstack 0
   138  003318  00                 	db	0
   139  003319                     _cosineTable:
   140                           	opt callstack 0
   141                           
   142                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   143  003319  0000               	dw	0
   144  00331B  3F80               	dw	16256
   145                           
   146                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   147  00331D  F605               	dw	62981
   148  00331F  3F7F               	dw	16255
   149                           
   150                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   151  003321  D814               	dw	55316
   152  003323  3F7F               	dw	16255
   153                           
   154                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   155  003325  A62F               	dw	42543
   156  003327  3F7F               	dw	16255
   157                           
   158                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   159  003329  605C               	dw	24668
   160  00332B  3F7F               	dw	16255
   161                           
   162                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   163  00332D  069E               	dw	1694
   164  00332F  3F7F               	dw	16255
   165                           
   166                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   167  003331  98FD               	dw	39165
   168  003333  3F7E               	dw	16254
   169                           
   170                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   171  003335  1781               	dw	6017
   172  003337  3F7E               	dw	16254
   173                           
   174                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   175  003339  8235               	dw	33333
   176  00333B  3F7D               	dw	16253
   177                           
   178                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   179  00333D  D925               	dw	55589
   180  00333F  3F7C               	dw	16252
   181                           
   182                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   183  003341  1C5C               	dw	7260
   184  003343  3F7C               	dw	16252
   185                           
   186                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   187  003345  4BEB               	dw	19435
   188  003347  3F7B               	dw	16251
   189                           
   190                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   191  003349  67E2               	dw	26594
   192  00334B  3F7A               	dw	16250
   193                           
   194                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   195  00334D  7051               	dw	28753
   196  00334F  3F79               	dw	16249
   197                           
   198                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   199  003351  654D               	dw	25933
   200  003353  3F78               	dw	16248
   201                           
   202                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   203  003355  46EA               	dw	18154
   204  003357  3F77               	dw	16247
   205                           
   206                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   207  003359  153F               	dw	5439
   208  00335B  3F76               	dw	16246
   209                           
   210                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   211  00335D  D063               	dw	53347
   212  00335F  3F74               	dw	16244
   213                           
   214                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   215  003361  7871               	dw	30833
   216  003363  3F73               	dw	16243
   217                           
   218                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   219  003365  0D81               	dw	3457
   220  003367  3F72               	dw	16242
   221                           
   222                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   223  003369  8FB2               	dw	36786
   224  00336B  3F70               	dw	16240
   225                           
   226                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   227  00336D  FF20               	dw	65312
   228  00336F  3F6E               	dw	16238
   229                           
   230                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   231  003371  5BEC               	dw	23532
   232  003373  3F6D               	dw	16237
   233                           
   234                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   235  003375  A635               	dw	42549
   236  003377  3F6B               	dw	16235
   237                           
   238                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   239  003379  DE1D               	dw	56861
   240  00337B  3F69               	dw	16233
   241                           
   242                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   243  00337D  03CA               	dw	970
   244  00337F  3F68               	dw	16232
   245                           
   246                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   247  003381  175E               	dw	5982
   248  003383  3F66               	dw	16230
   249                           
   250                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   251  003385  1901               	dw	6401
   252  003387  3F64               	dw	16228
   253                           
   254                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   255  003389  08DA               	dw	2266
   256  00338B  3F62               	dw	16226
   257                           
   258                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   259  00338D  E714               	dw	59156
   260  00338F  3F5F               	dw	16223
   261                           
   262                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   263  003391  B3D7               	dw	46039
   264  003393  3F5D               	dw	16221
   265                           
   266                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   267  003395  6F51               	dw	28497
   268  003397  3F5B               	dw	16219
   269                           
   270                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   271  003399  19AE               	dw	6574
   272  00339B  3F59               	dw	16217
   273                           
   274                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   275  00339D  B31D               	dw	45853
   276  00339F  3F56               	dw	16214
   277                           
   278                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   279  0033A1  3BCE               	dw	15310
   280  0033A3  3F54               	dw	16212
   281                           
   282                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   283  0033A5  B3F3               	dw	46067
   284  0033A7  3F51               	dw	16209
   285                           
   286                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   287  0033A9  1BBD               	dw	7101
   288  0033AB  3F4F               	dw	16207
   289                           
   290                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   291  0033AD  7360               	dw	29536
   292  0033AF  3F4C               	dw	16204
   293                           
   294                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   295  0033B1  BB13               	dw	47891
   296  0033B3  3F49               	dw	16201
   297                           
   298                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   299  0033B5  F30A               	dw	62218
   300  0033B7  3F46               	dw	16198
   301                           
   302                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   303  0033B9  1B7D               	dw	7037
   304  0033BB  3F44               	dw	16196
   305                           
   306                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   307  0033BD  34A6               	dw	13478
   308  0033BF  3F41               	dw	16193
   309                           
   310                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   311  0033C1  3EBD               	dw	16061
   312  0033C3  3F3E               	dw	16190
   313                           
   314                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   315  0033C5  39FF               	dw	14847
   316  0033C7  3F3B               	dw	16187
   317                           
   318                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   319  0033C9  26A7               	dw	9895
   320  0033CB  3F38               	dw	16184
   321                           
   322                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   323  0033CD  04F3               	dw	1267
   324  0033CF  3F35               	dw	16181
   325                           
   326                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   327  0033D1  D522               	dw	54562
   328  0033D3  3F31               	dw	16177
   329                           
   330                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   331  0033D5  9772               	dw	38770
   332  0033D7  3F2E               	dw	16174
   333                           
   334                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   335  0033D9  4C25               	dw	19493
   336  0033DB  3F2B               	dw	16171
   337                           
   338                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   339  0033DD  F37C               	dw	62332
   340  0033DF  3F27               	dw	16167
   341                           
   342                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   343  0033E1  8DBB               	dw	36283
   344  0033E3  3F24               	dw	16164
   345                           
   346                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   347  0033E5  1B24               	dw	6948
   348  0033E7  3F21               	dw	16161
   349                           
   350                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   351  0033E9  9BFE               	dw	39934
   352  0033EB  3F1D               	dw	16157
   353                           
   354                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   355  0033ED  108D               	dw	4237
   356  0033EF  3F1A               	dw	16154
   357                           
   358                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   359  0033F1  7918               	dw	31000
   360  0033F3  3F16               	dw	16150
   361                           
   362                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   363  0033F5  D5E8               	dw	54760
   364  0033F7  3F12               	dw	16146
   365                           
   366                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   367  0033F9  2744               	dw	10052
   368  0033FB  3F0F               	dw	16143
   369                           
   370                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   371  0033FD  6D77               	dw	28023
   372  0033FF  3F0B               	dw	16139
   373                           
   374                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   375  003401  A8CA               	dw	43210
   376  003403  3F07               	dw	16135
   377                           
   378                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   379  003405  D989               	dw	55689
   380  003407  3F03               	dw	16131
   381                           
   382                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   383  003409  0000               	dw	0
   384  00340B  3F00               	dw	16128
   385                           
   386                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   387  00340D  38F7               	dw	14583
   388  00340F  3EF8               	dw	16120
   389                           
   390                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   391  003411  5E94               	dw	24212
   392  003413  3EF0               	dw	16112
   393                           
   394                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   395  003415  7171               	dw	29041
   396  003417  3EE8               	dw	16104
   397                           
   398                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   399  003419  722F               	dw	29231
   400  00341B  3EE0               	dw	16096
   401                           
   402                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   403  00341D  616C               	dw	24940
   404  00341F  3ED8               	dw	16088
   405                           
   406                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   407  003421  3FC9               	dw	16329
   408  003423  3ED0               	dw	16080
   409                           
   410                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   411  003425  0DE9               	dw	3561
   412  003427  3EC8               	dw	16072
   413                           
   414                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   415  003429  CC6F               	dw	52335
   416  00342B  3EBF               	dw	16063
   417                           
   418                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   419  00342D  7C01               	dw	31745
   420  00342F  3EB7               	dw	16055
   421                           
   422                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   423  003431  1D44               	dw	7492
   424  003433  3EAF               	dw	16047
   425                           
   426                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   427  003435  B0DF               	dw	45279
   428  003437  3EA6               	dw	16038
   429                           
   430                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   431  003439  377A               	dw	14202
   432  00343B  3E9E               	dw	16030
   433                           
   434                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   435  00343D  B1BE               	dw	45502
   436  00343F  3E95               	dw	16021
   437                           
   438                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   439  003441  2057               	dw	8279
   440  003443  3E8D               	dw	16013
   441                           
   442                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   443  003445  83EE               	dw	33774
   444  003447  3E84               	dw	16004
   445                           
   446                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   447  003449  BA60               	dw	47712
   448  00344B  3E77               	dw	15991
   449                           
   450                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   451  00344D  5992               	dw	22930
   452  00344F  3E66               	dw	15974
   453                           
   454                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   455  003451  E6CD               	dw	59085
   456  003453  3E54               	dw	15956
   457                           
   458                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   459  003455  636F               	dw	25455
   460  003457  3E43               	dw	15939
   461                           
   462                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   463  003459  D0D4               	dw	53460
   464  00345B  3E31               	dw	15921
   465                           
   466                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   467  00345D  305B               	dw	12379
   468  00345F  3E20               	dw	15904
   469                           
   470                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   471  003461  8365               	dw	33637
   472  003463  3E0E               	dw	15886
   473                           
   474                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   475  003465  96A2               	dw	38562
   476  003467  3DF9               	dw	15865
   477                           
   478                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   479  003469  1305               	dw	4869
   480  00346B  3DD6               	dw	15830
   481                           
   482                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   483  00346D  7EB6               	dw	32438
   484  00346F  3DB2               	dw	15794
   485                           
   486                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   487  003471  DC7B               	dw	56443
   488  003473  3D8E               	dw	15758
   489                           
   490                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   491  003475  5E3A               	dw	24122
   492  003477  3D56               	dw	15702
   493                           
   494                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   495  003479  F2C6               	dw	62150
   496  00347B  3D0E               	dw	15630
   497                           
   498                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   499  00347D  F859               	dw	63577
   500  00347F  3C8E               	dw	15502
   501                           
   502                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   503  003481  3132               	dw	12594
   504  003483  248D               	dw	9357
   505  003485  F859               	dw	63577
   506  003487  BC8E               	dw	48270
   507  003489  F2C6               	dw	62150
   508  00348B  BD0E               	dw	48398
   509  00348D  5E3A               	dw	24122
   510  00348F  BD56               	dw	48470
   511  003491  DC7B               	dw	56443
   512  003493  BD8E               	dw	48526
   513  003495  7EB6               	dw	32438
   514  003497  BDB2               	dw	48562
   515  003499  1305               	dw	4869
   516  00349B  BDD6               	dw	48598
   517  00349D  96A2               	dw	38562
   518  00349F  BDF9               	dw	48633
   519  0034A1  8365               	dw	33637
   520  0034A3  BE0E               	dw	48654
   521  0034A5  305B               	dw	12379
   522  0034A7  BE20               	dw	48672
   523  0034A9  D0D4               	dw	53460
   524  0034AB  BE31               	dw	48689
   525  0034AD  636F               	dw	25455
   526  0034AF  BE43               	dw	48707
   527  0034B1  E6CD               	dw	59085
   528  0034B3  BE54               	dw	48724
   529  0034B5  5992               	dw	22930
   530  0034B7  BE66               	dw	48742
   531  0034B9  BA60               	dw	47712
   532  0034BB  BE77               	dw	48759
   533  0034BD  83EE               	dw	33774
   534  0034BF  BE84               	dw	48772
   535  0034C1  2057               	dw	8279
   536  0034C3  BE8D               	dw	48781
   537  0034C5  B1BE               	dw	45502
   538  0034C7  BE95               	dw	48789
   539  0034C9  377A               	dw	14202
   540  0034CB  BE9E               	dw	48798
   541  0034CD  B0DF               	dw	45279
   542  0034CF  BEA6               	dw	48806
   543  0034D1  1D44               	dw	7492
   544  0034D3  BEAF               	dw	48815
   545  0034D5  7C01               	dw	31745
   546  0034D7  BEB7               	dw	48823
   547  0034D9  CC6F               	dw	52335
   548  0034DB  BEBF               	dw	48831
   549  0034DD  0DE9               	dw	3561
   550  0034DF  BEC8               	dw	48840
   551  0034E1  3FC9               	dw	16329
   552  0034E3  BED0               	dw	48848
   553  0034E5  616C               	dw	24940
   554  0034E7  BED8               	dw	48856
   555  0034E9  722F               	dw	29231
   556  0034EB  BEE0               	dw	48864
   557  0034ED  7171               	dw	29041
   558  0034EF  BEE8               	dw	48872
   559  0034F1  5E94               	dw	24212
   560  0034F3  BEF0               	dw	48880
   561  0034F5  38F7               	dw	14583
   562  0034F7  BEF8               	dw	48888
   563  0034F9  0000               	dw	0
   564  0034FB  BF00               	dw	48896
   565  0034FD  D989               	dw	55689
   566  0034FF  BF03               	dw	48899
   567  003501  A8CA               	dw	43210
   568  003503  BF07               	dw	48903
   569  003505  6D77               	dw	28023
   570  003507  BF0B               	dw	48907
   571  003509  2744               	dw	10052
   572  00350B  BF0F               	dw	48911
   573  00350D  D5E8               	dw	54760
   574  00350F  BF12               	dw	48914
   575  003511  7918               	dw	31000
   576  003513  BF16               	dw	48918
   577  003515  108D               	dw	4237
   578  003517  BF1A               	dw	48922
   579  003519  9BFE               	dw	39934
   580  00351B  BF1D               	dw	48925
   581  00351D  1B24               	dw	6948
   582  00351F  BF21               	dw	48929
   583  003521  8DBB               	dw	36283
   584  003523  BF24               	dw	48932
   585  003525  F37C               	dw	62332
   586  003527  BF27               	dw	48935
   587  003529  4C25               	dw	19493
   588  00352B  BF2B               	dw	48939
   589  00352D  9772               	dw	38770
   590  00352F  BF2E               	dw	48942
   591  003531  D522               	dw	54562
   592  003533  BF31               	dw	48945
   593  003535  04F3               	dw	1267
   594  003537  BF35               	dw	48949
   595  003539  26A7               	dw	9895
   596  00353B  BF38               	dw	48952
   597  00353D  39FF               	dw	14847
   598  00353F  BF3B               	dw	48955
   599  003541  3EBD               	dw	16061
   600  003543  BF3E               	dw	48958
   601  003545  34A6               	dw	13478
   602  003547  BF41               	dw	48961
   603  003549  1B7D               	dw	7037
   604  00354B  BF44               	dw	48964
   605  00354D  F30A               	dw	62218
   606  00354F  BF46               	dw	48966
   607  003551  BB13               	dw	47891
   608  003553  BF49               	dw	48969
   609  003555  7360               	dw	29536
   610  003557  BF4C               	dw	48972
   611  003559  1BBD               	dw	7101
   612  00355B  BF4F               	dw	48975
   613  00355D  B3F3               	dw	46067
   614  00355F  BF51               	dw	48977
   615  003561  3BCE               	dw	15310
   616  003563  BF54               	dw	48980
   617  003565  B31D               	dw	45853
   618  003567  BF56               	dw	48982
   619  003569  19AE               	dw	6574
   620  00356B  BF59               	dw	48985
   621  00356D  6F51               	dw	28497
   622  00356F  BF5B               	dw	48987
   623  003571  B3D7               	dw	46039
   624  003573  BF5D               	dw	48989
   625  003575  E714               	dw	59156
   626  003577  BF5F               	dw	48991
   627  003579  08DA               	dw	2266
   628  00357B  BF62               	dw	48994
   629  00357D  1901               	dw	6401
   630  00357F  BF64               	dw	48996
   631  003581  175E               	dw	5982
   632  003583  BF66               	dw	48998
   633  003585  03CA               	dw	970
   634  003587  BF68               	dw	49000
   635  003589  DE1D               	dw	56861
   636  00358B  BF69               	dw	49001
   637  00358D  A635               	dw	42549
   638  00358F  BF6B               	dw	49003
   639  003591  5BEC               	dw	23532
   640  003593  BF6D               	dw	49005
   641  003595  FF20               	dw	65312
   642  003597  BF6E               	dw	49006
   643  003599  8FB2               	dw	36786
   644  00359B  BF70               	dw	49008
   645  00359D  0D81               	dw	3457
   646  00359F  BF72               	dw	49010
   647  0035A1  7871               	dw	30833
   648  0035A3  BF73               	dw	49011
   649  0035A5  D063               	dw	53347
   650  0035A7  BF74               	dw	49012
   651  0035A9  153F               	dw	5439
   652  0035AB  BF76               	dw	49014
   653  0035AD  46EA               	dw	18154
   654  0035AF  BF77               	dw	49015
   655  0035B1  654D               	dw	25933
   656  0035B3  BF78               	dw	49016
   657  0035B5  7051               	dw	28753
   658  0035B7  BF79               	dw	49017
   659  0035B9  67E2               	dw	26594
   660  0035BB  BF7A               	dw	49018
   661  0035BD  4BEB               	dw	19435
   662  0035BF  BF7B               	dw	49019
   663  0035C1  1C5C               	dw	7260
   664  0035C3  BF7C               	dw	49020
   665  0035C5  D925               	dw	55589
   666  0035C7  BF7C               	dw	49020
   667  0035C9  8235               	dw	33333
   668  0035CB  BF7D               	dw	49021
   669  0035CD  1781               	dw	6017
   670  0035CF  BF7E               	dw	49022
   671  0035D1  98FD               	dw	39165
   672  0035D3  BF7E               	dw	49022
   673  0035D5  069E               	dw	1694
   674  0035D7  BF7F               	dw	49023
   675  0035D9  605C               	dw	24668
   676  0035DB  BF7F               	dw	49023
   677  0035DD  A62F               	dw	42543
   678  0035DF  BF7F               	dw	49023
   679  0035E1  D814               	dw	55316
   680  0035E3  BF7F               	dw	49023
   681  0035E5  F605               	dw	62981
   682  0035E7  BF7F               	dw	49023
   683  0035E9  0000               	dw	0
   684  0035EB  BF80               	dw	49024
   685  0035ED  F605               	dw	62981
   686  0035EF  BF7F               	dw	49023
   687  0035F1  D814               	dw	55316
   688  0035F3  BF7F               	dw	49023
   689  0035F5  A62F               	dw	42543
   690  0035F7  BF7F               	dw	49023
   691  0035F9  605C               	dw	24668
   692  0035FB  BF7F               	dw	49023
   693  0035FD  069E               	dw	1694
   694  0035FF  BF7F               	dw	49023
   695  003601  98FD               	dw	39165
   696  003603  BF7E               	dw	49022
   697  003605  1781               	dw	6017
   698  003607  BF7E               	dw	49022
   699  003609  8235               	dw	33333
   700  00360B  BF7D               	dw	49021
   701  00360D  D925               	dw	55589
   702  00360F  BF7C               	dw	49020
   703  003611  1C5C               	dw	7260
   704  003613  BF7C               	dw	49020
   705  003615  4BEB               	dw	19435
   706  003617  BF7B               	dw	49019
   707  003619  67E2               	dw	26594
   708  00361B  BF7A               	dw	49018
   709  00361D  7051               	dw	28753
   710  00361F  BF79               	dw	49017
   711  003621  654D               	dw	25933
   712  003623  BF78               	dw	49016
   713  003625  46EA               	dw	18154
   714  003627  BF77               	dw	49015
   715  003629  153F               	dw	5439
   716  00362B  BF76               	dw	49014
   717  00362D  D063               	dw	53347
   718  00362F  BF74               	dw	49012
   719  003631  7871               	dw	30833
   720  003633  BF73               	dw	49011
   721  003635  0D81               	dw	3457
   722  003637  BF72               	dw	49010
   723  003639  8FB2               	dw	36786
   724  00363B  BF70               	dw	49008
   725  00363D  FF20               	dw	65312
   726  00363F  BF6E               	dw	49006
   727  003641  5BEC               	dw	23532
   728  003643  BF6D               	dw	49005
   729  003645  A635               	dw	42549
   730  003647  BF6B               	dw	49003
   731  003649  DE1D               	dw	56861
   732  00364B  BF69               	dw	49001
   733  00364D  03CA               	dw	970
   734  00364F  BF68               	dw	49000
   735  003651  175E               	dw	5982
   736  003653  BF66               	dw	48998
   737  003655  1901               	dw	6401
   738  003657  BF64               	dw	48996
   739  003659  08DA               	dw	2266
   740  00365B  BF62               	dw	48994
   741  00365D  E714               	dw	59156
   742  00365F  BF5F               	dw	48991
   743  003661  B3D7               	dw	46039
   744  003663  BF5D               	dw	48989
   745  003665  6F51               	dw	28497
   746  003667  BF5B               	dw	48987
   747  003669  19AE               	dw	6574
   748  00366B  BF59               	dw	48985
   749  00366D  B31D               	dw	45853
   750  00366F  BF56               	dw	48982
   751  003671  3BCE               	dw	15310
   752  003673  BF54               	dw	48980
   753  003675  B3F3               	dw	46067
   754  003677  BF51               	dw	48977
   755  003679  1BBD               	dw	7101
   756  00367B  BF4F               	dw	48975
   757  00367D  7360               	dw	29536
   758  00367F  BF4C               	dw	48972
   759  003681  BB13               	dw	47891
   760  003683  BF49               	dw	48969
   761  003685  F30A               	dw	62218
   762  003687  BF46               	dw	48966
   763  003689  1B7D               	dw	7037
   764  00368B  BF44               	dw	48964
   765  00368D  34A6               	dw	13478
   766  00368F  BF41               	dw	48961
   767  003691  3EBD               	dw	16061
   768  003693  BF3E               	dw	48958
   769  003695  39FF               	dw	14847
   770  003697  BF3B               	dw	48955
   771  003699  26A7               	dw	9895
   772  00369B  BF38               	dw	48952
   773  00369D  04F3               	dw	1267
   774  00369F  BF35               	dw	48949
   775  0036A1  D522               	dw	54562
   776  0036A3  BF31               	dw	48945
   777  0036A5  9772               	dw	38770
   778  0036A7  BF2E               	dw	48942
   779  0036A9  4C25               	dw	19493
   780  0036AB  BF2B               	dw	48939
   781  0036AD  F37C               	dw	62332
   782  0036AF  BF27               	dw	48935
   783  0036B1  8DBB               	dw	36283
   784  0036B3  BF24               	dw	48932
   785  0036B5  1B24               	dw	6948
   786  0036B7  BF21               	dw	48929
   787  0036B9  9BFE               	dw	39934
   788  0036BB  BF1D               	dw	48925
   789  0036BD  108D               	dw	4237
   790  0036BF  BF1A               	dw	48922
   791  0036C1  7918               	dw	31000
   792  0036C3  BF16               	dw	48918
   793  0036C5  D5E8               	dw	54760
   794  0036C7  BF12               	dw	48914
   795  0036C9  2744               	dw	10052
   796  0036CB  BF0F               	dw	48911
   797  0036CD  6D77               	dw	28023
   798  0036CF  BF0B               	dw	48907
   799  0036D1  A8CA               	dw	43210
   800  0036D3  BF07               	dw	48903
   801  0036D5  D989               	dw	55689
   802  0036D7  BF03               	dw	48899
   803  0036D9  0000               	dw	0
   804  0036DB  BF00               	dw	48896
   805  0036DD  38F7               	dw	14583
   806  0036DF  BEF8               	dw	48888
   807  0036E1  5E94               	dw	24212
   808  0036E3  BEF0               	dw	48880
   809  0036E5  7171               	dw	29041
   810  0036E7  BEE8               	dw	48872
   811  0036E9  722F               	dw	29231
   812  0036EB  BEE0               	dw	48864
   813  0036ED  616C               	dw	24940
   814  0036EF  BED8               	dw	48856
   815  0036F1  3FC9               	dw	16329
   816  0036F3  BED0               	dw	48848
   817  0036F5  0DE9               	dw	3561
   818  0036F7  BEC8               	dw	48840
   819  0036F9  CC6F               	dw	52335
   820  0036FB  BEBF               	dw	48831
   821  0036FD  7C01               	dw	31745
   822  0036FF  BEB7               	dw	48823
   823  003701  1D44               	dw	7492
   824  003703  BEAF               	dw	48815
   825  003705  B0DF               	dw	45279
   826  003707  BEA6               	dw	48806
   827  003709  377A               	dw	14202
   828  00370B  BE9E               	dw	48798
   829  00370D  B1BE               	dw	45502
   830  00370F  BE95               	dw	48789
   831  003711  2057               	dw	8279
   832  003713  BE8D               	dw	48781
   833  003715  83EE               	dw	33774
   834  003717  BE84               	dw	48772
   835  003719  BA60               	dw	47712
   836  00371B  BE77               	dw	48759
   837  00371D  5992               	dw	22930
   838  00371F  BE66               	dw	48742
   839  003721  E6CD               	dw	59085
   840  003723  BE54               	dw	48724
   841  003725  636F               	dw	25455
   842  003727  BE43               	dw	48707
   843  003729  D0D4               	dw	53460
   844  00372B  BE31               	dw	48689
   845  00372D  305B               	dw	12379
   846  00372F  BE20               	dw	48672
   847  003731  8365               	dw	33637
   848  003733  BE0E               	dw	48654
   849  003735  96A2               	dw	38562
   850  003737  BDF9               	dw	48633
   851  003739  1305               	dw	4869
   852  00373B  BDD6               	dw	48598
   853  00373D  7EB6               	dw	32438
   854  00373F  BDB2               	dw	48562
   855  003741  DC7B               	dw	56443
   856  003743  BD8E               	dw	48526
   857  003745  5E3A               	dw	24122
   858  003747  BD56               	dw	48470
   859  003749  F2C6               	dw	62150
   860  00374B  BD0E               	dw	48398
   861  00374D  F859               	dw	63577
   862  00374F  BC8E               	dw	48270
   863  003751  C9CA               	dw	51658
   864  003753  A553               	dw	42323
   865                           
   866                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   867  003755  F859               	dw	63577
   868  003757  3C8E               	dw	15502
   869                           
   870                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   871  003759  F2C6               	dw	62150
   872  00375B  3D0E               	dw	15630
   873                           
   874                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   875  00375D  5E3A               	dw	24122
   876  00375F  3D56               	dw	15702
   877                           
   878                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   879  003761  DC7B               	dw	56443
   880  003763  3D8E               	dw	15758
   881                           
   882                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   883  003765  7EB6               	dw	32438
   884  003767  3DB2               	dw	15794
   885                           
   886                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   887  003769  1305               	dw	4869
   888  00376B  3DD6               	dw	15830
   889                           
   890                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   891  00376D  96A2               	dw	38562
   892  00376F  3DF9               	dw	15865
   893                           
   894                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   895  003771  8365               	dw	33637
   896  003773  3E0E               	dw	15886
   897                           
   898                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   899  003775  305B               	dw	12379
   900  003777  3E20               	dw	15904
   901                           
   902                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   903  003779  D0D4               	dw	53460
   904  00377B  3E31               	dw	15921
   905                           
   906                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   907  00377D  636F               	dw	25455
   908  00377F  3E43               	dw	15939
   909                           
   910                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   911  003781  E6CD               	dw	59085
   912  003783  3E54               	dw	15956
   913                           
   914                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   915  003785  5992               	dw	22930
   916  003787  3E66               	dw	15974
   917                           
   918                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   919  003789  BA60               	dw	47712
   920  00378B  3E77               	dw	15991
   921                           
   922                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   923  00378D  83EE               	dw	33774
   924  00378F  3E84               	dw	16004
   925                           
   926                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   927  003791  2057               	dw	8279
   928  003793  3E8D               	dw	16013
   929                           
   930                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   931  003795  B1BE               	dw	45502
   932  003797  3E95               	dw	16021
   933                           
   934                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   935  003799  377A               	dw	14202
   936  00379B  3E9E               	dw	16030
   937                           
   938                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   939  00379D  B0DF               	dw	45279
   940  00379F  3EA6               	dw	16038
   941                           
   942                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   943  0037A1  1D44               	dw	7492
   944  0037A3  3EAF               	dw	16047
   945                           
   946                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   947  0037A5  7C01               	dw	31745
   948  0037A7  3EB7               	dw	16055
   949                           
   950                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   951  0037A9  CC6F               	dw	52335
   952  0037AB  3EBF               	dw	16063
   953                           
   954                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   955  0037AD  0DE9               	dw	3561
   956  0037AF  3EC8               	dw	16072
   957                           
   958                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   959  0037B1  3FC9               	dw	16329
   960  0037B3  3ED0               	dw	16080
   961                           
   962                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   963  0037B5  616C               	dw	24940
   964  0037B7  3ED8               	dw	16088
   965                           
   966                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   967  0037B9  722F               	dw	29231
   968  0037BB  3EE0               	dw	16096
   969                           
   970                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   971  0037BD  7171               	dw	29041
   972  0037BF  3EE8               	dw	16104
   973                           
   974                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   975  0037C1  5E94               	dw	24212
   976  0037C3  3EF0               	dw	16112
   977                           
   978                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   979  0037C5  38F7               	dw	14583
   980  0037C7  3EF8               	dw	16120
   981                           
   982                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   983  0037C9  0000               	dw	0
   984  0037CB  3F00               	dw	16128
   985                           
   986                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   987  0037CD  D989               	dw	55689
   988  0037CF  3F03               	dw	16131
   989                           
   990                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   991  0037D1  A8CA               	dw	43210
   992  0037D3  3F07               	dw	16135
   993                           
   994                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   995  0037D5  6D77               	dw	28023
   996  0037D7  3F0B               	dw	16139
   997                           
   998                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
   999  0037D9  2744               	dw	10052
  1000  0037DB  3F0F               	dw	16143
  1001                           
  1002                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1003  0037DD  D5E8               	dw	54760
  1004  0037DF  3F12               	dw	16146
  1005                           
  1006                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1007  0037E1  7918               	dw	31000
  1008  0037E3  3F16               	dw	16150
  1009                           
  1010                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1011  0037E5  108D               	dw	4237
  1012  0037E7  3F1A               	dw	16154
  1013                           
  1014                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1015  0037E9  9BFE               	dw	39934
  1016  0037EB  3F1D               	dw	16157
  1017                           
  1018                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1019  0037ED  1B24               	dw	6948
  1020  0037EF  3F21               	dw	16161
  1021                           
  1022                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1023  0037F1  8DBB               	dw	36283
  1024  0037F3  3F24               	dw	16164
  1025                           
  1026                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1027  0037F5  F37C               	dw	62332
  1028  0037F7  3F27               	dw	16167
  1029                           
  1030                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1031  0037F9  4C25               	dw	19493
  1032  0037FB  3F2B               	dw	16171
  1033                           
  1034                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1035  0037FD  9772               	dw	38770
  1036  0037FF  3F2E               	dw	16174
  1037                           
  1038                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1039  003801  D522               	dw	54562
  1040  003803  3F31               	dw	16177
  1041                           
  1042                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1043  003805  04F3               	dw	1267
  1044  003807  3F35               	dw	16181
  1045                           
  1046                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1047  003809  26A7               	dw	9895
  1048  00380B  3F38               	dw	16184
  1049                           
  1050                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1051  00380D  39FF               	dw	14847
  1052  00380F  3F3B               	dw	16187
  1053                           
  1054                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1055  003811  3EBD               	dw	16061
  1056  003813  3F3E               	dw	16190
  1057                           
  1058                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1059  003815  34A6               	dw	13478
  1060  003817  3F41               	dw	16193
  1061                           
  1062                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1063  003819  1B7D               	dw	7037
  1064  00381B  3F44               	dw	16196
  1065                           
  1066                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1067  00381D  F30A               	dw	62218
  1068  00381F  3F46               	dw	16198
  1069                           
  1070                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1071  003821  BB13               	dw	47891
  1072  003823  3F49               	dw	16201
  1073                           
  1074                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1075  003825  7360               	dw	29536
  1076  003827  3F4C               	dw	16204
  1077                           
  1078                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1079  003829  1BBD               	dw	7101
  1080  00382B  3F4F               	dw	16207
  1081                           
  1082                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1083  00382D  B3F3               	dw	46067
  1084  00382F  3F51               	dw	16209
  1085                           
  1086                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1087  003831  3BCE               	dw	15310
  1088  003833  3F54               	dw	16212
  1089                           
  1090                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1091  003835  B31D               	dw	45853
  1092  003837  3F56               	dw	16214
  1093                           
  1094                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1095  003839  19AE               	dw	6574
  1096  00383B  3F59               	dw	16217
  1097                           
  1098                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1099  00383D  6F51               	dw	28497
  1100  00383F  3F5B               	dw	16219
  1101                           
  1102                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1103  003841  B3D7               	dw	46039
  1104  003843  3F5D               	dw	16221
  1105                           
  1106                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1107  003845  E714               	dw	59156
  1108  003847  3F5F               	dw	16223
  1109                           
  1110                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1111  003849  08DA               	dw	2266
  1112  00384B  3F62               	dw	16226
  1113                           
  1114                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1115  00384D  1901               	dw	6401
  1116  00384F  3F64               	dw	16228
  1117                           
  1118                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1119  003851  175E               	dw	5982
  1120  003853  3F66               	dw	16230
  1121                           
  1122                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1123  003855  03CA               	dw	970
  1124  003857  3F68               	dw	16232
  1125                           
  1126                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1127  003859  DE1D               	dw	56861
  1128  00385B  3F69               	dw	16233
  1129                           
  1130                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1131  00385D  A635               	dw	42549
  1132  00385F  3F6B               	dw	16235
  1133                           
  1134                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1135  003861  5BEC               	dw	23532
  1136  003863  3F6D               	dw	16237
  1137                           
  1138                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1139  003865  FF20               	dw	65312
  1140  003867  3F6E               	dw	16238
  1141                           
  1142                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1143  003869  8FB2               	dw	36786
  1144  00386B  3F70               	dw	16240
  1145                           
  1146                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1147  00386D  0D81               	dw	3457
  1148  00386F  3F72               	dw	16242
  1149                           
  1150                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1151  003871  7871               	dw	30833
  1152  003873  3F73               	dw	16243
  1153                           
  1154                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1155  003875  D063               	dw	53347
  1156  003877  3F74               	dw	16244
  1157                           
  1158                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1159  003879  153F               	dw	5439
  1160  00387B  3F76               	dw	16246
  1161                           
  1162                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1163  00387D  46EA               	dw	18154
  1164  00387F  3F77               	dw	16247
  1165                           
  1166                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1167  003881  654D               	dw	25933
  1168  003883  3F78               	dw	16248
  1169                           
  1170                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1171  003885  7051               	dw	28753
  1172  003887  3F79               	dw	16249
  1173                           
  1174                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1175  003889  67E2               	dw	26594
  1176  00388B  3F7A               	dw	16250
  1177                           
  1178                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1179  00388D  4BEB               	dw	19435
  1180  00388F  3F7B               	dw	16251
  1181                           
  1182                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1183  003891  1C5C               	dw	7260
  1184  003893  3F7C               	dw	16252
  1185                           
  1186                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1187  003895  D925               	dw	55589
  1188  003897  3F7C               	dw	16252
  1189                           
  1190                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1191  003899  8235               	dw	33333
  1192  00389B  3F7D               	dw	16253
  1193                           
  1194                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1195  00389D  1781               	dw	6017
  1196  00389F  3F7E               	dw	16254
  1197                           
  1198                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1199  0038A1  98FD               	dw	39165
  1200  0038A3  3F7E               	dw	16254
  1201                           
  1202                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1203  0038A5  069E               	dw	1694
  1204  0038A7  3F7F               	dw	16255
  1205                           
  1206                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1207  0038A9  605C               	dw	24668
  1208  0038AB  3F7F               	dw	16255
  1209                           
  1210                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1211  0038AD  A62F               	dw	42543
  1212  0038AF  3F7F               	dw	16255
  1213                           
  1214                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1215  0038B1  D814               	dw	55316
  1216  0038B3  3F7F               	dw	16255
  1217                           
  1218                           ;../trigTables.h: 13: static const double sineTable[360] = {;../trigTables.h: 36: static
      +                           const double cosineTable[360] = {
  1219  0038B5  F605               	dw	62981
  1220  0038B7  3F7F               	dw	16255
  1221  0038B9                     __end_of_cosineTable:
  1222                           	opt callstack 0
  1223  0038B9                     _sineTable:
  1224                           	opt callstack 0
  1225                           
  1226                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1227  0038B9  0000               	dw	0
  1228  0038BB  0000               	dw	0
  1229                           
  1230                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1231  0038BD  F859               	dw	63577
  1232  0038BF  3C8E               	dw	15502
  1233                           
  1234                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1235  0038C1  F2C6               	dw	62150
  1236  0038C3  3D0E               	dw	15630
  1237                           
  1238                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1239  0038C5  5E3A               	dw	24122
  1240  0038C7  3D56               	dw	15702
  1241                           
  1242                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1243  0038C9  DC7B               	dw	56443
  1244  0038CB  3D8E               	dw	15758
  1245                           
  1246                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1247  0038CD  7EB6               	dw	32438
  1248  0038CF  3DB2               	dw	15794
  1249                           
  1250                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1251  0038D1  1305               	dw	4869
  1252  0038D3  3DD6               	dw	15830
  1253                           
  1254                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1255  0038D5  96A2               	dw	38562
  1256  0038D7  3DF9               	dw	15865
  1257                           
  1258                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1259  0038D9  8365               	dw	33637
  1260  0038DB  3E0E               	dw	15886
  1261                           
  1262                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1263  0038DD  305B               	dw	12379
  1264  0038DF  3E20               	dw	15904
  1265                           
  1266                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1267  0038E1  D0D4               	dw	53460
  1268  0038E3  3E31               	dw	15921
  1269                           
  1270                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1271  0038E5  636F               	dw	25455
  1272  0038E7  3E43               	dw	15939
  1273                           
  1274                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1275  0038E9  E6CD               	dw	59085
  1276  0038EB  3E54               	dw	15956
  1277                           
  1278                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1279  0038ED  5992               	dw	22930
  1280  0038EF  3E66               	dw	15974
  1281                           
  1282                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1283  0038F1  BA60               	dw	47712
  1284  0038F3  3E77               	dw	15991
  1285                           
  1286                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1287  0038F5  83EE               	dw	33774
  1288  0038F7  3E84               	dw	16004
  1289                           
  1290                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1291  0038F9  2057               	dw	8279
  1292  0038FB  3E8D               	dw	16013
  1293                           
  1294                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1295  0038FD  B1BE               	dw	45502
  1296  0038FF  3E95               	dw	16021
  1297                           
  1298                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1299  003901  377A               	dw	14202
  1300  003903  3E9E               	dw	16030
  1301                           
  1302                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1303  003905  B0DF               	dw	45279
  1304  003907  3EA6               	dw	16038
  1305                           
  1306                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1307  003909  1D44               	dw	7492
  1308  00390B  3EAF               	dw	16047
  1309                           
  1310                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1311  00390D  7C01               	dw	31745
  1312  00390F  3EB7               	dw	16055
  1313                           
  1314                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1315  003911  CC6F               	dw	52335
  1316  003913  3EBF               	dw	16063
  1317                           
  1318                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1319  003915  0DE9               	dw	3561
  1320  003917  3EC8               	dw	16072
  1321                           
  1322                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1323  003919  3FC9               	dw	16329
  1324  00391B  3ED0               	dw	16080
  1325                           
  1326                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1327  00391D  616C               	dw	24940
  1328  00391F  3ED8               	dw	16088
  1329                           
  1330                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1331  003921  722F               	dw	29231
  1332  003923  3EE0               	dw	16096
  1333                           
  1334                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1335  003925  7171               	dw	29041
  1336  003927  3EE8               	dw	16104
  1337                           
  1338                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1339  003929  5E94               	dw	24212
  1340  00392B  3EF0               	dw	16112
  1341                           
  1342                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1343  00392D  38F7               	dw	14583
  1344  00392F  3EF8               	dw	16120
  1345                           
  1346                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1347  003931  0000               	dw	0
  1348  003933  3F00               	dw	16128
  1349                           
  1350                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1351  003935  D989               	dw	55689
  1352  003937  3F03               	dw	16131
  1353                           
  1354                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1355  003939  A8CA               	dw	43210
  1356  00393B  3F07               	dw	16135
  1357                           
  1358                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1359  00393D  6D77               	dw	28023
  1360  00393F  3F0B               	dw	16139
  1361                           
  1362                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1363  003941  2744               	dw	10052
  1364  003943  3F0F               	dw	16143
  1365                           
  1366                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1367  003945  D5E8               	dw	54760
  1368  003947  3F12               	dw	16146
  1369                           
  1370                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1371  003949  7918               	dw	31000
  1372  00394B  3F16               	dw	16150
  1373                           
  1374                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1375  00394D  108D               	dw	4237
  1376  00394F  3F1A               	dw	16154
  1377                           
  1378                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1379  003951  9BFE               	dw	39934
  1380  003953  3F1D               	dw	16157
  1381                           
  1382                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1383  003955  1B24               	dw	6948
  1384  003957  3F21               	dw	16161
  1385                           
  1386                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1387  003959  8DBB               	dw	36283
  1388  00395B  3F24               	dw	16164
  1389                           
  1390                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1391  00395D  F37C               	dw	62332
  1392  00395F  3F27               	dw	16167
  1393                           
  1394                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1395  003961  4C25               	dw	19493
  1396  003963  3F2B               	dw	16171
  1397                           
  1398                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1399  003965  9772               	dw	38770
  1400  003967  3F2E               	dw	16174
  1401                           
  1402                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1403  003969  D522               	dw	54562
  1404  00396B  3F31               	dw	16177
  1405                           
  1406                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1407  00396D  04F3               	dw	1267
  1408  00396F  3F35               	dw	16181
  1409                           
  1410                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1411  003971  26A7               	dw	9895
  1412  003973  3F38               	dw	16184
  1413                           
  1414                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1415  003975  39FF               	dw	14847
  1416  003977  3F3B               	dw	16187
  1417                           
  1418                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1419  003979  3EBD               	dw	16061
  1420  00397B  3F3E               	dw	16190
  1421                           
  1422                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1423  00397D  34A6               	dw	13478
  1424  00397F  3F41               	dw	16193
  1425                           
  1426                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1427  003981  1B7D               	dw	7037
  1428  003983  3F44               	dw	16196
  1429                           
  1430                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1431  003985  F30A               	dw	62218
  1432  003987  3F46               	dw	16198
  1433                           
  1434                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1435  003989  BB13               	dw	47891
  1436  00398B  3F49               	dw	16201
  1437                           
  1438                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1439  00398D  7360               	dw	29536
  1440  00398F  3F4C               	dw	16204
  1441                           
  1442                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1443  003991  1BBD               	dw	7101
  1444  003993  3F4F               	dw	16207
  1445                           
  1446                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1447  003995  B3F3               	dw	46067
  1448  003997  3F51               	dw	16209
  1449                           
  1450                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1451  003999  3BCE               	dw	15310
  1452  00399B  3F54               	dw	16212
  1453                           
  1454                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1455  00399D  B31D               	dw	45853
  1456  00399F  3F56               	dw	16214
  1457                           
  1458                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1459  0039A1  19AE               	dw	6574
  1460  0039A3  3F59               	dw	16217
  1461                           
  1462                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1463  0039A5  6F51               	dw	28497
  1464  0039A7  3F5B               	dw	16219
  1465                           
  1466                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1467  0039A9  B3D7               	dw	46039
  1468  0039AB  3F5D               	dw	16221
  1469                           
  1470                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1471  0039AD  E714               	dw	59156
  1472  0039AF  3F5F               	dw	16223
  1473                           
  1474                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1475  0039B1  08DA               	dw	2266
  1476  0039B3  3F62               	dw	16226
  1477                           
  1478                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1479  0039B5  1901               	dw	6401
  1480  0039B7  3F64               	dw	16228
  1481                           
  1482                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1483  0039B9  175E               	dw	5982
  1484  0039BB  3F66               	dw	16230
  1485                           
  1486                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1487  0039BD  03CA               	dw	970
  1488  0039BF  3F68               	dw	16232
  1489                           
  1490                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1491  0039C1  DE1D               	dw	56861
  1492  0039C3  3F69               	dw	16233
  1493                           
  1494                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1495  0039C5  A635               	dw	42549
  1496  0039C7  3F6B               	dw	16235
  1497                           
  1498                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1499  0039C9  5BEC               	dw	23532
  1500  0039CB  3F6D               	dw	16237
  1501                           
  1502                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1503  0039CD  FF20               	dw	65312
  1504  0039CF  3F6E               	dw	16238
  1505                           
  1506                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1507  0039D1  8FB2               	dw	36786
  1508  0039D3  3F70               	dw	16240
  1509                           
  1510                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1511  0039D5  0D81               	dw	3457
  1512  0039D7  3F72               	dw	16242
  1513                           
  1514                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1515  0039D9  7871               	dw	30833
  1516  0039DB  3F73               	dw	16243
  1517                           
  1518                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1519  0039DD  D063               	dw	53347
  1520  0039DF  3F74               	dw	16244
  1521                           
  1522                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1523  0039E1  153F               	dw	5439
  1524  0039E3  3F76               	dw	16246
  1525                           
  1526                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1527  0039E5  46EA               	dw	18154
  1528  0039E7  3F77               	dw	16247
  1529                           
  1530                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1531  0039E9  654D               	dw	25933
  1532  0039EB  3F78               	dw	16248
  1533                           
  1534                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1535  0039ED  7051               	dw	28753
  1536  0039EF  3F79               	dw	16249
  1537                           
  1538                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1539  0039F1  67E2               	dw	26594
  1540  0039F3  3F7A               	dw	16250
  1541                           
  1542                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1543  0039F5  4BEB               	dw	19435
  1544  0039F7  3F7B               	dw	16251
  1545                           
  1546                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1547  0039F9  1C5C               	dw	7260
  1548  0039FB  3F7C               	dw	16252
  1549                           
  1550                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1551  0039FD  D925               	dw	55589
  1552  0039FF  3F7C               	dw	16252
  1553                           
  1554                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1555  003A01  8235               	dw	33333
  1556  003A03  3F7D               	dw	16253
  1557                           
  1558                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1559  003A05  1781               	dw	6017
  1560  003A07  3F7E               	dw	16254
  1561                           
  1562                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1563  003A09  98FD               	dw	39165
  1564  003A0B  3F7E               	dw	16254
  1565                           
  1566                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1567  003A0D  069E               	dw	1694
  1568  003A0F  3F7F               	dw	16255
  1569                           
  1570                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1571  003A11  605C               	dw	24668
  1572  003A13  3F7F               	dw	16255
  1573                           
  1574                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1575  003A15  A62F               	dw	42543
  1576  003A17  3F7F               	dw	16255
  1577                           
  1578                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1579  003A19  D814               	dw	55316
  1580  003A1B  3F7F               	dw	16255
  1581                           
  1582                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1583  003A1D  F605               	dw	62981
  1584  003A1F  3F7F               	dw	16255
  1585                           
  1586                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1587  003A21  0000               	dw	0
  1588  003A23  3F80               	dw	16256
  1589                           
  1590                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1591  003A25  F605               	dw	62981
  1592  003A27  3F7F               	dw	16255
  1593                           
  1594                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1595  003A29  D814               	dw	55316
  1596  003A2B  3F7F               	dw	16255
  1597                           
  1598                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1599  003A2D  A62F               	dw	42543
  1600  003A2F  3F7F               	dw	16255
  1601                           
  1602                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1603  003A31  605C               	dw	24668
  1604  003A33  3F7F               	dw	16255
  1605                           
  1606                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1607  003A35  069E               	dw	1694
  1608  003A37  3F7F               	dw	16255
  1609                           
  1610                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1611  003A39  98FD               	dw	39165
  1612  003A3B  3F7E               	dw	16254
  1613                           
  1614                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1615  003A3D  1781               	dw	6017
  1616  003A3F  3F7E               	dw	16254
  1617                           
  1618                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1619  003A41  8235               	dw	33333
  1620  003A43  3F7D               	dw	16253
  1621                           
  1622                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1623  003A45  D925               	dw	55589
  1624  003A47  3F7C               	dw	16252
  1625                           
  1626                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1627  003A49  1C5C               	dw	7260
  1628  003A4B  3F7C               	dw	16252
  1629                           
  1630                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1631  003A4D  4BEB               	dw	19435
  1632  003A4F  3F7B               	dw	16251
  1633                           
  1634                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1635  003A51  67E2               	dw	26594
  1636  003A53  3F7A               	dw	16250
  1637                           
  1638                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1639  003A55  7051               	dw	28753
  1640  003A57  3F79               	dw	16249
  1641                           
  1642                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1643  003A59  654D               	dw	25933
  1644  003A5B  3F78               	dw	16248
  1645                           
  1646                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1647  003A5D  46EA               	dw	18154
  1648  003A5F  3F77               	dw	16247
  1649                           
  1650                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1651  003A61  153F               	dw	5439
  1652  003A63  3F76               	dw	16246
  1653                           
  1654                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1655  003A65  D063               	dw	53347
  1656  003A67  3F74               	dw	16244
  1657                           
  1658                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1659  003A69  7871               	dw	30833
  1660  003A6B  3F73               	dw	16243
  1661                           
  1662                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1663  003A6D  0D81               	dw	3457
  1664  003A6F  3F72               	dw	16242
  1665                           
  1666                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1667  003A71  8FB2               	dw	36786
  1668  003A73  3F70               	dw	16240
  1669                           
  1670                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1671  003A75  FF20               	dw	65312
  1672  003A77  3F6E               	dw	16238
  1673                           
  1674                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1675  003A79  5BEC               	dw	23532
  1676  003A7B  3F6D               	dw	16237
  1677                           
  1678                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1679  003A7D  A635               	dw	42549
  1680  003A7F  3F6B               	dw	16235
  1681                           
  1682                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1683  003A81  DE1D               	dw	56861
  1684  003A83  3F69               	dw	16233
  1685                           
  1686                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1687  003A85  03CA               	dw	970
  1688  003A87  3F68               	dw	16232
  1689                           
  1690                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1691  003A89  175E               	dw	5982
  1692  003A8B  3F66               	dw	16230
  1693                           
  1694                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1695  003A8D  1901               	dw	6401
  1696  003A8F  3F64               	dw	16228
  1697                           
  1698                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1699  003A91  08DA               	dw	2266
  1700  003A93  3F62               	dw	16226
  1701                           
  1702                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1703  003A95  E714               	dw	59156
  1704  003A97  3F5F               	dw	16223
  1705                           
  1706                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1707  003A99  B3D7               	dw	46039
  1708  003A9B  3F5D               	dw	16221
  1709                           
  1710                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1711  003A9D  6F51               	dw	28497
  1712  003A9F  3F5B               	dw	16219
  1713                           
  1714                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1715  003AA1  19AE               	dw	6574
  1716  003AA3  3F59               	dw	16217
  1717                           
  1718                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1719  003AA5  B31D               	dw	45853
  1720  003AA7  3F56               	dw	16214
  1721                           
  1722                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1723  003AA9  3BCE               	dw	15310
  1724  003AAB  3F54               	dw	16212
  1725                           
  1726                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1727  003AAD  B3F3               	dw	46067
  1728  003AAF  3F51               	dw	16209
  1729                           
  1730                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1731  003AB1  1BBD               	dw	7101
  1732  003AB3  3F4F               	dw	16207
  1733                           
  1734                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1735  003AB5  7360               	dw	29536
  1736  003AB7  3F4C               	dw	16204
  1737                           
  1738                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1739  003AB9  BB13               	dw	47891
  1740  003ABB  3F49               	dw	16201
  1741                           
  1742                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1743  003ABD  F30A               	dw	62218
  1744  003ABF  3F46               	dw	16198
  1745                           
  1746                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1747  003AC1  1B7D               	dw	7037
  1748  003AC3  3F44               	dw	16196
  1749                           
  1750                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1751  003AC5  34A6               	dw	13478
  1752  003AC7  3F41               	dw	16193
  1753                           
  1754                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1755  003AC9  3EBD               	dw	16061
  1756  003ACB  3F3E               	dw	16190
  1757                           
  1758                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1759  003ACD  39FF               	dw	14847
  1760  003ACF  3F3B               	dw	16187
  1761                           
  1762                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1763  003AD1  26A7               	dw	9895
  1764  003AD3  3F38               	dw	16184
  1765                           
  1766                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1767  003AD5  04F3               	dw	1267
  1768  003AD7  3F35               	dw	16181
  1769                           
  1770                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1771  003AD9  D522               	dw	54562
  1772  003ADB  3F31               	dw	16177
  1773                           
  1774                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1775  003ADD  9772               	dw	38770
  1776  003ADF  3F2E               	dw	16174
  1777                           
  1778                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1779  003AE1  4C25               	dw	19493
  1780  003AE3  3F2B               	dw	16171
  1781                           
  1782                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1783  003AE5  F37C               	dw	62332
  1784  003AE7  3F27               	dw	16167
  1785                           
  1786                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1787  003AE9  8DBB               	dw	36283
  1788  003AEB  3F24               	dw	16164
  1789                           
  1790                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1791  003AED  1B24               	dw	6948
  1792  003AEF  3F21               	dw	16161
  1793                           
  1794                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1795  003AF1  9BFE               	dw	39934
  1796  003AF3  3F1D               	dw	16157
  1797                           
  1798                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1799  003AF5  108D               	dw	4237
  1800  003AF7  3F1A               	dw	16154
  1801                           
  1802                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1803  003AF9  7918               	dw	31000
  1804  003AFB  3F16               	dw	16150
  1805                           
  1806                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1807  003AFD  D5E8               	dw	54760
  1808  003AFF  3F12               	dw	16146
  1809                           
  1810                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1811  003B01  2744               	dw	10052
  1812  003B03  3F0F               	dw	16143
  1813                           
  1814                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1815  003B05  6D77               	dw	28023
  1816  003B07  3F0B               	dw	16139
  1817                           
  1818                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1819  003B09  A8CA               	dw	43210
  1820  003B0B  3F07               	dw	16135
  1821                           
  1822                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1823  003B0D  D989               	dw	55689
  1824  003B0F  3F03               	dw	16131
  1825                           
  1826                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1827  003B11  0000               	dw	0
  1828  003B13  3F00               	dw	16128
  1829                           
  1830                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1831  003B15  38F7               	dw	14583
  1832  003B17  3EF8               	dw	16120
  1833                           
  1834                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1835  003B19  5E94               	dw	24212
  1836  003B1B  3EF0               	dw	16112
  1837                           
  1838                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1839  003B1D  7171               	dw	29041
  1840  003B1F  3EE8               	dw	16104
  1841                           
  1842                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1843  003B21  722F               	dw	29231
  1844  003B23  3EE0               	dw	16096
  1845                           
  1846                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1847  003B25  616C               	dw	24940
  1848  003B27  3ED8               	dw	16088
  1849                           
  1850                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1851  003B29  3FC9               	dw	16329
  1852  003B2B  3ED0               	dw	16080
  1853                           
  1854                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1855  003B2D  0DE9               	dw	3561
  1856  003B2F  3EC8               	dw	16072
  1857                           
  1858                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1859  003B31  CC6F               	dw	52335
  1860  003B33  3EBF               	dw	16063
  1861                           
  1862                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1863  003B35  7C01               	dw	31745
  1864  003B37  3EB7               	dw	16055
  1865                           
  1866                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1867  003B39  1D44               	dw	7492
  1868  003B3B  3EAF               	dw	16047
  1869                           
  1870                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1871  003B3D  B0DF               	dw	45279
  1872  003B3F  3EA6               	dw	16038
  1873                           
  1874                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1875  003B41  377A               	dw	14202
  1876  003B43  3E9E               	dw	16030
  1877                           
  1878                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1879  003B45  B1BE               	dw	45502
  1880  003B47  3E95               	dw	16021
  1881                           
  1882                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1883  003B49  2057               	dw	8279
  1884  003B4B  3E8D               	dw	16013
  1885                           
  1886                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1887  003B4D  83EE               	dw	33774
  1888  003B4F  3E84               	dw	16004
  1889                           
  1890                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1891  003B51  BA60               	dw	47712
  1892  003B53  3E77               	dw	15991
  1893                           
  1894                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1895  003B55  5992               	dw	22930
  1896  003B57  3E66               	dw	15974
  1897                           
  1898                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1899  003B59  E6CD               	dw	59085
  1900  003B5B  3E54               	dw	15956
  1901                           
  1902                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1903  003B5D  636F               	dw	25455
  1904  003B5F  3E43               	dw	15939
  1905                           
  1906                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1907  003B61  D0D4               	dw	53460
  1908  003B63  3E31               	dw	15921
  1909                           
  1910                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1911  003B65  305B               	dw	12379
  1912  003B67  3E20               	dw	15904
  1913                           
  1914                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1915  003B69  8365               	dw	33637
  1916  003B6B  3E0E               	dw	15886
  1917                           
  1918                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1919  003B6D  96A2               	dw	38562
  1920  003B6F  3DF9               	dw	15865
  1921                           
  1922                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1923  003B71  1305               	dw	4869
  1924  003B73  3DD6               	dw	15830
  1925                           
  1926                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1927  003B75  7EB6               	dw	32438
  1928  003B77  3DB2               	dw	15794
  1929                           
  1930                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1931  003B79  DC7B               	dw	56443
  1932  003B7B  3D8E               	dw	15758
  1933                           
  1934                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1935  003B7D  5E3A               	dw	24122
  1936  003B7F  3D56               	dw	15702
  1937                           
  1938                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1939  003B81  F2C6               	dw	62150
  1940  003B83  3D0E               	dw	15630
  1941                           
  1942                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1943  003B85  F859               	dw	63577
  1944  003B87  3C8E               	dw	15502
  1945                           
  1946                           ;../trigTables.h: 13: static const double sineTable[360] = {
  1947  003B89  3132               	dw	12594
  1948  003B8B  250D               	dw	9485
  1949  003B8D  F859               	dw	63577
  1950  003B8F  BC8E               	dw	48270
  1951  003B91  F2C6               	dw	62150
  1952  003B93  BD0E               	dw	48398
  1953  003B95  5E3A               	dw	24122
  1954  003B97  BD56               	dw	48470
  1955  003B99  DC7B               	dw	56443
  1956  003B9B  BD8E               	dw	48526
  1957  003B9D  7EB6               	dw	32438
  1958  003B9F  BDB2               	dw	48562
  1959  003BA1  1305               	dw	4869
  1960  003BA3  BDD6               	dw	48598
  1961  003BA5  96A2               	dw	38562
  1962  003BA7  BDF9               	dw	48633
  1963  003BA9  8365               	dw	33637
  1964  003BAB  BE0E               	dw	48654
  1965  003BAD  305B               	dw	12379
  1966  003BAF  BE20               	dw	48672
  1967  003BB1  D0D4               	dw	53460
  1968  003BB3  BE31               	dw	48689
  1969  003BB5  636F               	dw	25455
  1970  003BB7  BE43               	dw	48707
  1971  003BB9  E6CD               	dw	59085
  1972  003BBB  BE54               	dw	48724
  1973  003BBD  5992               	dw	22930
  1974  003BBF  BE66               	dw	48742
  1975  003BC1  BA60               	dw	47712
  1976  003BC3  BE77               	dw	48759
  1977  003BC5  83EE               	dw	33774
  1978  003BC7  BE84               	dw	48772
  1979  003BC9  2057               	dw	8279
  1980  003BCB  BE8D               	dw	48781
  1981  003BCD  B1BE               	dw	45502
  1982  003BCF  BE95               	dw	48789
  1983  003BD1  377A               	dw	14202
  1984  003BD3  BE9E               	dw	48798
  1985  003BD5  B0DF               	dw	45279
  1986  003BD7  BEA6               	dw	48806
  1987  003BD9  1D44               	dw	7492
  1988  003BDB  BEAF               	dw	48815
  1989  003BDD  7C01               	dw	31745
  1990  003BDF  BEB7               	dw	48823
  1991  003BE1  CC6F               	dw	52335
  1992  003BE3  BEBF               	dw	48831
  1993  003BE5  0DE9               	dw	3561
  1994  003BE7  BEC8               	dw	48840
  1995  003BE9  3FC9               	dw	16329
  1996  003BEB  BED0               	dw	48848
  1997  003BED  616C               	dw	24940
  1998  003BEF  BED8               	dw	48856
  1999  003BF1  722F               	dw	29231
  2000  003BF3  BEE0               	dw	48864
  2001  003BF5  7171               	dw	29041
  2002  003BF7  BEE8               	dw	48872
  2003  003BF9  5E94               	dw	24212
  2004  003BFB  BEF0               	dw	48880
  2005  003BFD  38F7               	dw	14583
  2006  003BFF  BEF8               	dw	48888
  2007  003C01  0000               	dw	0
  2008  003C03  BF00               	dw	48896
  2009  003C05  D989               	dw	55689
  2010  003C07  BF03               	dw	48899
  2011  003C09  A8CA               	dw	43210
  2012  003C0B  BF07               	dw	48903
  2013  003C0D  6D77               	dw	28023
  2014  003C0F  BF0B               	dw	48907
  2015  003C11  2744               	dw	10052
  2016  003C13  BF0F               	dw	48911
  2017  003C15  D5E8               	dw	54760
  2018  003C17  BF12               	dw	48914
  2019  003C19  7918               	dw	31000
  2020  003C1B  BF16               	dw	48918
  2021  003C1D  108D               	dw	4237
  2022  003C1F  BF1A               	dw	48922
  2023  003C21  9BFE               	dw	39934
  2024  003C23  BF1D               	dw	48925
  2025  003C25  1B24               	dw	6948
  2026  003C27  BF21               	dw	48929
  2027  003C29  8DBB               	dw	36283
  2028  003C2B  BF24               	dw	48932
  2029  003C2D  F37C               	dw	62332
  2030  003C2F  BF27               	dw	48935
  2031  003C31  4C25               	dw	19493
  2032  003C33  BF2B               	dw	48939
  2033  003C35  9772               	dw	38770
  2034  003C37  BF2E               	dw	48942
  2035  003C39  D522               	dw	54562
  2036  003C3B  BF31               	dw	48945
  2037  003C3D  04F3               	dw	1267
  2038  003C3F  BF35               	dw	48949
  2039  003C41  26A7               	dw	9895
  2040  003C43  BF38               	dw	48952
  2041  003C45  39FF               	dw	14847
  2042  003C47  BF3B               	dw	48955
  2043  003C49  3EBD               	dw	16061
  2044  003C4B  BF3E               	dw	48958
  2045  003C4D  34A6               	dw	13478
  2046  003C4F  BF41               	dw	48961
  2047  003C51  1B7D               	dw	7037
  2048  003C53  BF44               	dw	48964
  2049  003C55  F30A               	dw	62218
  2050  003C57  BF46               	dw	48966
  2051  003C59  BB13               	dw	47891
  2052  003C5B  BF49               	dw	48969
  2053  003C5D  7360               	dw	29536
  2054  003C5F  BF4C               	dw	48972
  2055  003C61  1BBD               	dw	7101
  2056  003C63  BF4F               	dw	48975
  2057  003C65  B3F3               	dw	46067
  2058  003C67  BF51               	dw	48977
  2059  003C69  3BCE               	dw	15310
  2060  003C6B  BF54               	dw	48980
  2061  003C6D  B31D               	dw	45853
  2062  003C6F  BF56               	dw	48982
  2063  003C71  19AE               	dw	6574
  2064  003C73  BF59               	dw	48985
  2065  003C75  6F51               	dw	28497
  2066  003C77  BF5B               	dw	48987
  2067  003C79  B3D7               	dw	46039
  2068  003C7B  BF5D               	dw	48989
  2069  003C7D  E714               	dw	59156
  2070  003C7F  BF5F               	dw	48991
  2071  003C81  08DA               	dw	2266
  2072  003C83  BF62               	dw	48994
  2073  003C85  1901               	dw	6401
  2074  003C87  BF64               	dw	48996
  2075  003C89  175E               	dw	5982
  2076  003C8B  BF66               	dw	48998
  2077  003C8D  03CA               	dw	970
  2078  003C8F  BF68               	dw	49000
  2079  003C91  DE1D               	dw	56861
  2080  003C93  BF69               	dw	49001
  2081  003C95  A635               	dw	42549
  2082  003C97  BF6B               	dw	49003
  2083  003C99  5BEC               	dw	23532
  2084  003C9B  BF6D               	dw	49005
  2085  003C9D  FF20               	dw	65312
  2086  003C9F  BF6E               	dw	49006
  2087  003CA1  8FB2               	dw	36786
  2088  003CA3  BF70               	dw	49008
  2089  003CA5  0D81               	dw	3457
  2090  003CA7  BF72               	dw	49010
  2091  003CA9  7871               	dw	30833
  2092  003CAB  BF73               	dw	49011
  2093  003CAD  D063               	dw	53347
  2094  003CAF  BF74               	dw	49012
  2095  003CB1  153F               	dw	5439
  2096  003CB3  BF76               	dw	49014
  2097  003CB5  46EA               	dw	18154
  2098  003CB7  BF77               	dw	49015
  2099  003CB9  654D               	dw	25933
  2100  003CBB  BF78               	dw	49016
  2101  003CBD  7051               	dw	28753
  2102  003CBF  BF79               	dw	49017
  2103  003CC1  67E2               	dw	26594
  2104  003CC3  BF7A               	dw	49018
  2105  003CC5  4BEB               	dw	19435
  2106  003CC7  BF7B               	dw	49019
  2107  003CC9  1C5C               	dw	7260
  2108  003CCB  BF7C               	dw	49020
  2109  003CCD  D925               	dw	55589
  2110  003CCF  BF7C               	dw	49020
  2111  003CD1  8235               	dw	33333
  2112  003CD3  BF7D               	dw	49021
  2113  003CD5  1781               	dw	6017
  2114  003CD7  BF7E               	dw	49022
  2115  003CD9  98FD               	dw	39165
  2116  003CDB  BF7E               	dw	49022
  2117  003CDD  069E               	dw	1694
  2118  003CDF  BF7F               	dw	49023
  2119  003CE1  605C               	dw	24668
  2120  003CE3  BF7F               	dw	49023
  2121  003CE5  A62F               	dw	42543
  2122  003CE7  BF7F               	dw	49023
  2123  003CE9  D814               	dw	55316
  2124  003CEB  BF7F               	dw	49023
  2125  003CED  F605               	dw	62981
  2126  003CEF  BF7F               	dw	49023
  2127  003CF1  0000               	dw	0
  2128  003CF3  BF80               	dw	49024
  2129  003CF5  F605               	dw	62981
  2130  003CF7  BF7F               	dw	49023
  2131  003CF9  D814               	dw	55316
  2132  003CFB  BF7F               	dw	49023
  2133  003CFD  A62F               	dw	42543
  2134  003CFF  BF7F               	dw	49023
  2135  003D01  605C               	dw	24668
  2136  003D03  BF7F               	dw	49023
  2137  003D05  069E               	dw	1694
  2138  003D07  BF7F               	dw	49023
  2139  003D09  98FD               	dw	39165
  2140  003D0B  BF7E               	dw	49022
  2141  003D0D  1781               	dw	6017
  2142  003D0F  BF7E               	dw	49022
  2143  003D11  8235               	dw	33333
  2144  003D13  BF7D               	dw	49021
  2145  003D15  D925               	dw	55589
  2146  003D17  BF7C               	dw	49020
  2147  003D19  1C5C               	dw	7260
  2148  003D1B  BF7C               	dw	49020
  2149  003D1D  4BEB               	dw	19435
  2150  003D1F  BF7B               	dw	49019
  2151  003D21  67E2               	dw	26594
  2152  003D23  BF7A               	dw	49018
  2153  003D25  7051               	dw	28753
  2154  003D27  BF79               	dw	49017
  2155  003D29  654D               	dw	25933
  2156  003D2B  BF78               	dw	49016
  2157  003D2D  46EA               	dw	18154
  2158  003D2F  BF77               	dw	49015
  2159  003D31  153F               	dw	5439
  2160  003D33  BF76               	dw	49014
  2161  003D35  D063               	dw	53347
  2162  003D37  BF74               	dw	49012
  2163  003D39  7871               	dw	30833
  2164  003D3B  BF73               	dw	49011
  2165  003D3D  0D81               	dw	3457
  2166  003D3F  BF72               	dw	49010
  2167  003D41  8FB2               	dw	36786
  2168  003D43  BF70               	dw	49008
  2169  003D45  FF20               	dw	65312
  2170  003D47  BF6E               	dw	49006
  2171  003D49  5BEC               	dw	23532
  2172  003D4B  BF6D               	dw	49005
  2173  003D4D  A635               	dw	42549
  2174  003D4F  BF6B               	dw	49003
  2175  003D51  DE1D               	dw	56861
  2176  003D53  BF69               	dw	49001
  2177  003D55  03CA               	dw	970
  2178  003D57  BF68               	dw	49000
  2179  003D59  175E               	dw	5982
  2180  003D5B  BF66               	dw	48998
  2181  003D5D  1901               	dw	6401
  2182  003D5F  BF64               	dw	48996
  2183  003D61  08DA               	dw	2266
  2184  003D63  BF62               	dw	48994
  2185  003D65  E714               	dw	59156
  2186  003D67  BF5F               	dw	48991
  2187  003D69  B3D7               	dw	46039
  2188  003D6B  BF5D               	dw	48989
  2189  003D6D  6F51               	dw	28497
  2190  003D6F  BF5B               	dw	48987
  2191  003D71  19AE               	dw	6574
  2192  003D73  BF59               	dw	48985
  2193  003D75  B31D               	dw	45853
  2194  003D77  BF56               	dw	48982
  2195  003D79  3BCE               	dw	15310
  2196  003D7B  BF54               	dw	48980
  2197  003D7D  B3F3               	dw	46067
  2198  003D7F  BF51               	dw	48977
  2199  003D81  1BBD               	dw	7101
  2200  003D83  BF4F               	dw	48975
  2201  003D85  7360               	dw	29536
  2202  003D87  BF4C               	dw	48972
  2203  003D89  BB13               	dw	47891
  2204  003D8B  BF49               	dw	48969
  2205  003D8D  F30A               	dw	62218
  2206  003D8F  BF46               	dw	48966
  2207  003D91  1B7D               	dw	7037
  2208  003D93  BF44               	dw	48964
  2209  003D95  34A6               	dw	13478
  2210  003D97  BF41               	dw	48961
  2211  003D99  3EBD               	dw	16061
  2212  003D9B  BF3E               	dw	48958
  2213  003D9D  39FF               	dw	14847
  2214  003D9F  BF3B               	dw	48955
  2215  003DA1  26A7               	dw	9895
  2216  003DA3  BF38               	dw	48952
  2217  003DA5  04F3               	dw	1267
  2218  003DA7  BF35               	dw	48949
  2219  003DA9  D522               	dw	54562
  2220  003DAB  BF31               	dw	48945
  2221  003DAD  9772               	dw	38770
  2222  003DAF  BF2E               	dw	48942
  2223  003DB1  4C25               	dw	19493
  2224  003DB3  BF2B               	dw	48939
  2225  003DB5  F37C               	dw	62332
  2226  003DB7  BF27               	dw	48935
  2227  003DB9  8DBB               	dw	36283
  2228  003DBB  BF24               	dw	48932
  2229  003DBD  1B24               	dw	6948
  2230  003DBF  BF21               	dw	48929
  2231  003DC1  9BFE               	dw	39934
  2232  003DC3  BF1D               	dw	48925
  2233  003DC5  108D               	dw	4237
  2234  003DC7  BF1A               	dw	48922
  2235  003DC9  7918               	dw	31000
  2236  003DCB  BF16               	dw	48918
  2237  003DCD  D5E8               	dw	54760
  2238  003DCF  BF12               	dw	48914
  2239  003DD1  2744               	dw	10052
  2240  003DD3  BF0F               	dw	48911
  2241  003DD5  6D77               	dw	28023
  2242  003DD7  BF0B               	dw	48907
  2243  003DD9  A8CA               	dw	43210
  2244  003DDB  BF07               	dw	48903
  2245  003DDD  D989               	dw	55689
  2246  003DDF  BF03               	dw	48899
  2247  003DE1  0000               	dw	0
  2248  003DE3  BF00               	dw	48896
  2249  003DE5  38F7               	dw	14583
  2250  003DE7  BEF8               	dw	48888
  2251  003DE9  5E94               	dw	24212
  2252  003DEB  BEF0               	dw	48880
  2253  003DED  7171               	dw	29041
  2254  003DEF  BEE8               	dw	48872
  2255  003DF1  722F               	dw	29231
  2256  003DF3  BEE0               	dw	48864
  2257  003DF5  616C               	dw	24940
  2258  003DF7  BED8               	dw	48856
  2259  003DF9  3FC9               	dw	16329
  2260  003DFB  BED0               	dw	48848
  2261  003DFD  0DE9               	dw	3561
  2262  003DFF  BEC8               	dw	48840
  2263  003E01  CC6F               	dw	52335
  2264  003E03  BEBF               	dw	48831
  2265  003E05  7C01               	dw	31745
  2266  003E07  BEB7               	dw	48823
  2267  003E09  1D44               	dw	7492
  2268  003E0B  BEAF               	dw	48815
  2269  003E0D  B0DF               	dw	45279
  2270  003E0F  BEA6               	dw	48806
  2271  003E11  377A               	dw	14202
  2272  003E13  BE9E               	dw	48798
  2273  003E15  B1BE               	dw	45502
  2274  003E17  BE95               	dw	48789
  2275  003E19  2057               	dw	8279
  2276  003E1B  BE8D               	dw	48781
  2277  003E1D  83EE               	dw	33774
  2278  003E1F  BE84               	dw	48772
  2279  003E21  BA60               	dw	47712
  2280  003E23  BE77               	dw	48759
  2281  003E25  5992               	dw	22930
  2282  003E27  BE66               	dw	48742
  2283  003E29  E6CD               	dw	59085
  2284  003E2B  BE54               	dw	48724
  2285  003E2D  636F               	dw	25455
  2286  003E2F  BE43               	dw	48707
  2287  003E31  D0D4               	dw	53460
  2288  003E33  BE31               	dw	48689
  2289  003E35  305B               	dw	12379
  2290  003E37  BE20               	dw	48672
  2291  003E39  8365               	dw	33637
  2292  003E3B  BE0E               	dw	48654
  2293  003E3D  96A2               	dw	38562
  2294  003E3F  BDF9               	dw	48633
  2295  003E41  1305               	dw	4869
  2296  003E43  BDD6               	dw	48598
  2297  003E45  7EB6               	dw	32438
  2298  003E47  BDB2               	dw	48562
  2299  003E49  DC7B               	dw	56443
  2300  003E4B  BD8E               	dw	48526
  2301  003E4D  5E3A               	dw	24122
  2302  003E4F  BD56               	dw	48470
  2303  003E51  F2C6               	dw	62150
  2304  003E53  BD0E               	dw	48398
  2305  003E55  F859               	dw	63577
  2306  003E57  BC8E               	dw	48270
  2307  003E59                     __end_of_sineTable:
  2308                           	opt callstack 0
  2309  003E59                     STR_20:
  2310  003E59  2D                 	db	45
  2311  003E5A  2D                 	db	45
  2312  003E5B  2D                 	db	45
  2313  003E5C  2D                 	db	45
  2314  003E5D  2D                 	db	45
  2315  003E5E  2D                 	db	45
  2316  003E5F  2D                 	db	45
  2317  003E60  2D                 	db	45
  2318  003E61  2D                 	db	45
  2319  003E62  2D                 	db	45
  2320  003E63  2D                 	db	45
  2321  003E64  2D                 	db	45
  2322  003E65  2D                 	db	45
  2323  003E66  2D                 	db	45
  2324  003E67  2D                 	db	45
  2325  003E68  2D                 	db	45
  2326  003E69  2D                 	db	45
  2327  003E6A  2D                 	db	45
  2328  003E6B  2D                 	db	45
  2329  003E6C  2D                 	db	45
  2330  003E6D  2D                 	db	45
  2331  003E6E  2D                 	db	45
  2332  003E6F  2D                 	db	45
  2333  003E70  2D                 	db	45
  2334  003E71  2D                 	db	45
  2335  003E72  2D                 	db	45
  2336  003E73  2D                 	db	45
  2337  003E74  2D                 	db	45
  2338  003E75  2D                 	db	45
  2339  003E76  2D                 	db	45
  2340  003E77  2D                 	db	45
  2341  003E78  2D                 	db	45
  2342  003E79  2D                 	db	45
  2343  003E7A  2D                 	db	45
  2344  003E7B  2D                 	db	45
  2345  003E7C  2D                 	db	45
  2346  003E7D  2D                 	db	45
  2347  003E7E  2D                 	db	45
  2348  003E7F  2D                 	db	45
  2349  003E80  2D                 	db	45
  2350  003E81  2D                 	db	45
  2351  003E82  2D                 	db	45
  2352  003E83  2D                 	db	45
  2353  003E84  2D                 	db	45
  2354  003E85  2D                 	db	45
  2355  003E86  2D                 	db	45
  2356  003E87  2D                 	db	45
  2357  003E88  2D                 	db	45
  2358  003E89  2D                 	db	45
  2359  003E8A  2D                 	db	45
  2360  003E8B  0A                 	db	10
  2361  003E8C  0D                 	db	13
  2362  003E8D  00                 	db	0
  2363  003E8E                     STR_23:
  2364  003E8E  43                 	db	67	;'C'
  2365  003E8F  6F                 	db	111	;'o'
  2366  003E90  6E                 	db	110	;'n'
  2367  003E91  74                 	db	116	;'t'
  2368  003E92  72                 	db	114	;'r'
  2369  003E93  6F                 	db	111	;'o'
  2370  003E94  6C                 	db	108	;'l'
  2371  003E95  20                 	db	32
  2372  003E96  41                 	db	65	;'A'
  2373  003E97  6E                 	db	110	;'n'
  2374  003E98  67                 	db	103	;'g'
  2375  003E99  6C                 	db	108	;'l'
  2376  003E9A  65                 	db	101	;'e'
  2377  003E9B  3A                 	db	58	;':'
  2378  003E9C  20                 	db	32
  2379  003E9D  25                 	db	37
  2380  003E9E  64                 	db	100	;'d'
  2381  003E9F  0A                 	db	10
  2382  003EA0  0D                 	db	13
  2383  003EA1  00                 	db	0
  2384  003EA2                     STR_27:
  2385  003EA2  43                 	db	67	;'C'
  2386  003EA3  75                 	db	117	;'u'
  2387  003EA4  72                 	db	114	;'r'
  2388  003EA5  72                 	db	114	;'r'
  2389  003EA6  65                 	db	101	;'e'
  2390  003EA7  6E                 	db	110	;'n'
  2391  003EA8  74                 	db	116	;'t'
  2392  003EA9  20                 	db	32
  2393  003EAA  53                 	db	83	;'S'
  2394  003EAB  74                 	db	116	;'t'
  2395  003EAC  61                 	db	97	;'a'
  2396  003EAD  74                 	db	116	;'t'
  2397  003EAE  65                 	db	101	;'e'
  2398  003EAF  3A                 	db	58	;':'
  2399  003EB0  20                 	db	32
  2400  003EB1  25                 	db	37
  2401  003EB2  64                 	db	100	;'d'
  2402  003EB3  0A                 	db	10
  2403  003EB4  0D                 	db	13
  2404  003EB5  00                 	db	0
  2405  003EB6                     STR_29:
  2406  003EB6  48                 	db	72	;'H'
  2407  003EB7  61                 	db	97	;'a'
  2408  003EB8  6C                 	db	108	;'l'
  2409  003EB9  66                 	db	102	;'f'
  2410  003EBA  20                 	db	32
  2411  003EBB  56                 	db	86	;'V'
  2412  003EBC  65                 	db	101	;'e'
  2413  003EBD  63                 	db	99	;'c'
  2414  003EBE  20                 	db	32
  2415  003EBF  54                 	db	84	;'T'
  2416  003EC0  69                 	db	105	;'i'
  2417  003EC1  6D                 	db	109	;'m'
  2418  003EC2  65                 	db	101	;'e'
  2419  003EC3  3A                 	db	58	;':'
  2420  003EC4  20                 	db	32
  2421  003EC5  25                 	db	37
  2422  003EC6  75                 	db	117	;'u'
  2423  003EC7  0A                 	db	10
  2424  003EC8  0D                 	db	13
  2425  003EC9  00                 	db	0
  2426  003ECA                     STR_28:
  2427  003ECA  54                 	db	84	;'T'
  2428  003ECB  6F                 	db	111	;'o'
  2429  003ECC  74                 	db	116	;'t'
  2430  003ECD  61                 	db	97	;'a'
  2431  003ECE  6C                 	db	108	;'l'
  2432  003ECF  20                 	db	32
  2433  003ED0  50                 	db	80	;'P'
  2434  003ED1  65                 	db	101	;'e'
  2435  003ED2  72                 	db	114	;'r'
  2436  003ED3  69                 	db	105	;'i'
  2437  003ED4  6F                 	db	111	;'o'
  2438  003ED5  64                 	db	100	;'d'
  2439  003ED6  3A                 	db	58	;':'
  2440  003ED7  20                 	db	32
  2441  003ED8  25                 	db	37
  2442  003ED9  75                 	db	117	;'u'
  2443  003EDA  0A                 	db	10
  2444  003EDB  0D                 	db	13
  2445  003EDC  00                 	db	0
  2446  003EDD                     STR_2:
  2447  003EDD  53                 	db	83	;'S'
  2448  003EDE  65                 	db	101	;'e'
  2449  003EDF  63                 	db	99	;'c'
  2450  003EE0  74                 	db	116	;'t'
  2451  003EE1  6F                 	db	111	;'o'
  2452  003EE2  72                 	db	114	;'r'
  2453  003EE3  20                 	db	32
  2454  003EE4  69                 	db	105	;'i'
  2455  003EE5  6E                 	db	110	;'n'
  2456  003EE6  64                 	db	100	;'d'
  2457  003EE7  65                 	db	101	;'e'
  2458  003EE8  78                 	db	120	;'x'
  2459  003EE9  20                 	db	32
  2460  003EEA  25                 	db	37
  2461  003EEB  64                 	db	100	;'d'
  2462  003EEC  0D                 	db	13
  2463  003EED  0A                 	db	10
  2464  003EEE  00                 	db	0
  2465  003EEF                     STR_25:
  2466  003EEF  41                 	db	65	;'A'
  2467  003EF0  42                 	db	66	;'B'
  2468  003EF1  53                 	db	83	;'S'
  2469  003EF2  20                 	db	32
  2470  003EF3  56                 	db	86	;'V'
  2471  003EF4  6F                 	db	111	;'o'
  2472  003EF5  6C                 	db	108	;'l'
  2473  003EF6  74                 	db	116	;'t'
  2474  003EF7  61                 	db	97	;'a'
  2475  003EF8  67                 	db	103	;'g'
  2476  003EF9  65                 	db	101	;'e'
  2477  003EFA  3A                 	db	58	;':'
  2478  003EFB  20                 	db	32
  2479  003EFC  25                 	db	37
  2480  003EFD  64                 	db	100	;'d'
  2481  003EFE  0A                 	db	10
  2482  003EFF  0D                 	db	13
  2483  003F00  00                 	db	0
  2484  003F01                     STR_3:
  2485  003F01  41                 	db	65	;'A'
  2486  003F02  6E                 	db	110	;'n'
  2487  003F03  67                 	db	103	;'g'
  2488  003F04  6C                 	db	108	;'l'
  2489  003F05  65                 	db	101	;'e'
  2490  003F06  20                 	db	32
  2491  003F07  49                 	db	73	;'I'
  2492  003F08  6E                 	db	110	;'n'
  2493  003F09  64                 	db	100	;'d'
  2494  003F0A  65                 	db	101	;'e'
  2495  003F0B  78                 	db	120	;'x'
  2496  003F0C  20                 	db	32
  2497  003F0D  25                 	db	37
  2498  003F0E  64                 	db	100	;'d'
  2499  003F0F  0D                 	db	13
  2500  003F10  0A                 	db	10
  2501  003F11  00                 	db	0
  2502  003F12                     STR_30:
  2503  003F12  56                 	db	86	;'V'
  2504  003F13  65                 	db	101	;'e'
  2505  003F14  63                 	db	99	;'c'
  2506  003F15  20                 	db	32
  2507  003F16  31                 	db	49	;'1'
  2508  003F17  20                 	db	32
  2509  003F18  54                 	db	84	;'T'
  2510  003F19  69                 	db	105	;'i'
  2511  003F1A  6D                 	db	109	;'m'
  2512  003F1B  65                 	db	101	;'e'
  2513  003F1C  3A                 	db	58	;':'
  2514  003F1D  20                 	db	32
  2515  003F1E  25                 	db	37
  2516  003F1F  75                 	db	117	;'u'
  2517  003F20  0A                 	db	10
  2518  003F21  0D                 	db	13
  2519  003F22  00                 	db	0
  2520  003F23                     STR_31:
  2521  003F23  56                 	db	86	;'V'
  2522  003F24  65                 	db	101	;'e'
  2523  003F25  63                 	db	99	;'c'
  2524  003F26  20                 	db	32
  2525  003F27  32                 	db	50	;'2'
  2526  003F28  20                 	db	32
  2527  003F29  54                 	db	84	;'T'
  2528  003F2A  69                 	db	105	;'i'
  2529  003F2B  6D                 	db	109	;'m'
  2530  003F2C  65                 	db	101	;'e'
  2531  003F2D  3A                 	db	58	;':'
  2532  003F2E  20                 	db	32
  2533  003F2F  25                 	db	37
  2534  003F30  75                 	db	117	;'u'
  2535  003F31  0A                 	db	10
  2536  003F32  0D                 	db	13
  2537  003F33  00                 	db	0
  2538  003F34                     STR_1:
  2539  003F34  53                 	db	83	;'S'
  2540  003F35  65                 	db	101	;'e'
  2541  003F36  63                 	db	99	;'c'
  2542  003F37  74                 	db	116	;'t'
  2543  003F38  6F                 	db	111	;'o'
  2544  003F39  72                 	db	114	;'r'
  2545  003F3A  20                 	db	32
  2546  003F3B  2B                 	db	43
  2547  003F3C  20                 	db	32
  2548  003F3D  31                 	db	49	;'1'
  2549  003F3E  20                 	db	32
  2550  003F3F  25                 	db	37
  2551  003F40  64                 	db	100	;'d'
  2552  003F41  0D                 	db	13
  2553  003F42  0A                 	db	10
  2554  003F43  00                 	db	0
  2555  003F44                     STR_24:
  2556  003F44  52                 	db	82	;'R'
  2557  003F45  65                 	db	101	;'e'
  2558  003F46  66                 	db	102	;'f'
  2559  003F47  20                 	db	32
  2560  003F48  41                 	db	65	;'A'
  2561  003F49  6E                 	db	110	;'n'
  2562  003F4A  67                 	db	103	;'g'
  2563  003F4B  6C                 	db	108	;'l'
  2564  003F4C  65                 	db	101	;'e'
  2565  003F4D  3A                 	db	58	;':'
  2566  003F4E  20                 	db	32
  2567  003F4F  25                 	db	37
  2568  003F50  64                 	db	100	;'d'
  2569  003F51  0A                 	db	10
  2570  003F52  0D                 	db	13
  2571  003F53  00                 	db	0
  2572  003F54                     STR_26:
  2573  003F54  53                 	db	83	;'S'
  2574  003F55  65                 	db	101	;'e'
  2575  003F56  63                 	db	99	;'c'
  2576  003F57  74                 	db	116	;'t'
  2577  003F58  6F                 	db	111	;'o'
  2578  003F59  72                 	db	114	;'r'
  2579  003F5A  3A                 	db	58	;':'
  2580  003F5B  20                 	db	32
  2581  003F5C  25                 	db	37
  2582  003F5D  64                 	db	100	;'d'
  2583  003F5E  0A                 	db	10
  2584  003F5F  0D                 	db	13
  2585  003F60  00                 	db	0
  2586  003F61                     STR_19:
  2587  003F61  53                 	db	83	;'S'
  2588  003F62  65                 	db	101	;'e'
  2589  003F63  63                 	db	99	;'c'
  2590  003F64  74                 	db	116	;'t'
  2591  003F65  6F                 	db	111	;'o'
  2592  003F66  72                 	db	114	;'r'
  2593  003F67  3A                 	db	58	;':'
  2594  003F68  20                 	db	32
  2595  003F69  25                 	db	37
  2596  003F6A  75                 	db	117	;'u'
  2597  003F6B  0A                 	db	10
  2598  003F6C  0D                 	db	13
  2599  003F6D  00                 	db	0
  2600  003F6E                     STR_4:
  2601  003F6E  54                 	db	84	;'T'
  2602  003F6F  69                 	db	105	;'i'
  2603  003F70  6D                 	db	109	;'m'
  2604  003F71  65                 	db	101	;'e'
  2605  003F72  3A                 	db	58	;':'
  2606  003F73  20                 	db	32
  2607  003F74  25                 	db	37
  2608  003F75  64                 	db	100	;'d'
  2609  003F76  0A                 	db	10
  2610  003F77  0D                 	db	13
  2611  003F78  00                 	db	0
  2612  003F79  54                 	db	84	;'T'
  2613  003F7A  30                 	db	48	;'0'
  2614  003F7B  3A                 	db	58	;':'
  2615  003F7C  20                 	db	32
  2616  003F7D  4F                 	db	79	;'O'
  2617  003F7E  46                 	db	70	;'F'
  2618  003F7F  46                 	db	70	;'F'
  2619  003F80  0A                 	db	10
  2620  003F81  0D                 	db	13
  2621  003F82  00                 	db	0
  2622  003F83  54                 	db	84	;'T'
  2623  003F84  31                 	db	49	;'1'
  2624  003F85  3A                 	db	58	;':'
  2625  003F86  20                 	db	32
  2626  003F87  4F                 	db	79	;'O'
  2627  003F88  46                 	db	70	;'F'
  2628  003F89  46                 	db	70	;'F'
  2629  003F8A  0A                 	db	10
  2630  003F8B  0D                 	db	13
  2631  003F8C  00                 	db	0
  2632  003F8D  54                 	db	84	;'T'
  2633  003F8E  32                 	db	50	;'2'
  2634  003F8F  3A                 	db	58	;':'
  2635  003F90  20                 	db	32
  2636  003F91  4F                 	db	79	;'O'
  2637  003F92  46                 	db	70	;'F'
  2638  003F93  46                 	db	70	;'F'
  2639  003F94  0A                 	db	10
  2640  003F95  0D                 	db	13
  2641  003F96  00                 	db	0
  2642  003F97  54                 	db	84	;'T'
  2643  003F98  33                 	db	51	;'3'
  2644  003F99  3A                 	db	58	;':'
  2645  003F9A  20                 	db	32
  2646  003F9B  4F                 	db	79	;'O'
  2647  003F9C  46                 	db	70	;'F'
  2648  003F9D  46                 	db	70	;'F'
  2649  003F9E  0A                 	db	10
  2650  003F9F  0D                 	db	13
  2651  003FA0  00                 	db	0
  2652  003FA1  54                 	db	84	;'T'
  2653  003FA2  34                 	db	52	;'4'
  2654  003FA3  3A                 	db	58	;':'
  2655  003FA4  20                 	db	32
  2656  003FA5  4F                 	db	79	;'O'
  2657  003FA6  46                 	db	70	;'F'
  2658  003FA7  46                 	db	70	;'F'
  2659  003FA8  0A                 	db	10
  2660  003FA9  0D                 	db	13
  2661  003FAA  00                 	db	0
  2662  003FAB  54                 	db	84	;'T'
  2663  003FAC  35                 	db	53	;'5'
  2664  003FAD  3A                 	db	58	;':'
  2665  003FAE  20                 	db	32
  2666  003FAF  4F                 	db	79	;'O'
  2667  003FB0  46                 	db	70	;'F'
  2668  003FB1  46                 	db	70	;'F'
  2669  003FB2  0A                 	db	10
  2670  003FB3  0D                 	db	13
  2671  003FB4  00                 	db	0
  2672  003FB5  54                 	db	84	;'T'
  2673  003FB6  36                 	db	54	;'6'
  2674  003FB7  3A                 	db	58	;':'
  2675  003FB8  20                 	db	32
  2676  003FB9  4F                 	db	79	;'O'
  2677  003FBA  46                 	db	70	;'F'
  2678  003FBB  46                 	db	70	;'F'
  2679  003FBC  0A                 	db	10
  2680  003FBD  0D                 	db	13
  2681  003FBE  00                 	db	0
  2682  003FBF  54                 	db	84	;'T'
  2683  003FC0  30                 	db	48	;'0'
  2684  003FC1  3A                 	db	58	;':'
  2685  003FC2  20                 	db	32
  2686  003FC3  4F                 	db	79	;'O'
  2687  003FC4  4E                 	db	78	;'N'
  2688  003FC5  0A                 	db	10
  2689  003FC6  0D                 	db	13
  2690  003FC7  00                 	db	0
  2691  003FC8  54                 	db	84	;'T'
  2692  003FC9  31                 	db	49	;'1'
  2693  003FCA  3A                 	db	58	;':'
  2694  003FCB  20                 	db	32
  2695  003FCC  4F                 	db	79	;'O'
  2696  003FCD  4E                 	db	78	;'N'
  2697  003FCE  0A                 	db	10
  2698  003FCF  0D                 	db	13
  2699  003FD0  00                 	db	0
  2700  003FD1  54                 	db	84	;'T'
  2701  003FD2  32                 	db	50	;'2'
  2702  003FD3  3A                 	db	58	;':'
  2703  003FD4  20                 	db	32
  2704  003FD5  4F                 	db	79	;'O'
  2705  003FD6  4E                 	db	78	;'N'
  2706  003FD7  0A                 	db	10
  2707  003FD8  0D                 	db	13
  2708  003FD9  00                 	db	0
  2709  003FDA  54                 	db	84	;'T'
  2710  003FDB  33                 	db	51	;'3'
  2711  003FDC  3A                 	db	58	;':'
  2712  003FDD  20                 	db	32
  2713  003FDE  4F                 	db	79	;'O'
  2714  003FDF  4E                 	db	78	;'N'
  2715  003FE0  0A                 	db	10
  2716  003FE1  0D                 	db	13
  2717  003FE2  00                 	db	0
  2718  003FE3  54                 	db	84	;'T'
  2719  003FE4  34                 	db	52	;'4'
  2720  003FE5  3A                 	db	58	;':'
  2721  003FE6  20                 	db	32
  2722  003FE7  4F                 	db	79	;'O'
  2723  003FE8  4E                 	db	78	;'N'
  2724  003FE9  0A                 	db	10
  2725  003FEA  0D                 	db	13
  2726  003FEB  00                 	db	0
  2727  003FEC  54                 	db	84	;'T'
  2728  003FED  35                 	db	53	;'5'
  2729  003FEE  3A                 	db	58	;':'
  2730  003FEF  20                 	db	32
  2731  003FF0  4F                 	db	79	;'O'
  2732  003FF1  4E                 	db	78	;'N'
  2733  003FF2  0A                 	db	10
  2734  003FF3  0D                 	db	13
  2735  003FF4  00                 	db	0
  2736  003FF5  54                 	db	84	;'T'
  2737  003FF6  36                 	db	54	;'6'
  2738  003FF7  3A                 	db	58	;':'
  2739  003FF8  20                 	db	32
  2740  003FF9  4F                 	db	79	;'O'
  2741  003FFA  4E                 	db	78	;'N'
  2742  003FFB  0A                 	db	10
  2743  003FFC  0D                 	db	13
  2744  003FFD  00                 	db	0
  2745  003FFE  00                 	db	0	; dummy byte at the end
  2746  0000                     
  2747                           ; #config settings
  2748                           
  2749                           	psect	cinit
  2750  0012E2                     __pcinit:
  2751                           	opt callstack 0
  2752  0012E2                     start_initialization:
  2753                           	opt callstack 0
  2754  0012E2                     __initialization:
  2755                           	opt callstack 0
  2756                           
  2757                           ; Initialize objects allocated to BANK1 (38 bytes)
  2758                           ; load TBLPTR registers with __pidataBANK1
  2759  0012E2  0EDC               	movlw	low __pidataBANK1
  2760  0012E4  6EF6               	movwf	tblptrl,c
  2761  0012E6  0E10               	movlw	high __pidataBANK1
  2762  0012E8  6EF7               	movwf	tblptrh,c
  2763  0012EA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2764  0012EC  6EF8               	movwf	tblptru,c
  2765  0012EE  EE01  F000         	lfsr	0,__pdataBANK1
  2766  0012F2  EE10 F026          	lfsr	1,38
  2767  0012F6                     copy_data0:
  2768  0012F6  0009               	tblrd		*+
  2769  0012F8  CFF5 FFEE          	movff	tablat,postinc0
  2770  0012FC  50E5               	movf	postdec1,w,c
  2771  0012FE  50E1               	movf	fsr1l,w,c
  2772  001300  E1FA               	bnz	copy_data0
  2773                           
  2774                           ; Clear objects allocated to BANK1 (32 bytes)
  2775  001302  EE01  F026         	lfsr	0,__pbssBANK1
  2776  001306  0E20               	movlw	32
  2777  001308                     clear_0:
  2778  001308  6AEE               	clrf	postinc0,c
  2779  00130A  06E8               	decf	wreg,f,c
  2780  00130C  E1FD               	bnz	clear_0
  2781                           
  2782                           ; Clear objects allocated to BANK0 (58 bytes)
  2783  00130E  EE00  F0AC         	lfsr	0,__pbssBANK0
  2784  001312  0E3A               	movlw	58
  2785  001314                     clear_1:
  2786  001314  6AEE               	clrf	postinc0,c
  2787  001316  06E8               	decf	wreg,f,c
  2788  001318  E1FD               	bnz	clear_1
  2789  00131A                     end_of_initialization:
  2790                           	opt callstack 0
  2791  00131A                     __end_of__initialization:
  2792                           	opt callstack 0
  2793  00131A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2794  00131C  6EF8               	movwf	tblptru,c
  2795  00131E  0100               	movlb	0
  2796  001320  EFC1  F012         	goto	_main	;jump to C main() function
  2797                           
  2798                           	psect	bssBANK0
  2799  0000AC                     __pbssBANK0:
  2800                           	opt callstack 0
  2801  0000AC                     _nout:
  2802                           	opt callstack 0
  2803  0000AC                     	ds	2
  2804  0000AE                     _width:
  2805                           	opt callstack 0
  2806  0000AE                     	ds	2
  2807  0000B0                     _prec:
  2808                           	opt callstack 0
  2809  0000B0                     	ds	2
  2810  0000B2                     _flags:
  2811                           	opt callstack 0
  2812  0000B2                     	ds	2
  2813  0000B4                     _pwmBoi:
  2814                           	opt callstack 0
  2815  0000B4                     	ds	50
  2816                           
  2817                           	psect	bssBANK1
  2818  000126                     __pbssBANK1:
  2819                           	opt callstack 0
  2820  000126                     _dbuf:
  2821                           	opt callstack 0
  2822  000126                     	ds	32
  2823                           
  2824                           	psect	dataBANK1
  2825  000100                     __pdataBANK1:
  2826                           	opt callstack 0
  2827  000100                     main@F779:
  2828                           	opt callstack 0
  2829  000100                     	ds	38
  2830                           
  2831                           	psect	cstackBANK0
  2832  000060                     __pcstackBANK0:
  2833                           	opt callstack 0
  2834  000060                     vfprintf@cfmt:
  2835                           	opt callstack 0
  2836                           
  2837                           ; 2 bytes @ 0x0
  2838  000060                     	ds	2
  2839  000062                     ?_printf:
  2840                           	opt callstack 0
  2841  000062                     printf@fmt:
  2842                           	opt callstack 0
  2843                           
  2844                           ; 2 bytes @ 0x2
  2845  000062                     	ds	6
  2846  000068                     printf@ap:
  2847                           	opt callstack 0
  2848                           
  2849                           ; 2 bytes @ 0x8
  2850  000068                     	ds	2
  2851  00006A                     SVPWM_SetVectorTimes@pm:
  2852                           	opt callstack 0
  2853  00006A                     Test_setTimer@time:
  2854                           	opt callstack 0
  2855                           
  2856                           ; 2 bytes @ 0xA
  2857  00006A                     	ds	2
  2858  00006C                     ??_SVPWM_SetVectorTimes:
  2859                           
  2860                           ; 1 bytes @ 0xC
  2861  00006C                     	ds	8
  2862  000074                     _SVPWM_SetVectorTimes$1547:
  2863                           	opt callstack 0
  2864                           
  2865                           ; 4 bytes @ 0x14
  2866  000074                     	ds	4
  2867  000078                     _SVPWM_SetVectorTimes$1548:
  2868                           	opt callstack 0
  2869                           
  2870                           ; 4 bytes @ 0x18
  2871  000078                     	ds	4
  2872  00007C                     SVPWM_SetVectorTimes@sector:
  2873                           	opt callstack 0
  2874                           
  2875                           ; 1 bytes @ 0x1C
  2876  00007C                     	ds	1
  2877  00007D                     SVPWM_SetVectorTimes@angleIndex:
  2878                           	opt callstack 0
  2879                           
  2880                           ; 2 bytes @ 0x1D
  2881  00007D                     	ds	2
  2882  00007F                     SVPWM_SetVectorTimes@sectorIndex:
  2883                           	opt callstack 0
  2884                           
  2885                           ; 2 bytes @ 0x1F
  2886  00007F                     	ds	2
  2887  000081                     SVPWM_STDISR@pm:
  2888                           	opt callstack 0
  2889                           
  2890                           ; 2 bytes @ 0x21
  2891  000081                     	ds	2
  2892  000083                     ??_main:
  2893                           
  2894                           ; 1 bytes @ 0x23
  2895  000083                     	ds	1
  2896  000084                     main@TEST_Angles:
  2897                           	opt callstack 0
  2898                           
  2899                           ; 38 bytes @ 0x24
  2900  000084                     	ds	38
  2901  0000AA                     main@i:
  2902                           	opt callstack 0
  2903                           
  2904                           ; 2 bytes @ 0x4A
  2905  0000AA                     	ds	2
  2906                           
  2907                           	psect	cstackCOMRAM
  2908  000001                     __pcstackCOMRAM:
  2909                           	opt callstack 0
  2910  000001                     ?_strlen:
  2911                           	opt callstack 0
  2912  000001                     ?___wmul:
  2913                           	opt callstack 0
  2914  000001                     ?___lwmod:
  2915                           	opt callstack 0
  2916  000001                     ?___flneg:
  2917                           	opt callstack 0
  2918  000001                     ?___xxtofl:
  2919                           	opt callstack 0
  2920  000001                     ?___aodiv:
  2921                           	opt callstack 0
  2922  000001                     ?___aomod:
  2923                           	opt callstack 0
  2924  000001                     ?___lodiv:
  2925                           	opt callstack 0
  2926  000001                     ?___lomod:
  2927                           	opt callstack 0
  2928  000001                     SVPWM_WriteV0@pm:
  2929                           	opt callstack 0
  2930  000001                     SVPWM_WriteV1@pm:
  2931                           	opt callstack 0
  2932  000001                     SVPWM_WriteV2@pm:
  2933                           	opt callstack 0
  2934  000001                     SVPWM_WriteV3@pm:
  2935                           	opt callstack 0
  2936  000001                     SVPWM_WriteV4@pm:
  2937                           	opt callstack 0
  2938  000001                     SVPWM_WriteV5@pm:
  2939                           	opt callstack 0
  2940  000001                     SVPWM_WriteV6@pm:
  2941                           	opt callstack 0
  2942  000001                     SVPWM_WriteV7@pm:
  2943                           	opt callstack 0
  2944  000001                     SVPWM_WriteOFF@pm:
  2945                           	opt callstack 0
  2946  000001                     SVPWM_UpdateCurrentTimer@pm:
  2947                           	opt callstack 0
  2948  000001                     SVPWM_GetAbsoluteVoltageVector@pm:
  2949                           	opt callstack 0
  2950  000001                     SVPWM_SetNextRelativeState@pm:
  2951                           	opt callstack 0
  2952  000001                     ___wmul@multiplier:
  2953                           	opt callstack 0
  2954  000001                     ___lwmod@dividend:
  2955                           	opt callstack 0
  2956  000001                     fputc@c:
  2957                           	opt callstack 0
  2958  000001                     strlen@s:
  2959                           	opt callstack 0
  2960  000001                     ___flneg@f1:
  2961                           	opt callstack 0
  2962  000001                     ___xxtofl@val:
  2963                           	opt callstack 0
  2964  000001                     ___aodiv@dividend:
  2965                           	opt callstack 0
  2966  000001                     ___aomod@dividend:
  2967                           	opt callstack 0
  2968  000001                     ___lodiv@dividend:
  2969                           	opt callstack 0
  2970  000001                     ___lomod@dividend:
  2971                           	opt callstack 0
  2972                           
  2973                           ; 8 bytes @ 0x0
  2974  000001                     	ds	2
  2975  000003                     ??_SVPWM_UpdateCurrentTimer:
  2976  000003                     ??_SVPWM_GetAbsoluteVoltageVector:
  2977  000003                     ??_SVPWM_SetNextRelativeState:
  2978  000003                     ___wmul@multiplicand:
  2979                           	opt callstack 0
  2980  000003                     ___lwmod@divisor:
  2981                           	opt callstack 0
  2982  000003                     fputc@fp:
  2983                           	opt callstack 0
  2984  000003                     strlen@a:
  2985                           	opt callstack 0
  2986                           
  2987                           ; 2 bytes @ 0x2
  2988  000003                     	ds	2
  2989  000005                     ??_fputc:
  2990  000005                     ??___xxtofl:
  2991  000005                     ?___fladd:
  2992                           	opt callstack 0
  2993  000005                     ___lwmod@counter:
  2994                           	opt callstack 0
  2995  000005                     SVPWM_WriteABSVector@pm:
  2996                           	opt callstack 0
  2997  000005                     ___wmul@product:
  2998                           	opt callstack 0
  2999  000005                     ___fladd@b:
  3000                           	opt callstack 0
  3001                           
  3002                           ; 4 bytes @ 0x4
  3003  000005                     	ds	2
  3004  000007                     ??_SVPWM_WriteABSVector:
  3005  000007                     ?___awdiv:
  3006                           	opt callstack 0
  3007  000007                     ?___lwdiv:
  3008                           	opt callstack 0
  3009  000007                     ___awdiv@dividend:
  3010                           	opt callstack 0
  3011  000007                     ___lwdiv@dividend:
  3012                           	opt callstack 0
  3013                           
  3014                           ; 2 bytes @ 0x6
  3015  000007                     	ds	2
  3016  000009                     ___xxtofl@sign:
  3017                           	opt callstack 0
  3018  000009                     ___awdiv@divisor:
  3019                           	opt callstack 0
  3020  000009                     ___lwdiv@divisor:
  3021                           	opt callstack 0
  3022  000009                     ___fladd@a:
  3023                           	opt callstack 0
  3024  000009                     ___aodiv@divisor:
  3025                           	opt callstack 0
  3026  000009                     ___aomod@divisor:
  3027                           	opt callstack 0
  3028  000009                     ___lodiv@divisor:
  3029                           	opt callstack 0
  3030  000009                     ___lomod@divisor:
  3031                           	opt callstack 0
  3032                           
  3033                           ; 8 bytes @ 0x8
  3034  000009                     	ds	1
  3035  00000A                     ___xxtofl@exp:
  3036                           	opt callstack 0
  3037  00000A                     fputs@s:
  3038                           	opt callstack 0
  3039                           
  3040                           ; 2 bytes @ 0x9
  3041  00000A                     	ds	1
  3042  00000B                     ___awdiv@counter:
  3043                           	opt callstack 0
  3044  00000B                     ___lwdiv@quotient:
  3045                           	opt callstack 0
  3046  00000B                     ___xxtofl@arg:
  3047                           	opt callstack 0
  3048                           
  3049                           ; 4 bytes @ 0xA
  3050  00000B                     	ds	1
  3051  00000C                     ___awdiv@sign:
  3052                           	opt callstack 0
  3053  00000C                     fputs@fp:
  3054                           	opt callstack 0
  3055                           
  3056                           ; 2 bytes @ 0xB
  3057  00000C                     	ds	1
  3058  00000D                     ??___fladd:
  3059  00000D                     ___lwdiv@counter:
  3060                           	opt callstack 0
  3061  00000D                     ___awdiv@quotient:
  3062                           	opt callstack 0
  3063                           
  3064                           ; 2 bytes @ 0xC
  3065  00000D                     	ds	1
  3066  00000E                     fputs@c:
  3067                           	opt callstack 0
  3068  00000E                     SVPWM_SetControlAngle@pm:
  3069                           	opt callstack 0
  3070                           
  3071                           ; 2 bytes @ 0xD
  3072  00000E                     	ds	1
  3073  00000F                     ?___awmod:
  3074                           	opt callstack 0
  3075  00000F                     ___awmod@dividend:
  3076                           	opt callstack 0
  3077  00000F                     fputs@i:
  3078                           	opt callstack 0
  3079                           
  3080                           ; 2 bytes @ 0xE
  3081  00000F                     	ds	1
  3082  000010                     SVPWM_SetControlAngle@inputAngle:
  3083                           	opt callstack 0
  3084                           
  3085                           ; 2 bytes @ 0xF
  3086  000010                     	ds	1
  3087  000011                     ?_pad:
  3088                           	opt callstack 0
  3089  000011                     ___aodiv@counter:
  3090                           	opt callstack 0
  3091  000011                     ___aomod@counter:
  3092                           	opt callstack 0
  3093  000011                     ___lomod@counter:
  3094                           	opt callstack 0
  3095  000011                     ___fladd@signs:
  3096                           	opt callstack 0
  3097  000011                     pad@fp:
  3098                           	opt callstack 0
  3099  000011                     ___awmod@divisor:
  3100                           	opt callstack 0
  3101  000011                     ___lodiv@quotient:
  3102                           	opt callstack 0
  3103                           
  3104                           ; 8 bytes @ 0x10
  3105  000011                     	ds	1
  3106  000012                     ___aodiv@sign:
  3107                           	opt callstack 0
  3108  000012                     ___aomod@sign:
  3109                           	opt callstack 0
  3110  000012                     ___fladd@aexp:
  3111                           	opt callstack 0
  3112                           
  3113                           ; 1 bytes @ 0x11
  3114  000012                     	ds	1
  3115  000013                     ?_abs:
  3116                           	opt callstack 0
  3117  000013                     ___awmod@counter:
  3118                           	opt callstack 0
  3119  000013                     ___fladd@bexp:
  3120                           	opt callstack 0
  3121  000013                     pad@buf:
  3122                           	opt callstack 0
  3123  000013                     abs@a:
  3124                           	opt callstack 0
  3125  000013                     ___aodiv@quotient:
  3126                           	opt callstack 0
  3127                           
  3128                           ; 8 bytes @ 0x12
  3129  000013                     	ds	1
  3130  000014                     ___awmod@sign:
  3131                           	opt callstack 0
  3132  000014                     ___fladd@grs:
  3133                           	opt callstack 0
  3134                           
  3135                           ; 1 bytes @ 0x13
  3136  000014                     	ds	1
  3137  000015                     ??_abs:
  3138  000015                     ?___flmul:
  3139                           	opt callstack 0
  3140  000015                     SVPWM_GetControlAngleSEC@pm:
  3141                           	opt callstack 0
  3142  000015                     pad@p:
  3143                           	opt callstack 0
  3144  000015                     ___flmul@b:
  3145                           	opt callstack 0
  3146                           
  3147                           ; 4 bytes @ 0x14
  3148  000015                     	ds	2
  3149  000017                     ??_pad:
  3150  000017                     SVPWM_SetCurrentSEC@pm:
  3151                           	opt callstack 0
  3152                           
  3153                           ; 2 bytes @ 0x16
  3154  000017                     	ds	1
  3155  000018                     pad@i:
  3156                           	opt callstack 0
  3157                           
  3158                           ; 2 bytes @ 0x17
  3159  000018                     	ds	1
  3160  000019                     ??_SVPWM_SetCurrentSEC:
  3161  000019                     ___lodiv@counter:
  3162                           	opt callstack 0
  3163  000019                     ___flmul@a:
  3164                           	opt callstack 0
  3165                           
  3166                           ; 4 bytes @ 0x18
  3167  000019                     	ds	1
  3168  00001A                     pad@w:
  3169                           	opt callstack 0
  3170                           
  3171                           ; 2 bytes @ 0x19
  3172  00001A                     	ds	2
  3173  00001C                     ?_dtoa:
  3174                           	opt callstack 0
  3175  00001C                     ?_utoa:
  3176                           	opt callstack 0
  3177  00001C                     dtoa@fp:
  3178                           	opt callstack 0
  3179  00001C                     utoa@fp:
  3180                           	opt callstack 0
  3181                           
  3182                           ; 2 bytes @ 0x1B
  3183  00001C                     	ds	1
  3184  00001D                     ??___flmul:
  3185                           
  3186                           ; 1 bytes @ 0x1C
  3187  00001D                     	ds	1
  3188  00001E                     dtoa@d:
  3189                           	opt callstack 0
  3190  00001E                     utoa@d:
  3191                           	opt callstack 0
  3192                           
  3193                           ; 8 bytes @ 0x1D
  3194  00001E                     	ds	3
  3195  000021                     ___flmul@sign:
  3196                           	opt callstack 0
  3197                           
  3198                           ; 1 bytes @ 0x20
  3199  000021                     	ds	1
  3200  000022                     ___flmul@grs:
  3201                           	opt callstack 0
  3202                           
  3203                           ; 4 bytes @ 0x21
  3204  000022                     	ds	4
  3205  000026                     ??_dtoa:
  3206  000026                     ??_utoa:
  3207  000026                     ___flmul@aexp:
  3208                           	opt callstack 0
  3209                           
  3210                           ; 1 bytes @ 0x25
  3211  000026                     	ds	1
  3212  000027                     ___flmul@bexp:
  3213                           	opt callstack 0
  3214                           
  3215                           ; 1 bytes @ 0x26
  3216  000027                     	ds	1
  3217  000028                     ___flmul@prod:
  3218                           	opt callstack 0
  3219                           
  3220                           ; 4 bytes @ 0x27
  3221  000028                     	ds	4
  3222  00002C                     ___flmul@temp:
  3223                           	opt callstack 0
  3224                           
  3225                           ; 2 bytes @ 0x2B
  3226  00002C                     	ds	2
  3227  00002E                     ?___flsub:
  3228                           	opt callstack 0
  3229  00002E                     _dtoa$792:
  3230                           	opt callstack 0
  3231  00002E                     utoa@p:
  3232                           	opt callstack 0
  3233  00002E                     ___flsub@b:
  3234                           	opt callstack 0
  3235                           
  3236                           ; 4 bytes @ 0x2D
  3237  00002E                     	ds	2
  3238  000030                     dtoa@p:
  3239                           	opt callstack 0
  3240  000030                     utoa@w:
  3241                           	opt callstack 0
  3242                           
  3243                           ; 2 bytes @ 0x2F
  3244  000030                     	ds	2
  3245  000032                     dtoa@w:
  3246                           	opt callstack 0
  3247  000032                     ___flsub@a:
  3248                           	opt callstack 0
  3249  000032                     utoa@n:
  3250                           	opt callstack 0
  3251                           
  3252                           ; 8 bytes @ 0x31
  3253  000032                     	ds	2
  3254  000034                     dtoa@s:
  3255                           	opt callstack 0
  3256                           
  3257                           ; 2 bytes @ 0x33
  3258  000034                     	ds	2
  3259  000036                     ?___fltol:
  3260                           	opt callstack 0
  3261  000036                     ___fltol@f1:
  3262                           	opt callstack 0
  3263  000036                     dtoa@n:
  3264                           	opt callstack 0
  3265                           
  3266                           ; 8 bytes @ 0x35
  3267  000036                     	ds	4
  3268  00003A                     ??___fltol:
  3269  00003A                     utoa@i:
  3270                           	opt callstack 0
  3271                           
  3272                           ; 2 bytes @ 0x39
  3273  00003A                     	ds	4
  3274  00003E                     ___fltol@sign1:
  3275                           	opt callstack 0
  3276  00003E                     dtoa@i:
  3277                           	opt callstack 0
  3278                           
  3279                           ; 2 bytes @ 0x3D
  3280  00003E                     	ds	1
  3281  00003F                     ___fltol@exp1:
  3282                           	opt callstack 0
  3283                           
  3284                           ; 1 bytes @ 0x3E
  3285  00003F                     	ds	1
  3286  000040                     ?_vfpfcnvrt:
  3287                           	opt callstack 0
  3288  000040                     vfpfcnvrt@fp:
  3289                           	opt callstack 0
  3290                           
  3291                           ; 2 bytes @ 0x3F
  3292  000040                     	ds	2
  3293  000042                     vfpfcnvrt@fmt:
  3294                           	opt callstack 0
  3295                           
  3296                           ; 2 bytes @ 0x41
  3297  000042                     	ds	2
  3298  000044                     vfpfcnvrt@ap:
  3299                           	opt callstack 0
  3300                           
  3301                           ; 2 bytes @ 0x43
  3302  000044                     	ds	2
  3303  000046                     ??_vfpfcnvrt:
  3304                           
  3305                           ; 1 bytes @ 0x45
  3306  000046                     	ds	4
  3307  00004A                     vfpfcnvrt@ll:
  3308                           	opt callstack 0
  3309                           
  3310                           ; 8 bytes @ 0x49
  3311  00004A                     	ds	8
  3312  000052                     vfpfcnvrt@llu:
  3313                           	opt callstack 0
  3314                           
  3315                           ; 8 bytes @ 0x51
  3316  000052                     	ds	8
  3317  00005A                     ?_vfprintf:
  3318                           	opt callstack 0
  3319  00005A                     vfprintf@fp:
  3320                           	opt callstack 0
  3321                           
  3322                           ; 2 bytes @ 0x59
  3323  00005A                     	ds	2
  3324  00005C                     vfprintf@fmt:
  3325                           	opt callstack 0
  3326                           
  3327                           ; 2 bytes @ 0x5B
  3328  00005C                     	ds	2
  3329  00005E                     vfprintf@ap:
  3330                           	opt callstack 0
  3331                           
  3332                           ; 2 bytes @ 0x5D
  3333  00005E                     	ds	2
  3334  000060                     
  3335                           ; 1 bytes @ 0x5F
  3336 ;;
  3337 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3338 ;;
  3339 ;; *************** function _main *****************
  3340 ;; Defined at:
  3341 ;;		line 26 in file "../main.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;		None
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;  i               2   74[BANK0 ] int 
  3346 ;;  TEST_Angles    38   36[BANK0 ] unsigned short [19]
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  2  155[None  ] int 
  3349 ;; Registers used:
  3350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3356 ;;      Params:         0       0       0       0
  3357 ;;      Locals:         0      40       0       0
  3358 ;;      Temps:          0       1       0       0
  3359 ;;      Totals:         0      41       0       0
  3360 ;;Total ram usage:       41 bytes
  3361 ;; Hardware stack levels required when called:   11
  3362 ;; This function calls:
  3363 ;;		_SVPWM_GetAbsoluteVoltageVector
  3364 ;;		_SVPWM_SetControlAngle
  3365 ;;		_SVPWM_SetCurrentSEC
  3366 ;;		_SVPWM_SetVectorTimes
  3367 ;;		___awdiv
  3368 ;;		___lwdiv
  3369 ;;		___wmul
  3370 ;;		_fakeISR
  3371 ;;		_printf
  3372 ;; This function is called by:
  3373 ;;		Startup code after reset
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           	psect	text0
  3378  002582                     __ptext0:
  3379                           	opt callstack 0
  3380  002582                     _main:
  3381                           	opt callstack 20
  3382                           
  3383                           ;../main.c: 28:     pwmBoi.setTran1 = TEST_V1;
  3384                           
  3385                           ;incstack = 0
  3386  002582  0E00               	movlw	0
  3387  002584  0100               	movlb	0	; () banked
  3388  002586  6FB4               	movwf	_pwmBoi& (0+255),b
  3389  002588  0E00               	movlw	0
  3390  00258A  6FB5               	movwf	(_pwmBoi+1)& (0+255),b
  3391                           
  3392                           ;../main.c: 29:     pwmBoi.setTran2 = TEST_V2;
  3393  00258C  0E00               	movlw	0
  3394  00258E  6FB6               	movwf	(_pwmBoi+2)& (0+255),b
  3395  002590  0E00               	movlw	0
  3396  002592  6FB7               	movwf	(_pwmBoi+3)& (0+255),b
  3397                           
  3398                           ;../main.c: 30:     pwmBoi.setTran3 = TEST_V3;
  3399  002594  0E00               	movlw	0
  3400  002596  6FB8               	movwf	(_pwmBoi+4)& (0+255),b
  3401  002598  0E00               	movlw	0
  3402  00259A  6FB9               	movwf	(_pwmBoi+5)& (0+255),b
  3403                           
  3404                           ;../main.c: 31:     pwmBoi.setTran4 = TEST_V4;
  3405  00259C  0E00               	movlw	0
  3406  00259E  6FBA               	movwf	(_pwmBoi+6)& (0+255),b
  3407  0025A0  0E00               	movlw	0
  3408  0025A2  6FBB               	movwf	(_pwmBoi+7)& (0+255),b
  3409                           
  3410                           ;../main.c: 32:     pwmBoi.setTran5 = TEST_V5;
  3411  0025A4  0E00               	movlw	0
  3412  0025A6  6FBC               	movwf	(_pwmBoi+8)& (0+255),b
  3413  0025A8  0E00               	movlw	0
  3414  0025AA  6FBD               	movwf	(_pwmBoi+9)& (0+255),b
  3415                           
  3416                           ;../main.c: 33:     pwmBoi.setTran6 = TEST_V6;
  3417  0025AC  0E00               	movlw	0
  3418  0025AE  6FBE               	movwf	(_pwmBoi+10)& (0+255),b
  3419  0025B0  0E00               	movlw	0
  3420  0025B2  6FBF               	movwf	(_pwmBoi+11)& (0+255),b
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;../main.c: 36:     SVPWM_SetControlAngle(&pwmBoi, (0x3FFF*75/360));
  3424  0025B4  0EB4               	movlw	low _pwmBoi
  3425  0025B6  6E0E               	movwf	SVPWM_SetControlAngle@pm,c
  3426  0025B8  0E00               	movlw	high _pwmBoi
  3427  0025BA  6E0F               	movwf	SVPWM_SetControlAngle@pm+1,c
  3428  0025BC  0EFF               	movlw	255
  3429  0025BE  6E11               	movwf	SVPWM_SetControlAngle@inputAngle+1,c
  3430  0025C0  0ED3               	movlw	211
  3431  0025C2  6E10               	movwf	SVPWM_SetControlAngle@inputAngle,c
  3432  0025C4  EC12  F009         	call	_SVPWM_SetControlAngle	;wreg free
  3433                           
  3434                           ;../main.c: 39:     SVPWM_SetCurrentSEC(&pwmBoi);
  3435  0025C8  0EB4               	movlw	low _pwmBoi
  3436  0025CA  6E17               	movwf	SVPWM_SetCurrentSEC@pm,c
  3437  0025CC  0E00               	movlw	high _pwmBoi
  3438  0025CE  6E18               	movwf	SVPWM_SetCurrentSEC@pm+1,c
  3439  0025D0  EC4B  F008         	call	_SVPWM_SetCurrentSEC	;wreg free
  3440                           
  3441                           ;../main.c: 40:     printf("Sector: %u\n\r", pwmBoi.CurrentSector);
  3442  0025D4  0E61               	movlw	low STR_19
  3443  0025D6  0100               	movlb	0	; () banked
  3444  0025D8  6F62               	movwf	printf@fmt& (0+255),b
  3445  0025DA  0E3F               	movlw	high STR_19
  3446  0025DC  6F63               	movwf	(printf@fmt+1)& (0+255),b
  3447  0025DE  C0D0  F064         	movff	_pwmBoi+28,?_printf+2
  3448  0025E2  6B65               	clrf	(?_printf+3)& (0+255),b
  3449  0025E4  EC81  F008         	call	_printf	;wreg free
  3450                           
  3451                           ;../main.c: 44:     pwmBoi.Timer.totalPeriod = 30000;
  3452  0025E8  0E75               	movlw	117
  3453  0025EA  0100               	movlb	0	; () banked
  3454  0025EC  6FCB               	movwf	(_pwmBoi+23)& (0+255),b
  3455  0025EE  0E30               	movlw	48
  3456  0025F0  6FCA               	movwf	(_pwmBoi+22)& (0+255),b
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;../main.c: 45:     pwmBoi.Timer.magnitude = 0x7F;
  3460  0025F2  0E7F               	movlw	127
  3461  0025F4  6FCE               	movwf	(_pwmBoi+26)& (0+255),b
  3462                           
  3463                           ; BSR set to: 0
  3464                           ;../main.c: 46:     SVPWM_SetVectorTimes(&pwmBoi);
  3465  0025F6  0EB4               	movlw	low _pwmBoi
  3466  0025F8  6F6A               	movwf	SVPWM_SetVectorTimes@pm& (0+255),b
  3467  0025FA  0E00               	movlw	high _pwmBoi
  3468  0025FC  6F6B               	movwf	(SVPWM_SetVectorTimes@pm+1)& (0+255),b
  3469  0025FE  EC1A  F017         	call	_SVPWM_SetVectorTimes	;wreg free
  3470                           
  3471                           ;../main.c: 48:     pwmBoi.refVector.magnitude = 1000;
  3472  002602  0E03               	movlw	3
  3473  002604  0100               	movlb	0	; () banked
  3474  002606  6FE3               	movwf	(_pwmBoi+47)& (0+255),b
  3475  002608  0EE8               	movlw	232
  3476  00260A  6FE2               	movwf	(_pwmBoi+46)& (0+255),b
  3477                           
  3478                           ; BSR set to: 0
  3479                           ;../main.c: 74:     uint16_t TEST_Angles [19] = {12, 45, 59, 60, 105, 119, 120, 155, 179
      +                          , 180, 203, 239, 240, 258, 299, 300, 315, 359, 360};
  3480  00260C  EE21  F000         	lfsr	2,main@F779
  3481  002610  EE10  F084         	lfsr	1,main@TEST_Angles
  3482  002614  0E25               	movlw	37
  3483  002616                     u3651:
  3484  002616  CFDB FFE3          	movff	plusw2,plusw1
  3485  00261A  06E8               	decf	wreg,f,c
  3486  00261C  E2FC               	bc	u3651
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;../main.c: 76:     for(int i = 0; i < 19; i ++){
  3490  00261E  0E00               	movlw	0
  3491  002620  6FAB               	movwf	(main@i+1)& (0+255),b
  3492  002622  0E00               	movlw	0
  3493  002624  6FAA               	movwf	main@i& (0+255),b
  3494  002626                     l3449:
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;../main.c: 77:         printf("--------------------------------------------------\n\r")
      +                          ;
  3498  002626  0E59               	movlw	low STR_20
  3499  002628  6F62               	movwf	printf@fmt& (0+255),b
  3500  00262A  0E3E               	movlw	high STR_20
  3501  00262C  6F63               	movwf	(printf@fmt+1)& (0+255),b
  3502  00262E  EC81  F008         	call	_printf	;wreg free
  3503                           
  3504                           ;../main.c: 78:         printf("Angle: %d\n\r", TEST_Angles[i]);
  3505  002632  0E48               	movlw	low (STR_24+4)
  3506  002634  0100               	movlb	0	; () banked
  3507  002636  6F62               	movwf	printf@fmt& (0+255),b
  3508  002638  0E3F               	movlw	high (STR_24+4)
  3509  00263A  6F63               	movwf	(printf@fmt+1)& (0+255),b
  3510  00263C  90D8               	bcf	status,0,c
  3511  00263E  35AA               	rlcf	main@i& (0+255),w,b
  3512  002640  6ED9               	movwf	fsr2l,c
  3513  002642  35AB               	rlcf	(main@i+1)& (0+255),w,b
  3514  002644  6EDA               	movwf	fsr2h,c
  3515  002646  0E84               	movlw	low main@TEST_Angles
  3516  002648  26D9               	addwf	fsr2l,f,c
  3517  00264A  0E00               	movlw	high main@TEST_Angles
  3518  00264C  22DA               	addwfc	fsr2h,f,c
  3519  00264E  CFDE F064          	movff	postinc2,?_printf+2
  3520  002652  CFDD F065          	movff	postdec2,?_printf+3
  3521  002656  EC81  F008         	call	_printf	;wreg free
  3522                           
  3523                           ;../main.c: 79:         printf("Angle: %d\n\r", pwmBoi.RefAngle * 60 / 0x3FFF);
  3524  00265A  0E48               	movlw	low (STR_24+4)
  3525  00265C  0100               	movlb	0	; () banked
  3526  00265E  6F62               	movwf	printf@fmt& (0+255),b
  3527  002660  0E3F               	movlw	high (STR_24+4)
  3528  002662  6F63               	movwf	(printf@fmt+1)& (0+255),b
  3529  002664  C0C2  F001         	movff	_pwmBoi+14,___wmul@multiplier
  3530  002668  C0C3  F002         	movff	_pwmBoi+15,___wmul@multiplier+1
  3531  00266C  0E00               	movlw	0
  3532  00266E  6E04               	movwf	___wmul@multiplicand+1,c
  3533  002670  0E3C               	movlw	60
  3534  002672  6E03               	movwf	___wmul@multiplicand,c
  3535  002674  EC5B  F008         	call	___wmul	;wreg free
  3536  002678  C001  F007         	movff	?___wmul,___awdiv@dividend
  3537  00267C  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  3538  002680  0E3F               	movlw	63
  3539  002682  6E0A               	movwf	___awdiv@divisor+1,c
  3540  002684  6809               	setf	___awdiv@divisor,c
  3541  002686  ECB7  F00A         	call	___awdiv	;wreg free
  3542  00268A  C007  F064         	movff	?___awdiv,?_printf+2
  3543  00268E  C008  F065         	movff	?___awdiv+1,?_printf+3
  3544  002692  EC81  F008         	call	_printf	;wreg free
  3545                           
  3546                           ;../main.c: 80:         SVPWM_SetControlAngle(&pwmBoi, (0x3FFF*TEST_Angles[i]/360));
  3547  002696  0EB4               	movlw	low _pwmBoi
  3548  002698  6E0E               	movwf	SVPWM_SetControlAngle@pm,c
  3549  00269A  0E00               	movlw	high _pwmBoi
  3550  00269C  6E0F               	movwf	SVPWM_SetControlAngle@pm+1,c
  3551  00269E  90D8               	bcf	status,0,c
  3552  0026A0  0100               	movlb	0	; () banked
  3553  0026A2  35AA               	rlcf	main@i& (0+255),w,b
  3554  0026A4  6ED9               	movwf	fsr2l,c
  3555  0026A6  35AB               	rlcf	(main@i+1)& (0+255),w,b
  3556  0026A8  6EDA               	movwf	fsr2h,c
  3557  0026AA  0E84               	movlw	low main@TEST_Angles
  3558  0026AC  26D9               	addwf	fsr2l,f,c
  3559  0026AE  0E00               	movlw	high main@TEST_Angles
  3560  0026B0  22DA               	addwfc	fsr2h,f,c
  3561  0026B2  CFDE F001          	movff	postinc2,___wmul@multiplier
  3562  0026B6  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  3563  0026BA  0E3F               	movlw	63
  3564  0026BC  6E04               	movwf	___wmul@multiplicand+1,c
  3565  0026BE  6803               	setf	___wmul@multiplicand,c
  3566  0026C0  EC5B  F008         	call	___wmul	;wreg free
  3567  0026C4  C001  F007         	movff	?___wmul,___lwdiv@dividend
  3568  0026C8  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  3569  0026CC  0E01               	movlw	1
  3570  0026CE  6E0A               	movwf	___lwdiv@divisor+1,c
  3571  0026D0  0E68               	movlw	104
  3572  0026D2  6E09               	movwf	___lwdiv@divisor,c
  3573  0026D4  ECB5  F009         	call	___lwdiv	;wreg free
  3574  0026D8  C007  F010         	movff	?___lwdiv,SVPWM_SetControlAngle@inputAngle
  3575  0026DC  C008  F011         	movff	?___lwdiv+1,SVPWM_SetControlAngle@inputAngle+1
  3576  0026E0  EC12  F009         	call	_SVPWM_SetControlAngle	;wreg free
  3577                           
  3578                           ;../main.c: 81:         printf("Control Angle: %d\n\r", pwmBoi.ControlAngle);
  3579  0026E4  0E8E               	movlw	low STR_23
  3580  0026E6  0100               	movlb	0	; () banked
  3581  0026E8  6F62               	movwf	printf@fmt& (0+255),b
  3582  0026EA  0E3E               	movlw	high STR_23
  3583  0026EC  6F63               	movwf	(printf@fmt+1)& (0+255),b
  3584  0026EE  C0C0  F064         	movff	_pwmBoi+12,?_printf+2
  3585  0026F2  C0C1  F065         	movff	_pwmBoi+13,?_printf+3
  3586  0026F6  EC81  F008         	call	_printf	;wreg free
  3587                           
  3588                           ;../main.c: 82:         printf("Ref Angle: %d\n\r", pwmBoi.RefAngle);
  3589  0026FA  0E44               	movlw	low STR_24
  3590  0026FC  0100               	movlb	0	; () banked
  3591  0026FE  6F62               	movwf	printf@fmt& (0+255),b
  3592  002700  0E3F               	movlw	high STR_24
  3593  002702  6F63               	movwf	(printf@fmt+1)& (0+255),b
  3594  002704  C0C2  F064         	movff	_pwmBoi+14,?_printf+2
  3595  002708  C0C3  F065         	movff	_pwmBoi+15,?_printf+3
  3596  00270C  EC81  F008         	call	_printf	;wreg free
  3597                           
  3598                           ;../main.c: 83:         fakeISR();
  3599  002710  EC3C  F008         	call	_fakeISR	;wreg free
  3600                           
  3601                           ;../main.c: 84:         printf("ABS Voltage: %d\n\r", SVPWM_GetAbsoluteVoltageVector(&pw
      +                          mBoi));
  3602  002714  0EEF               	movlw	low STR_25
  3603  002716  0100               	movlb	0	; () banked
  3604  002718  6F62               	movwf	printf@fmt& (0+255),b
  3605  00271A  0E3E               	movlw	high STR_25
  3606  00271C  6F63               	movwf	(printf@fmt+1)& (0+255),b
  3607  00271E  0EB4               	movlw	low _pwmBoi
  3608  002720  6E01               	movwf	SVPWM_GetAbsoluteVoltageVector@pm,c
  3609  002722  0E00               	movlw	high _pwmBoi
  3610  002724  6E02               	movwf	SVPWM_GetAbsoluteVoltageVector@pm+1,c
  3611  002726  ECFD  F00E         	call	_SVPWM_GetAbsoluteVoltageVector	;wreg free
  3612  00272A  0100               	movlb	0	; () banked
  3613  00272C  6F83               	movwf	??_main& (0+255),b
  3614  00272E  5183               	movf	??_main& (0+255),w,b
  3615  002730  6F64               	movwf	(?_printf+2)& (0+255),b
  3616  002732  6B65               	clrf	(?_printf+3)& (0+255),b
  3617  002734  EC81  F008         	call	_printf	;wreg free
  3618                           
  3619                           ;../main.c: 85:         printf("Sector: %d\n\r", (pwmBoi.CurrentSector));
  3620  002738  0E54               	movlw	low STR_26
  3621  00273A  0100               	movlb	0	; () banked
  3622  00273C  6F62               	movwf	printf@fmt& (0+255),b
  3623  00273E  0E3F               	movlw	high STR_26
  3624  002740  6F63               	movwf	(printf@fmt+1)& (0+255),b
  3625  002742  C0D0  F064         	movff	_pwmBoi+28,?_printf+2
  3626  002746  6B65               	clrf	(?_printf+3)& (0+255),b
  3627  002748  EC81  F008         	call	_printf	;wreg free
  3628                           
  3629                           ;../main.c: 86:         printf("Current State: %d\n\r", pwmBoi.State);
  3630  00274C  0EA2               	movlw	low STR_27
  3631  00274E  0100               	movlb	0	; () banked
  3632  002750  6F62               	movwf	printf@fmt& (0+255),b
  3633  002752  0E3E               	movlw	high STR_27
  3634  002754  6F63               	movwf	(printf@fmt+1)& (0+255),b
  3635  002756  C0CF  F064         	movff	_pwmBoi+27,?_printf+2
  3636  00275A  6B65               	clrf	(?_printf+3)& (0+255),b
  3637  00275C  EC81  F008         	call	_printf	;wreg free
  3638                           
  3639                           ;../main.c: 87:         printf("Total Period: %u\n\r", pwmBoi.Timer.totalPeriod);
  3640  002760  0ECA               	movlw	low STR_28
  3641  002762  0100               	movlb	0	; () banked
  3642  002764  6F62               	movwf	printf@fmt& (0+255),b
  3643  002766  0E3E               	movlw	high STR_28
  3644  002768  6F63               	movwf	(printf@fmt+1)& (0+255),b
  3645  00276A  C0CA  F064         	movff	_pwmBoi+22,?_printf+2
  3646  00276E  C0CB  F065         	movff	_pwmBoi+23,?_printf+3
  3647  002772  EC81  F008         	call	_printf	;wreg free
  3648                           
  3649                           ;../main.c: 88:         printf("Half Vec Time: %u\n\r", pwmBoi.Timer.halfZeroVector);
  3650  002776  0EB6               	movlw	low STR_29
  3651  002778  0100               	movlb	0	; () banked
  3652  00277A  6F62               	movwf	printf@fmt& (0+255),b
  3653  00277C  0E3E               	movlw	high STR_29
  3654  00277E  6F63               	movwf	(printf@fmt+1)& (0+255),b
  3655  002780  C0C4  F064         	movff	_pwmBoi+16,?_printf+2
  3656  002784  C0C5  F065         	movff	_pwmBoi+17,?_printf+3
  3657  002788  EC81  F008         	call	_printf	;wreg free
  3658                           
  3659                           ;../main.c: 89:         printf("Vec 1 Time: %u\n\r", pwmBoi.Timer.basicVec1);
  3660  00278C  0E12               	movlw	low STR_30
  3661  00278E  0100               	movlb	0	; () banked
  3662  002790  6F62               	movwf	printf@fmt& (0+255),b
  3663  002792  0E3F               	movlw	high STR_30
  3664  002794  6F63               	movwf	(printf@fmt+1)& (0+255),b
  3665  002796  C0C6  F064         	movff	_pwmBoi+18,?_printf+2
  3666  00279A  C0C7  F065         	movff	_pwmBoi+19,?_printf+3
  3667  00279E  EC81  F008         	call	_printf	;wreg free
  3668                           
  3669                           ;../main.c: 90:         printf("Vec 2 Time: %u\n\r", pwmBoi.Timer.basicVec2);
  3670  0027A2  0E23               	movlw	low STR_31
  3671  0027A4  0100               	movlb	0	; () banked
  3672  0027A6  6F62               	movwf	printf@fmt& (0+255),b
  3673  0027A8  0E3F               	movlw	high STR_31
  3674  0027AA  6F63               	movwf	(printf@fmt+1)& (0+255),b
  3675  0027AC  C0C8  F064         	movff	_pwmBoi+20,?_printf+2
  3676  0027B0  C0C9  F065         	movff	_pwmBoi+21,?_printf+3
  3677  0027B4  EC81  F008         	call	_printf	;wreg free
  3678                           
  3679                           ;../main.c: 92:     }
  3680  0027B8  0100               	movlb	0	; () banked
  3681  0027BA  4BAA               	infsnz	main@i& (0+255),f,b
  3682  0027BC  2BAB               	incf	(main@i+1)& (0+255),f,b
  3683                           
  3684                           ; BSR set to: 0
  3685  0027BE  BFAB               	btfsc	(main@i+1)& (0+255),7,b
  3686  0027C0  D732               	goto	l3449
  3687  0027C2  51AB               	movf	(main@i+1)& (0+255),w,b
  3688  0027C4  E106               	bnz	u3660
  3689  0027C6  0E13               	movlw	19
  3690  0027C8  5DAA               	subwf	main@i& (0+255),w,b
  3691  0027CA  B0D8               	btfsc	status,0,c
  3692  0027CC  EF00  F000         	goto	start
  3693  0027D0  D72A               	goto	l3449
  3694  0027D2                     u3660:
  3695                           
  3696                           ; BSR set to: 0
  3697  0027D2  EF00  F000         	goto	start
  3698  0027D6                     __end_of_main:
  3699                           	opt callstack 0
  3700                           
  3701 ;; *************** function _fakeISR *****************
  3702 ;; Defined at:
  3703 ;;		line 21 in file "../main.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;		None
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;		None
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  1    wreg      void 
  3710 ;; Registers used:
  3711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3717 ;;      Params:         0       0       0       0
  3718 ;;      Locals:         0       0       0       0
  3719 ;;      Temps:          0       0       0       0
  3720 ;;      Totals:         0       0       0       0
  3721 ;;Total ram usage:        0 bytes
  3722 ;; Hardware stack levels used:    1
  3723 ;; Hardware stack levels required when called:   10
  3724 ;; This function calls:
  3725 ;;		_SVPWM_STDISR
  3726 ;;		_Test_setTimer
  3727 ;; This function is called by:
  3728 ;;		_main
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732                           	psect	text1
  3733  001078                     __ptext1:
  3734                           	opt callstack 0
  3735  001078                     _fakeISR:
  3736                           	opt callstack 20
  3737                           
  3738                           ;../main.c: 22:     SVPWM_STDISR(&pwmBoi);
  3739                           
  3740                           ; BSR set to: 0
  3741                           ;incstack = 0
  3742  001078  0EB4               	movlw	low _pwmBoi
  3743  00107A  0100               	movlb	0	; () banked
  3744  00107C  6F81               	movwf	SVPWM_STDISR@pm& (0+255),b
  3745  00107E  0E00               	movlw	high _pwmBoi
  3746  001080  6F82               	movwf	(SVPWM_STDISR@pm+1)& (0+255),b
  3747  001082  EC31  F009         	call	_SVPWM_STDISR	;wreg free
  3748                           
  3749                           ;../main.c: 23:     Test_setTimer(0xFFFF - pwmBoi.Timer.currentTime);
  3750  001086  0100               	movlb	0	; () banked
  3751  001088  1DCC               	comf	(_pwmBoi+24)& (0+255),w,b
  3752  00108A  6F6A               	movwf	Test_setTimer@time& (0+255),b
  3753  00108C  1DCD               	comf	(_pwmBoi+25)& (0+255),w,b
  3754  00108E  6F6B               	movwf	(Test_setTimer@time+1)& (0+255),b
  3755  001090  EC30  F008         	call	_Test_setTimer	;wreg free
  3756  001094  0012               	return		;funcret
  3757  001096                     __end_of_fakeISR:
  3758                           	opt callstack 0
  3759                           
  3760 ;; *************** function _Test_setTimer *****************
  3761 ;; Defined at:
  3762 ;;		line 196 in file "../functions.h"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;  time            2   10[BANK0 ] unsigned short 
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;		None
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  2   10[BANK0 ] unsigned short 
  3769 ;; Registers used:
  3770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3776 ;;      Params:         0       2       0       0
  3777 ;;      Locals:         0       0       0       0
  3778 ;;      Temps:          0       0       0       0
  3779 ;;      Totals:         0       2       0       0
  3780 ;;Total ram usage:        2 bytes
  3781 ;; Hardware stack levels used:    1
  3782 ;; Hardware stack levels required when called:    8
  3783 ;; This function calls:
  3784 ;;		_printf
  3785 ;; This function is called by:
  3786 ;;		_fakeISR
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           	psect	text2
  3791  001060                     __ptext2:
  3792                           	opt callstack 0
  3793  001060                     _Test_setTimer:
  3794                           	opt callstack 21
  3795                           
  3796                           ;../functions.h: 197:     printf("Time: %d\n\r", time);
  3797                           
  3798                           ;incstack = 0
  3799  001060  0E6E               	movlw	low STR_4
  3800  001062  0100               	movlb	0	; () banked
  3801  001064  6F62               	movwf	printf@fmt& (0+255),b
  3802  001066  0E3F               	movlw	high STR_4
  3803  001068  6F63               	movwf	(printf@fmt+1)& (0+255),b
  3804  00106A  C06A  F064         	movff	Test_setTimer@time,?_printf+2
  3805  00106E  C06B  F065         	movff	Test_setTimer@time+1,?_printf+3
  3806  001072  EC81  F008         	call	_printf	;wreg free
  3807  001076  0012               	return		;funcret
  3808  001078                     __end_of_Test_setTimer:
  3809                           	opt callstack 0
  3810                           
  3811 ;; *************** function _SVPWM_STDISR *****************
  3812 ;; Defined at:
  3813 ;;		line 188 in file "../functions.h"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;  pm              2   33[BANK0 ] PTR struct .
  3816 ;;		 -> pwmBoi(50), 
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;		None
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  1    wreg      void 
  3821 ;; Registers used:
  3822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3828 ;;      Params:         0       2       0       0
  3829 ;;      Locals:         0       0       0       0
  3830 ;;      Temps:          0       0       0       0
  3831 ;;      Totals:         0       2       0       0
  3832 ;;Total ram usage:        2 bytes
  3833 ;; Hardware stack levels used:    1
  3834 ;; Hardware stack levels required when called:    9
  3835 ;; This function calls:
  3836 ;;		_SVPWM_SetCurrentSEC
  3837 ;;		_SVPWM_SetNextRelativeState
  3838 ;;		_SVPWM_SetVectorTimes
  3839 ;;		_SVPWM_UpdateCurrentTimer
  3840 ;;		_SVPWM_WriteABSVector
  3841 ;; This function is called by:
  3842 ;;		_fakeISR
  3843 ;; This function uses a non-reentrant model
  3844 ;;
  3845                           
  3846                           	psect	text3
  3847  001262                     __ptext3:
  3848                           	opt callstack 0
  3849  001262                     _SVPWM_STDISR:
  3850                           	opt callstack 20
  3851                           
  3852                           ;../functions.h: 189:     SVPWM_SetCurrentSEC(pm);
  3853                           
  3854                           ;incstack = 0
  3855  001262  C081  F017         	movff	SVPWM_STDISR@pm,SVPWM_SetCurrentSEC@pm
  3856  001266  C082  F018         	movff	SVPWM_STDISR@pm+1,SVPWM_SetCurrentSEC@pm+1
  3857  00126A  EC4B  F008         	call	_SVPWM_SetCurrentSEC	;wreg free
  3858                           
  3859                           ;../functions.h: 190:     SVPWM_SetNextRelativeState(pm);
  3860  00126E  C081  F001         	movff	SVPWM_STDISR@pm,SVPWM_SetNextRelativeState@pm
  3861  001272  C082  F002         	movff	SVPWM_STDISR@pm+1,SVPWM_SetNextRelativeState@pm+1
  3862  001276  EC77  F00A         	call	_SVPWM_SetNextRelativeState	;wreg free
  3863                           
  3864                           ;../functions.h: 191:     SVPWM_WriteABSVector(pm);
  3865  00127A  C081  F005         	movff	SVPWM_STDISR@pm,SVPWM_WriteABSVector@pm
  3866  00127E  C082  F006         	movff	SVPWM_STDISR@pm+1,SVPWM_WriteABSVector@pm+1
  3867  001282  EC5A  F00C         	call	_SVPWM_WriteABSVector	;wreg free
  3868                           
  3869                           ;../functions.h: 192:     SVPWM_SetVectorTimes(pm);
  3870  001286  C081  F06A         	movff	SVPWM_STDISR@pm,SVPWM_SetVectorTimes@pm
  3871  00128A  C082  F06B         	movff	SVPWM_STDISR@pm+1,SVPWM_SetVectorTimes@pm+1
  3872  00128E  EC1A  F017         	call	_SVPWM_SetVectorTimes	;wreg free
  3873                           
  3874                           ;../functions.h: 193:     SVPWM_UpdateCurrentTimer(pm);
  3875  001292  C081  F001         	movff	SVPWM_STDISR@pm,SVPWM_UpdateCurrentTimer@pm
  3876  001296  C082  F002         	movff	SVPWM_STDISR@pm+1,SVPWM_UpdateCurrentTimer@pm+1
  3877  00129A  ECFA  F00B         	call	_SVPWM_UpdateCurrentTimer	;wreg free
  3878  00129E  0012               	return		;funcret
  3879  0012A0                     __end_of_SVPWM_STDISR:
  3880                           	opt callstack 0
  3881                           
  3882 ;; *************** function _SVPWM_WriteABSVector *****************
  3883 ;; Defined at:
  3884 ;;		line 155 in file "../functions.h"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;  pm              2    4[COMRAM] PTR struct .
  3887 ;;		 -> pwmBoi(50), 
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;		None
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  1    wreg      void 
  3892 ;; Registers used:
  3893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3899 ;;      Params:         2       0       0       0
  3900 ;;      Locals:         0       0       0       0
  3901 ;;      Temps:          2       0       0       0
  3902 ;;      Totals:         4       0       0       0
  3903 ;;Total ram usage:        4 bytes
  3904 ;; Hardware stack levels used:    1
  3905 ;; Hardware stack levels required when called:    1
  3906 ;; This function calls:
  3907 ;;		_SVPWM_GetAbsoluteVoltageVector
  3908 ;;		_SVPWM_WriteOFF
  3909 ;;		_SVPWM_WriteV0
  3910 ;;		_SVPWM_WriteV1
  3911 ;;		_SVPWM_WriteV2
  3912 ;;		_SVPWM_WriteV3
  3913 ;;		_SVPWM_WriteV4
  3914 ;;		_SVPWM_WriteV5
  3915 ;;		_SVPWM_WriteV6
  3916 ;;		_SVPWM_WriteV7
  3917 ;; This function is called by:
  3918 ;;		_SVPWM_STDISR
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922                           	psect	text4
  3923  0018B4                     __ptext4:
  3924                           	opt callstack 0
  3925  0018B4                     _SVPWM_WriteABSVector:
  3926                           	opt callstack 27
  3927                           
  3928                           ;../functions.h: 156:     switch(SVPWM_GetAbsoluteVoltageVector(pm)){
  3929                           
  3930                           ;incstack = 0
  3931  0018B4  D03F               	goto	l3309
  3932  0018B6                     l3291:
  3933                           
  3934                           ;../functions.h: 158:             SVPWM_WriteV0(pm);
  3935  0018B6  C005  F001         	movff	SVPWM_WriteABSVector@pm,SVPWM_WriteV0@pm
  3936  0018BA  C006  F002         	movff	SVPWM_WriteABSVector@pm+1,SVPWM_WriteV0@pm+1
  3937  0018BE  EC28  F008         	call	_SVPWM_WriteV0	;wreg free
  3938                           
  3939                           ;../functions.h: 159:             break;
  3940  0018C2  0012               	return	
  3941  0018C4                     l3293:
  3942                           
  3943                           ;../functions.h: 161:             SVPWM_WriteV1(pm);
  3944  0018C4  C005  F001         	movff	SVPWM_WriteABSVector@pm,SVPWM_WriteV1@pm
  3945  0018C8  C006  F002         	movff	SVPWM_WriteABSVector@pm+1,SVPWM_WriteV1@pm+1
  3946  0018CC  EC29  F008         	call	_SVPWM_WriteV1	;wreg free
  3947                           
  3948                           ;../functions.h: 162:             break;
  3949  0018D0  0012               	return	
  3950  0018D2                     l3295:
  3951                           
  3952                           ;../functions.h: 164:             SVPWM_WriteV2(pm);
  3953  0018D2  C005  F001         	movff	SVPWM_WriteABSVector@pm,SVPWM_WriteV2@pm
  3954  0018D6  C006  F002         	movff	SVPWM_WriteABSVector@pm+1,SVPWM_WriteV2@pm+1
  3955  0018DA  EC2A  F008         	call	_SVPWM_WriteV2	;wreg free
  3956                           
  3957                           ;../functions.h: 165:             break;
  3958  0018DE  0012               	return	
  3959  0018E0                     l3297:
  3960                           
  3961                           ;../functions.h: 167:             SVPWM_WriteV3(pm);
  3962  0018E0  C005  F001         	movff	SVPWM_WriteABSVector@pm,SVPWM_WriteV3@pm
  3963  0018E4  C006  F002         	movff	SVPWM_WriteABSVector@pm+1,SVPWM_WriteV3@pm+1
  3964  0018E8  EC2B  F008         	call	_SVPWM_WriteV3	;wreg free
  3965                           
  3966                           ;../functions.h: 168:             break;
  3967  0018EC  0012               	return	
  3968  0018EE                     l3299:
  3969                           
  3970                           ;../functions.h: 170:             SVPWM_WriteV4(pm);
  3971  0018EE  C005  F001         	movff	SVPWM_WriteABSVector@pm,SVPWM_WriteV4@pm
  3972  0018F2  C006  F002         	movff	SVPWM_WriteABSVector@pm+1,SVPWM_WriteV4@pm+1
  3973  0018F6  EC2C  F008         	call	_SVPWM_WriteV4	;wreg free
  3974                           
  3975                           ;../functions.h: 171:             break;
  3976  0018FA  0012               	return	
  3977  0018FC                     l3301:
  3978                           
  3979                           ;../functions.h: 173:             SVPWM_WriteV5(pm);
  3980  0018FC  C005  F001         	movff	SVPWM_WriteABSVector@pm,SVPWM_WriteV5@pm
  3981  001900  C006  F002         	movff	SVPWM_WriteABSVector@pm+1,SVPWM_WriteV5@pm+1
  3982  001904  EC2D  F008         	call	_SVPWM_WriteV5	;wreg free
  3983                           
  3984                           ;../functions.h: 174:             break;
  3985  001908  0012               	return	
  3986  00190A                     l3303:
  3987                           
  3988                           ;../functions.h: 176:             SVPWM_WriteV6(pm);
  3989  00190A  C005  F001         	movff	SVPWM_WriteABSVector@pm,SVPWM_WriteV6@pm
  3990  00190E  C006  F002         	movff	SVPWM_WriteABSVector@pm+1,SVPWM_WriteV6@pm+1
  3991  001912  EC2E  F008         	call	_SVPWM_WriteV6	;wreg free
  3992                           
  3993                           ;../functions.h: 177:             break;
  3994  001916  0012               	return	
  3995  001918                     l3305:
  3996                           
  3997                           ;../functions.h: 179:             SVPWM_WriteV7(pm);
  3998  001918  C005  F001         	movff	SVPWM_WriteABSVector@pm,SVPWM_WriteV7@pm
  3999  00191C  C006  F002         	movff	SVPWM_WriteABSVector@pm+1,SVPWM_WriteV7@pm+1
  4000  001920  EC2F  F008         	call	_SVPWM_WriteV7	;wreg free
  4001                           
  4002                           ;../functions.h: 180:             break;
  4003  001924  0012               	return	
  4004  001926                     l3307:
  4005                           
  4006                           ;../functions.h: 183:             SVPWM_WriteOFF(pm);
  4007  001926  C005  F001         	movff	SVPWM_WriteABSVector@pm,SVPWM_WriteOFF@pm
  4008  00192A  C006  F002         	movff	SVPWM_WriteABSVector@pm+1,SVPWM_WriteOFF@pm+1
  4009  00192E  EC27  F008         	call	_SVPWM_WriteOFF	;wreg free
  4010                           
  4011                           ;../functions.h: 184:     }
  4012  001932  0012               	return	
  4013  001934                     l3309:
  4014  001934  C005  F001         	movff	SVPWM_WriteABSVector@pm,SVPWM_GetAbsoluteVoltageVector@pm
  4015  001938  C006  F002         	movff	SVPWM_WriteABSVector@pm+1,SVPWM_GetAbsoluteVoltageVector@pm+1
  4016  00193C  ECFD  F00E         	call	_SVPWM_GetAbsoluteVoltageVector	;wreg free
  4017  001940  6E07               	movwf	??_SVPWM_WriteABSVector& (0+255),c
  4018  001942  6A08               	clrf	(??_SVPWM_WriteABSVector+1)& (0+255),c
  4019                           
  4020                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4021                           ; Switch size 1, requested type "simple"
  4022                           ; Number of cases is 1, Range of values is 0 to 0
  4023                           ; switch strategies available:
  4024                           ; Name         Instructions Cycles
  4025                           ; simple_byte            4     3 (average)
  4026                           ;	Chosen strategy is simple_byte
  4027  001944  5008               	movf	??_SVPWM_WriteABSVector+1,w,c
  4028  001946  0A00               	xorlw	0	; case 0
  4029  001948  A4D8               	btfss	status,2,c
  4030  00194A  D7ED               	goto	l3307
  4031                           
  4032                           ; Switch size 1, requested type "simple"
  4033                           ; Number of cases is 8, Range of values is 0 to 7
  4034                           ; switch strategies available:
  4035                           ; Name         Instructions Cycles
  4036                           ; simple_byte           25    13 (average)
  4037                           ;	Chosen strategy is simple_byte
  4038  00194C  5007               	movf	??_SVPWM_WriteABSVector,w,c
  4039  00194E  0A00               	xorlw	0	; case 0
  4040  001950  B4D8               	btfsc	status,2,c
  4041  001952  D7B1               	goto	l3291
  4042  001954  0A01               	xorlw	1	; case 1
  4043  001956  B4D8               	btfsc	status,2,c
  4044  001958  D7B5               	goto	l3293
  4045  00195A  0A03               	xorlw	3	; case 2
  4046  00195C  B4D8               	btfsc	status,2,c
  4047  00195E  D7B9               	goto	l3295
  4048  001960  0A01               	xorlw	1	; case 3
  4049  001962  B4D8               	btfsc	status,2,c
  4050  001964  D7BD               	goto	l3297
  4051  001966  0A07               	xorlw	7	; case 4
  4052  001968  B4D8               	btfsc	status,2,c
  4053  00196A  D7C1               	goto	l3299
  4054  00196C  0A01               	xorlw	1	; case 5
  4055  00196E  B4D8               	btfsc	status,2,c
  4056  001970  D7C5               	goto	l3301
  4057  001972  0A03               	xorlw	3	; case 6
  4058  001974  B4D8               	btfsc	status,2,c
  4059  001976  D7C9               	goto	l3303
  4060  001978  0A01               	xorlw	1	; case 7
  4061  00197A  B4D8               	btfsc	status,2,c
  4062  00197C  D7CD               	goto	l3305
  4063  00197E  D7D3               	goto	l3307
  4064  001980                     __end_of_SVPWM_WriteABSVector:
  4065                           	opt callstack 0
  4066                           
  4067 ;; *************** function _SVPWM_WriteV7 *****************
  4068 ;; Defined at:
  4069 ;;		line 102 in file "../transistors.h"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;  pm              2    0[COMRAM] PTR struct .
  4072 ;;		 -> pwmBoi(50), 
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;		None
  4075 ;; Return value:  Size  Location     Type
  4076 ;;                  1    wreg      void 
  4077 ;; Registers used:
  4078 ;;		None
  4079 ;; Tracked objects:
  4080 ;;		On entry : 0/0
  4081 ;;		On exit  : 0/0
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4084 ;;      Params:         2       0       0       0
  4085 ;;      Locals:         0       0       0       0
  4086 ;;      Temps:          0       0       0       0
  4087 ;;      Totals:         2       0       0       0
  4088 ;;Total ram usage:        2 bytes
  4089 ;; Hardware stack levels used:    1
  4090 ;; This function calls:
  4091 ;;		Nothing
  4092 ;; This function is called by:
  4093 ;;		_SVPWM_WriteABSVector
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096                           
  4097                           	psect	text5
  4098  00105E                     __ptext5:
  4099                           	opt callstack 0
  4100  00105E                     _SVPWM_WriteV7:
  4101                           	opt callstack 27
  4102                           
  4103                           ;incstack = 0
  4104  00105E  0012               	return		;funcret
  4105  001060                     __end_of_SVPWM_WriteV7:
  4106                           	opt callstack 0
  4107                           
  4108 ;; *************** function _SVPWM_WriteV6 *****************
  4109 ;; Defined at:
  4110 ;;		line 91 in file "../transistors.h"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;  pm              2    0[COMRAM] PTR struct .
  4113 ;;		 -> pwmBoi(50), 
  4114 ;; Auto vars:     Size  Location     Type
  4115 ;;		None
  4116 ;; Return value:  Size  Location     Type
  4117 ;;                  1    wreg      void 
  4118 ;; Registers used:
  4119 ;;		None
  4120 ;; Tracked objects:
  4121 ;;		On entry : 0/0
  4122 ;;		On exit  : 0/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4125 ;;      Params:         2       0       0       0
  4126 ;;      Locals:         0       0       0       0
  4127 ;;      Temps:          0       0       0       0
  4128 ;;      Totals:         2       0       0       0
  4129 ;;Total ram usage:        2 bytes
  4130 ;; Hardware stack levels used:    1
  4131 ;; This function calls:
  4132 ;;		Nothing
  4133 ;; This function is called by:
  4134 ;;		_SVPWM_WriteABSVector
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           	psect	text6
  4139  00105C                     __ptext6:
  4140                           	opt callstack 0
  4141  00105C                     _SVPWM_WriteV6:
  4142                           	opt callstack 27
  4143                           
  4144                           ;incstack = 0
  4145  00105C  0012               	return		;funcret
  4146  00105E                     __end_of_SVPWM_WriteV6:
  4147                           	opt callstack 0
  4148                           
  4149 ;; *************** function _SVPWM_WriteV5 *****************
  4150 ;; Defined at:
  4151 ;;		line 80 in file "../transistors.h"
  4152 ;; Parameters:    Size  Location     Type
  4153 ;;  pm              2    0[COMRAM] PTR struct .
  4154 ;;		 -> pwmBoi(50), 
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;		None
  4157 ;; Return value:  Size  Location     Type
  4158 ;;                  1    wreg      void 
  4159 ;; Registers used:
  4160 ;;		None
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4166 ;;      Params:         2       0       0       0
  4167 ;;      Locals:         0       0       0       0
  4168 ;;      Temps:          0       0       0       0
  4169 ;;      Totals:         2       0       0       0
  4170 ;;Total ram usage:        2 bytes
  4171 ;; Hardware stack levels used:    1
  4172 ;; This function calls:
  4173 ;;		Nothing
  4174 ;; This function is called by:
  4175 ;;		_SVPWM_WriteABSVector
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           	psect	text7
  4180  00105A                     __ptext7:
  4181                           	opt callstack 0
  4182  00105A                     _SVPWM_WriteV5:
  4183                           	opt callstack 27
  4184                           
  4185                           ;incstack = 0
  4186  00105A  0012               	return		;funcret
  4187  00105C                     __end_of_SVPWM_WriteV5:
  4188                           	opt callstack 0
  4189                           
  4190 ;; *************** function _SVPWM_WriteV4 *****************
  4191 ;; Defined at:
  4192 ;;		line 69 in file "../transistors.h"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;  pm              2    0[COMRAM] PTR struct .
  4195 ;;		 -> pwmBoi(50), 
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;		None
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  1    wreg      void 
  4200 ;; Registers used:
  4201 ;;		None
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4207 ;;      Params:         2       0       0       0
  4208 ;;      Locals:         0       0       0       0
  4209 ;;      Temps:          0       0       0       0
  4210 ;;      Totals:         2       0       0       0
  4211 ;;Total ram usage:        2 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; This function calls:
  4214 ;;		Nothing
  4215 ;; This function is called by:
  4216 ;;		_SVPWM_WriteABSVector
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220                           	psect	text8
  4221  001058                     __ptext8:
  4222                           	opt callstack 0
  4223  001058                     _SVPWM_WriteV4:
  4224                           	opt callstack 27
  4225                           
  4226                           ;incstack = 0
  4227  001058  0012               	return		;funcret
  4228  00105A                     __end_of_SVPWM_WriteV4:
  4229                           	opt callstack 0
  4230                           
  4231 ;; *************** function _SVPWM_WriteV3 *****************
  4232 ;; Defined at:
  4233 ;;		line 58 in file "../transistors.h"
  4234 ;; Parameters:    Size  Location     Type
  4235 ;;  pm              2    0[COMRAM] PTR struct .
  4236 ;;		 -> pwmBoi(50), 
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;		None
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  1    wreg      void 
  4241 ;; Registers used:
  4242 ;;		None
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4248 ;;      Params:         2       0       0       0
  4249 ;;      Locals:         0       0       0       0
  4250 ;;      Temps:          0       0       0       0
  4251 ;;      Totals:         2       0       0       0
  4252 ;;Total ram usage:        2 bytes
  4253 ;; Hardware stack levels used:    1
  4254 ;; This function calls:
  4255 ;;		Nothing
  4256 ;; This function is called by:
  4257 ;;		_SVPWM_WriteABSVector
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260                           
  4261                           	psect	text9
  4262  001056                     __ptext9:
  4263                           	opt callstack 0
  4264  001056                     _SVPWM_WriteV3:
  4265                           	opt callstack 27
  4266                           
  4267                           ;incstack = 0
  4268  001056  0012               	return		;funcret
  4269  001058                     __end_of_SVPWM_WriteV3:
  4270                           	opt callstack 0
  4271                           
  4272 ;; *************** function _SVPWM_WriteV2 *****************
  4273 ;; Defined at:
  4274 ;;		line 47 in file "../transistors.h"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;  pm              2    0[COMRAM] PTR struct .
  4277 ;;		 -> pwmBoi(50), 
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;		None
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      void 
  4282 ;; Registers used:
  4283 ;;		None
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4289 ;;      Params:         2       0       0       0
  4290 ;;      Locals:         0       0       0       0
  4291 ;;      Temps:          0       0       0       0
  4292 ;;      Totals:         2       0       0       0
  4293 ;;Total ram usage:        2 bytes
  4294 ;; Hardware stack levels used:    1
  4295 ;; This function calls:
  4296 ;;		Nothing
  4297 ;; This function is called by:
  4298 ;;		_SVPWM_WriteABSVector
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           	psect	text10
  4303  001054                     __ptext10:
  4304                           	opt callstack 0
  4305  001054                     _SVPWM_WriteV2:
  4306                           	opt callstack 27
  4307                           
  4308                           ;incstack = 0
  4309  001054  0012               	return		;funcret
  4310  001056                     __end_of_SVPWM_WriteV2:
  4311                           	opt callstack 0
  4312                           
  4313 ;; *************** function _SVPWM_WriteV1 *****************
  4314 ;; Defined at:
  4315 ;;		line 36 in file "../transistors.h"
  4316 ;; Parameters:    Size  Location     Type
  4317 ;;  pm              2    0[COMRAM] PTR struct .
  4318 ;;		 -> pwmBoi(50), 
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;		None
  4321 ;; Return value:  Size  Location     Type
  4322 ;;                  1    wreg      void 
  4323 ;; Registers used:
  4324 ;;		None
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4330 ;;      Params:         2       0       0       0
  4331 ;;      Locals:         0       0       0       0
  4332 ;;      Temps:          0       0       0       0
  4333 ;;      Totals:         2       0       0       0
  4334 ;;Total ram usage:        2 bytes
  4335 ;; Hardware stack levels used:    1
  4336 ;; This function calls:
  4337 ;;		Nothing
  4338 ;; This function is called by:
  4339 ;;		_SVPWM_WriteABSVector
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           	psect	text11
  4344  001052                     __ptext11:
  4345                           	opt callstack 0
  4346  001052                     _SVPWM_WriteV1:
  4347                           	opt callstack 27
  4348                           
  4349                           ;incstack = 0
  4350  001052  0012               	return		;funcret
  4351  001054                     __end_of_SVPWM_WriteV1:
  4352                           	opt callstack 0
  4353                           
  4354 ;; *************** function _SVPWM_WriteV0 *****************
  4355 ;; Defined at:
  4356 ;;		line 25 in file "../transistors.h"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  pm              2    0[COMRAM] PTR struct .
  4359 ;;		 -> pwmBoi(50), 
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;		None
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  1    wreg      void 
  4364 ;; Registers used:
  4365 ;;		None
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4371 ;;      Params:         2       0       0       0
  4372 ;;      Locals:         0       0       0       0
  4373 ;;      Temps:          0       0       0       0
  4374 ;;      Totals:         2       0       0       0
  4375 ;;Total ram usage:        2 bytes
  4376 ;; Hardware stack levels used:    1
  4377 ;; This function calls:
  4378 ;;		Nothing
  4379 ;; This function is called by:
  4380 ;;		_SVPWM_WriteABSVector
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           	psect	text12
  4385  001050                     __ptext12:
  4386                           	opt callstack 0
  4387  001050                     _SVPWM_WriteV0:
  4388                           	opt callstack 27
  4389                           
  4390                           ;incstack = 0
  4391  001050  0012               	return		;funcret
  4392  001052                     __end_of_SVPWM_WriteV0:
  4393                           	opt callstack 0
  4394                           
  4395 ;; *************** function _SVPWM_WriteOFF *****************
  4396 ;; Defined at:
  4397 ;;		line 113 in file "../transistors.h"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;  pm              2    0[COMRAM] PTR struct .
  4400 ;;		 -> pwmBoi(50), 
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;		None
  4403 ;; Return value:  Size  Location     Type
  4404 ;;                  1    wreg      void 
  4405 ;; Registers used:
  4406 ;;		None
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4412 ;;      Params:         2       0       0       0
  4413 ;;      Locals:         0       0       0       0
  4414 ;;      Temps:          0       0       0       0
  4415 ;;      Totals:         2       0       0       0
  4416 ;;Total ram usage:        2 bytes
  4417 ;; Hardware stack levels used:    1
  4418 ;; This function calls:
  4419 ;;		Nothing
  4420 ;; This function is called by:
  4421 ;;		_SVPWM_WriteABSVector
  4422 ;; This function uses a non-reentrant model
  4423 ;;
  4424                           
  4425                           	psect	text13
  4426  00104E                     __ptext13:
  4427                           	opt callstack 0
  4428  00104E                     _SVPWM_WriteOFF:
  4429                           	opt callstack 27
  4430                           
  4431                           ;incstack = 0
  4432  00104E  0012               	return		;funcret
  4433  001050                     __end_of_SVPWM_WriteOFF:
  4434                           	opt callstack 0
  4435                           
  4436 ;; *************** function _SVPWM_GetAbsoluteVoltageVector *****************
  4437 ;; Defined at:
  4438 ;;		line 59 in file "../functions.h"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;  pm              2    0[COMRAM] PTR struct .
  4441 ;;		 -> pwmBoi(50), 
  4442 ;; Auto vars:     Size  Location     Type
  4443 ;;		None
  4444 ;; Return value:  Size  Location     Type
  4445 ;;                  1    wreg      enum E508
  4446 ;; Registers used:
  4447 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4448 ;; Tracked objects:
  4449 ;;		On entry : 0/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4453 ;;      Params:         2       0       0       0
  4454 ;;      Locals:         0       0       0       0
  4455 ;;      Temps:          2       0       0       0
  4456 ;;      Totals:         4       0       0       0
  4457 ;;Total ram usage:        4 bytes
  4458 ;; Hardware stack levels used:    1
  4459 ;; This function calls:
  4460 ;;		Nothing
  4461 ;; This function is called by:
  4462 ;;		_SVPWM_WriteABSVector
  4463 ;;		_main
  4464 ;; This function uses a non-reentrant model
  4465 ;;
  4466                           
  4467                           	psect	text14
  4468  001DFA                     __ptext14:
  4469                           	opt callstack 0
  4470  001DFA                     _SVPWM_GetAbsoluteVoltageVector:
  4471                           	opt callstack 27
  4472                           
  4473                           ;../functions.h: 61:     if((*pm).State == V0_REL)
  4474                           
  4475                           ;incstack = 0
  4476  001DFA  EE20 F01B          	lfsr	2,27
  4477  001DFE  5001               	movf	SVPWM_GetAbsoluteVoltageVector@pm,w,c
  4478  001E00  26D9               	addwf	fsr2l,f,c
  4479  001E02  5002               	movf	SVPWM_GetAbsoluteVoltageVector@pm+1,w,c
  4480  001E04  22DA               	addwfc	fsr2h,f,c
  4481  001E06  50DF               	movf	indf2,w,c
  4482  001E08  A4D8               	btfss	status,2,c
  4483  001E0A  D002               	goto	l2887
  4484                           
  4485                           ;../functions.h: 62:         return V0_ABS;
  4486  001E0C  0E00               	movlw	0
  4487  001E0E  0012               	return	
  4488  001E10                     l2887:
  4489                           
  4490                           ;../functions.h: 63:     if((*pm).State == V7_REL)
  4491  001E10  EE20 F01B          	lfsr	2,27
  4492  001E14  5001               	movf	SVPWM_GetAbsoluteVoltageVector@pm,w,c
  4493  001E16  26D9               	addwf	fsr2l,f,c
  4494  001E18  5002               	movf	SVPWM_GetAbsoluteVoltageVector@pm+1,w,c
  4495  001E1A  22DA               	addwfc	fsr2h,f,c
  4496  001E1C  0E03               	movlw	3
  4497  001E1E  18DE               	xorwf	postinc2,w,c
  4498  001E20  A4D8               	btfss	status,2,c
  4499  001E22  D083               	goto	l2971
  4500                           
  4501                           ;../functions.h: 64:         return V7_ABS;
  4502  001E24  0E07               	movlw	7
  4503  001E26  0012               	return	
  4504  001E28                     l2893:
  4505                           
  4506                           ;../functions.h: 68:             if((*pm).State == V1_REL)
  4507  001E28  EE20 F01B          	lfsr	2,27
  4508  001E2C  5001               	movf	SVPWM_GetAbsoluteVoltageVector@pm,w,c
  4509  001E2E  26D9               	addwf	fsr2l,f,c
  4510  001E30  5002               	movf	SVPWM_GetAbsoluteVoltageVector@pm+1,w,c
  4511  001E32  22DA               	addwfc	fsr2h,f,c
  4512  001E34  04DE               	decf	postinc2,w,c
  4513  001E36  A4D8               	btfss	status,2,c
  4514  001E38  D002               	goto	l2899
  4515  001E3A                     u2960:
  4516                           
  4517                           ;../functions.h: 69:                 return V1_ABS;
  4518  001E3A  0E01               	movlw	1
  4519  001E3C  0012               	return	
  4520  001E3E                     l2899:
  4521                           
  4522                           ;../functions.h: 70:             if((*pm).State == V2_REL)
  4523  001E3E  EE20 F01B          	lfsr	2,27
  4524  001E42  5001               	movf	SVPWM_GetAbsoluteVoltageVector@pm,w,c
  4525  001E44  26D9               	addwf	fsr2l,f,c
  4526  001E46  5002               	movf	SVPWM_GetAbsoluteVoltageVector@pm+1,w,c
  4527  001E48  22DA               	addwfc	fsr2h,f,c
  4528  001E4A  0E02               	movlw	2
  4529  001E4C  18DE               	xorwf	postinc2,w,c
  4530  001E4E  A4D8               	btfss	status,2,c
  4531  001E50  0012               	return	
  4532  001E52                     u2970:
  4533                           
  4534                           ;../functions.h: 71:                 return V3_ABS;
  4535  001E52  0E03               	movlw	3
  4536  001E54  0012               	return	
  4537  001E56                     l2905:
  4538                           
  4539                           ;../functions.h: 74:             if((*pm).State == V1_REL)
  4540  001E56  EE20 F01B          	lfsr	2,27
  4541  001E5A  5001               	movf	SVPWM_GetAbsoluteVoltageVector@pm,w,c
  4542  001E5C  26D9               	addwf	fsr2l,f,c
  4543  001E5E  5002               	movf	SVPWM_GetAbsoluteVoltageVector@pm+1,w,c
  4544  001E60  22DA               	addwfc	fsr2h,f,c
  4545  001E62  04DE               	decf	postinc2,w,c
  4546  001E64  B4D8               	btfsc	status,2,c
  4547  001E66  D7F5               	goto	u2970
  4548                           
  4549                           ;../functions.h: 76:             if((*pm).State == V2_REL)
  4550  001E68  EE20 F01B          	lfsr	2,27
  4551  001E6C  5001               	movf	SVPWM_GetAbsoluteVoltageVector@pm,w,c
  4552  001E6E  26D9               	addwf	fsr2l,f,c
  4553  001E70  5002               	movf	SVPWM_GetAbsoluteVoltageVector@pm+1,w,c
  4554  001E72  22DA               	addwfc	fsr2h,f,c
  4555  001E74  0E02               	movlw	2
  4556  001E76  18DE               	xorwf	postinc2,w,c
  4557  001E78  A4D8               	btfss	status,2,c
  4558  001E7A  0012               	return	
  4559  001E7C                     u2990:
  4560                           
  4561                           ;../functions.h: 77:                 return V2_ABS;
  4562  001E7C  0E02               	movlw	2
  4563  001E7E  0012               	return	
  4564  001E80                     l2917:
  4565                           
  4566                           ;../functions.h: 80:             if((*pm).State == V1_REL)
  4567  001E80  EE20 F01B          	lfsr	2,27
  4568  001E84  5001               	movf	SVPWM_GetAbsoluteVoltageVector@pm,w,c
  4569  001E86  26D9               	addwf	fsr2l,f,c
  4570  001E88  5002               	movf	SVPWM_GetAbsoluteVoltageVector@pm+1,w,c
  4571  001E8A  22DA               	addwfc	fsr2h,f,c
  4572  001E8C  04DE               	decf	postinc2,w,c
  4573  001E8E  B4D8               	btfsc	status,2,c
  4574  001E90  D7F5               	goto	u2990
  4575                           
  4576                           ;../functions.h: 82:             if((*pm).State == V2_REL)
  4577  001E92  EE20 F01B          	lfsr	2,27
  4578  001E96  5001               	movf	SVPWM_GetAbsoluteVoltageVector@pm,w,c
  4579  001E98  26D9               	addwf	fsr2l,f,c
  4580  001E9A  5002               	movf	SVPWM_GetAbsoluteVoltageVector@pm+1,w,c
  4581  001E9C  22DA               	addwfc	fsr2h,f,c
  4582  001E9E  0E02               	movlw	2
  4583  001EA0  18DE               	xorwf	postinc2,w,c
  4584  001EA2  A4D8               	btfss	status,2,c
  4585  001EA4  0012               	return	
  4586  001EA6                     u3010:
  4587                           
  4588                           ;../functions.h: 83:                 return V6_ABS;
  4589  001EA6  0E06               	movlw	6
  4590  001EA8  0012               	return	
  4591  001EAA                     l2929:
  4592                           
  4593                           ;../functions.h: 86:             if((*pm).State == V1_REL)
  4594  001EAA  EE20 F01B          	lfsr	2,27
  4595  001EAE  5001               	movf	SVPWM_GetAbsoluteVoltageVector@pm,w,c
  4596  001EB0  26D9               	addwf	fsr2l,f,c
  4597  001EB2  5002               	movf	SVPWM_GetAbsoluteVoltageVector@pm+1,w,c
  4598  001EB4  22DA               	addwfc	fsr2h,f,c
  4599  001EB6  04DE               	decf	postinc2,w,c
  4600  001EB8  B4D8               	btfsc	status,2,c
  4601  001EBA  D7F5               	goto	u3010
  4602                           
  4603                           ;../functions.h: 88:             if((*pm).State == V2_REL)
  4604  001EBC  EE20 F01B          	lfsr	2,27
  4605  001EC0  5001               	movf	SVPWM_GetAbsoluteVoltageVector@pm,w,c
  4606  001EC2  26D9               	addwf	fsr2l,f,c
  4607  001EC4  5002               	movf	SVPWM_GetAbsoluteVoltageVector@pm+1,w,c
  4608  001EC6  22DA               	addwfc	fsr2h,f,c
  4609  001EC8  0E02               	movlw	2
  4610  001ECA  18DE               	xorwf	postinc2,w,c
  4611  001ECC  A4D8               	btfss	status,2,c
  4612  001ECE  0012               	return	
  4613  001ED0                     u3030:
  4614                           
  4615                           ;../functions.h: 89:                 return V4_ABS;
  4616  001ED0  0E04               	movlw	4
  4617  001ED2  0012               	return	
  4618  001ED4                     l2941:
  4619                           
  4620                           ;../functions.h: 92:             if((*pm).State == V1_REL)
  4621  001ED4  EE20 F01B          	lfsr	2,27
  4622  001ED8  5001               	movf	SVPWM_GetAbsoluteVoltageVector@pm,w,c
  4623  001EDA  26D9               	addwf	fsr2l,f,c
  4624  001EDC  5002               	movf	SVPWM_GetAbsoluteVoltageVector@pm+1,w,c
  4625  001EDE  22DA               	addwfc	fsr2h,f,c
  4626  001EE0  04DE               	decf	postinc2,w,c
  4627  001EE2  B4D8               	btfsc	status,2,c
  4628  001EE4  D7F5               	goto	u3030
  4629                           
  4630                           ;../functions.h: 94:             if((*pm).State == V2_REL)
  4631  001EE6  EE20 F01B          	lfsr	2,27
  4632  001EEA  5001               	movf	SVPWM_GetAbsoluteVoltageVector@pm,w,c
  4633  001EEC  26D9               	addwf	fsr2l,f,c
  4634  001EEE  5002               	movf	SVPWM_GetAbsoluteVoltageVector@pm+1,w,c
  4635  001EF0  22DA               	addwfc	fsr2h,f,c
  4636  001EF2  0E02               	movlw	2
  4637  001EF4  18DE               	xorwf	postinc2,w,c
  4638  001EF6  A4D8               	btfss	status,2,c
  4639  001EF8  0012               	return	
  4640  001EFA                     u3050:
  4641                           
  4642                           ;../functions.h: 95:                 return V5_ABS;
  4643  001EFA  0E05               	movlw	5
  4644  001EFC  0012               	return	
  4645  001EFE                     l2953:
  4646                           
  4647                           ;../functions.h: 98:             if((*pm).State == V1_REL)
  4648  001EFE  EE20 F01B          	lfsr	2,27
  4649  001F02  5001               	movf	SVPWM_GetAbsoluteVoltageVector@pm,w,c
  4650  001F04  26D9               	addwf	fsr2l,f,c
  4651  001F06  5002               	movf	SVPWM_GetAbsoluteVoltageVector@pm+1,w,c
  4652  001F08  22DA               	addwfc	fsr2h,f,c
  4653  001F0A  04DE               	decf	postinc2,w,c
  4654  001F0C  B4D8               	btfsc	status,2,c
  4655  001F0E  D7F5               	goto	u3050
  4656                           
  4657                           ;../functions.h: 100:             if((*pm).State == V2_REL)
  4658  001F10  EE20 F01B          	lfsr	2,27
  4659  001F14  5001               	movf	SVPWM_GetAbsoluteVoltageVector@pm,w,c
  4660  001F16  26D9               	addwf	fsr2l,f,c
  4661  001F18  5002               	movf	SVPWM_GetAbsoluteVoltageVector@pm+1,w,c
  4662  001F1A  22DA               	addwfc	fsr2h,f,c
  4663  001F1C  0E02               	movlw	2
  4664  001F1E  18DE               	xorwf	postinc2,w,c
  4665  001F20  A4D8               	btfss	status,2,c
  4666  001F22  0012               	return	
  4667  001F24  D78A               	goto	u2960
  4668  001F26                     l2965:
  4669                           
  4670                           ;../functions.h: 104:             return OFF_ABS;
  4671  001F26  0E08               	movlw	8
  4672  001F28  0012               	return	
  4673  001F2A                     l2971:
  4674  001F2A  EE20 F01C          	lfsr	2,28
  4675  001F2E  5001               	movf	SVPWM_GetAbsoluteVoltageVector@pm,w,c
  4676  001F30  26D9               	addwf	fsr2l,f,c
  4677  001F32  5002               	movf	SVPWM_GetAbsoluteVoltageVector@pm+1,w,c
  4678  001F34  22DA               	addwfc	fsr2h,f,c
  4679  001F36  50DF               	movf	indf2,w,c
  4680  001F38  6E03               	movwf	??_SVPWM_GetAbsoluteVoltageVector& (0+255),c
  4681  001F3A  6A04               	clrf	(??_SVPWM_GetAbsoluteVoltageVector+1)& (0+255),c
  4682                           
  4683                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4684                           ; Switch size 1, requested type "simple"
  4685                           ; Number of cases is 1, Range of values is 0 to 0
  4686                           ; switch strategies available:
  4687                           ; Name         Instructions Cycles
  4688                           ; simple_byte            4     3 (average)
  4689                           ;	Chosen strategy is simple_byte
  4690  001F3C  5004               	movf	??_SVPWM_GetAbsoluteVoltageVector+1,w,c
  4691  001F3E  0A00               	xorlw	0	; case 0
  4692  001F40  A4D8               	btfss	status,2,c
  4693  001F42  D7F1               	goto	l2965
  4694                           
  4695                           ; Switch size 1, requested type "simple"
  4696                           ; Number of cases is 6, Range of values is 0 to 5
  4697                           ; switch strategies available:
  4698                           ; Name         Instructions Cycles
  4699                           ; simple_byte           19    10 (average)
  4700                           ;	Chosen strategy is simple_byte
  4701  001F44  5003               	movf	??_SVPWM_GetAbsoluteVoltageVector,w,c
  4702  001F46  0A00               	xorlw	0	; case 0
  4703  001F48  B4D8               	btfsc	status,2,c
  4704  001F4A  D76E               	goto	l2893
  4705  001F4C  0A01               	xorlw	1	; case 1
  4706  001F4E  B4D8               	btfsc	status,2,c
  4707  001F50  D782               	goto	l2905
  4708  001F52  0A03               	xorlw	3	; case 2
  4709  001F54  B4D8               	btfsc	status,2,c
  4710  001F56  D794               	goto	l2917
  4711  001F58  0A01               	xorlw	1	; case 3
  4712  001F5A  B4D8               	btfsc	status,2,c
  4713  001F5C  D7A6               	goto	l2929
  4714  001F5E  0A07               	xorlw	7	; case 4
  4715  001F60  B4D8               	btfsc	status,2,c
  4716  001F62  D7B8               	goto	l2941
  4717  001F64  0A01               	xorlw	1	; case 5
  4718  001F66  B4D8               	btfsc	status,2,c
  4719  001F68  D7CA               	goto	l2953
  4720  001F6A  D7DD               	goto	l2965
  4721  001F6C                     __end_of_SVPWM_GetAbsoluteVoltageVector:
  4722                           	opt callstack 0
  4723                           
  4724 ;; *************** function _SVPWM_UpdateCurrentTimer *****************
  4725 ;; Defined at:
  4726 ;;		line 39 in file "../functions.h"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;  pm              2    0[COMRAM] PTR struct .
  4729 ;;		 -> pwmBoi(50), 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;		None
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  1    wreg      void 
  4734 ;; Registers used:
  4735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4741 ;;      Params:         2       0       0       0
  4742 ;;      Locals:         0       0       0       0
  4743 ;;      Temps:          2       0       0       0
  4744 ;;      Totals:         4       0       0       0
  4745 ;;Total ram usage:        4 bytes
  4746 ;; Hardware stack levels used:    1
  4747 ;; This function calls:
  4748 ;;		Nothing
  4749 ;; This function is called by:
  4750 ;;		_SVPWM_STDISR
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754                           	psect	text15
  4755  0017F4                     __ptext15:
  4756                           	opt callstack 0
  4757  0017F4                     _SVPWM_UpdateCurrentTimer:
  4758                           	opt callstack 28
  4759                           
  4760                           ;../functions.h: 40:     switch((*pm).State){
  4761                           
  4762                           ;incstack = 0
  4763  0017F4  D044               	goto	l3237
  4764  0017F6                     l3227:
  4765                           
  4766                           ;../functions.h: 42:             (*pm).Timer.currentTime = (*pm).Timer.halfZeroVector;
  4767  0017F6  EE20 F010          	lfsr	2,16
  4768  0017FA  5001               	movf	SVPWM_UpdateCurrentTimer@pm,w,c
  4769  0017FC  26D9               	addwf	fsr2l,f,c
  4770  0017FE  5002               	movf	SVPWM_UpdateCurrentTimer@pm+1,w,c
  4771  001800  22DA               	addwfc	fsr2h,f,c
  4772  001802  EE10 F018          	lfsr	1,24
  4773  001806  5001               	movf	SVPWM_UpdateCurrentTimer@pm,w,c
  4774  001808  26E1               	addwf	fsr1l,f,c
  4775  00180A  5002               	movf	SVPWM_UpdateCurrentTimer@pm+1,w,c
  4776  00180C  22E2               	addwfc	fsr1h,f,c
  4777  00180E  CFDE FFE6          	movff	postinc2,postinc1
  4778  001812  CFDD FFE5          	movff	postdec2,postdec1
  4779                           
  4780                           ;../functions.h: 43:             break;
  4781  001816  0012               	return	
  4782  001818                     l3229:
  4783                           
  4784                           ;../functions.h: 45:             (*pm).Timer.currentTime = (*pm).Timer.basicVec1;
  4785  001818  EE20 F012          	lfsr	2,18
  4786  00181C  5001               	movf	SVPWM_UpdateCurrentTimer@pm,w,c
  4787  00181E  26D9               	addwf	fsr2l,f,c
  4788  001820  5002               	movf	SVPWM_UpdateCurrentTimer@pm+1,w,c
  4789  001822  22DA               	addwfc	fsr2h,f,c
  4790  001824  EE10 F018          	lfsr	1,24
  4791  001828  5001               	movf	SVPWM_UpdateCurrentTimer@pm,w,c
  4792  00182A  26E1               	addwf	fsr1l,f,c
  4793  00182C  5002               	movf	SVPWM_UpdateCurrentTimer@pm+1,w,c
  4794  00182E  22E2               	addwfc	fsr1h,f,c
  4795  001830  CFDE FFE6          	movff	postinc2,postinc1
  4796  001834  CFDD FFE5          	movff	postdec2,postdec1
  4797                           
  4798                           ;../functions.h: 46:             break;
  4799  001838  0012               	return	
  4800  00183A                     l3231:
  4801                           
  4802                           ;../functions.h: 48:             (*pm).Timer.currentTime = (*pm).Timer.basicVec2;
  4803  00183A  EE20 F014          	lfsr	2,20
  4804  00183E  5001               	movf	SVPWM_UpdateCurrentTimer@pm,w,c
  4805  001840  26D9               	addwf	fsr2l,f,c
  4806  001842  5002               	movf	SVPWM_UpdateCurrentTimer@pm+1,w,c
  4807  001844  22DA               	addwfc	fsr2h,f,c
  4808  001846  EE10 F018          	lfsr	1,24
  4809  00184A  5001               	movf	SVPWM_UpdateCurrentTimer@pm,w,c
  4810  00184C  26E1               	addwf	fsr1l,f,c
  4811  00184E  5002               	movf	SVPWM_UpdateCurrentTimer@pm+1,w,c
  4812  001850  22E2               	addwfc	fsr1h,f,c
  4813  001852  CFDE FFE6          	movff	postinc2,postinc1
  4814  001856  CFDD FFE5          	movff	postdec2,postdec1
  4815                           
  4816                           ;../functions.h: 49:             break;
  4817  00185A  0012               	return	
  4818  00185C                     l3233:
  4819                           
  4820                           ;../functions.h: 51:             (*pm).Timer.currentTime = (*pm).Timer.halfZeroVector;
  4821  00185C  EE20 F010          	lfsr	2,16
  4822  001860  5001               	movf	SVPWM_UpdateCurrentTimer@pm,w,c
  4823  001862  26D9               	addwf	fsr2l,f,c
  4824  001864  5002               	movf	SVPWM_UpdateCurrentTimer@pm+1,w,c
  4825  001866  22DA               	addwfc	fsr2h,f,c
  4826  001868  EE10 F018          	lfsr	1,24
  4827  00186C  5001               	movf	SVPWM_UpdateCurrentTimer@pm,w,c
  4828  00186E  26E1               	addwf	fsr1l,f,c
  4829  001870  5002               	movf	SVPWM_UpdateCurrentTimer@pm+1,w,c
  4830  001872  22E2               	addwfc	fsr1h,f,c
  4831  001874  CFDE FFE6          	movff	postinc2,postinc1
  4832  001878  CFDD FFE5          	movff	postdec2,postdec1
  4833                           
  4834                           ;../functions.h: 52:             break;
  4835  00187C  0012               	return	
  4836  00187E                     l3237:
  4837  00187E  EE20 F01B          	lfsr	2,27
  4838  001882  5001               	movf	SVPWM_UpdateCurrentTimer@pm,w,c
  4839  001884  26D9               	addwf	fsr2l,f,c
  4840  001886  5002               	movf	SVPWM_UpdateCurrentTimer@pm+1,w,c
  4841  001888  22DA               	addwfc	fsr2h,f,c
  4842  00188A  50DF               	movf	indf2,w,c
  4843  00188C  6E03               	movwf	??_SVPWM_UpdateCurrentTimer& (0+255),c
  4844  00188E  6A04               	clrf	(??_SVPWM_UpdateCurrentTimer+1)& (0+255),c
  4845                           
  4846                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4847                           ; Switch size 1, requested type "simple"
  4848                           ; Number of cases is 1, Range of values is 0 to 0
  4849                           ; switch strategies available:
  4850                           ; Name         Instructions Cycles
  4851                           ; simple_byte            4     3 (average)
  4852                           ;	Chosen strategy is simple_byte
  4853  001890  5004               	movf	??_SVPWM_UpdateCurrentTimer+1,w,c
  4854  001892  0A00               	xorlw	0	; case 0
  4855  001894  A4D8               	btfss	status,2,c
  4856  001896  0012               	return	
  4857                           
  4858                           ; Switch size 1, requested type "simple"
  4859                           ; Number of cases is 4, Range of values is 0 to 3
  4860                           ; switch strategies available:
  4861                           ; Name         Instructions Cycles
  4862                           ; simple_byte           13     7 (average)
  4863                           ;	Chosen strategy is simple_byte
  4864  001898  5003               	movf	??_SVPWM_UpdateCurrentTimer,w,c
  4865  00189A  0A00               	xorlw	0	; case 0
  4866  00189C  B4D8               	btfsc	status,2,c
  4867  00189E  D7AB               	goto	l3227
  4868  0018A0  0A01               	xorlw	1	; case 1
  4869  0018A2  B4D8               	btfsc	status,2,c
  4870  0018A4  D7B9               	goto	l3229
  4871  0018A6  0A03               	xorlw	3	; case 2
  4872  0018A8  B4D8               	btfsc	status,2,c
  4873  0018AA  D7C7               	goto	l3231
  4874  0018AC  0A01               	xorlw	1	; case 3
  4875  0018AE  A4D8               	btfss	status,2,c
  4876  0018B0  0012               	return	
  4877  0018B2  D7D4               	goto	l3233
  4878  0018B4                     __end_of_SVPWM_UpdateCurrentTimer:
  4879                           	opt callstack 0
  4880                           
  4881 ;; *************** function _SVPWM_SetVectorTimes *****************
  4882 ;; Defined at:
  4883 ;;		line 135 in file "../functions.h"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;  pm              2   10[BANK0 ] PTR struct .
  4886 ;;		 -> pwmBoi(50), 
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;  sectorIndex     2   31[BANK0 ] unsigned short 
  4889 ;;  angleIndex      2   29[BANK0 ] unsigned short 
  4890 ;;  sector          1   28[BANK0 ] unsigned char 
  4891 ;; Return value:  Size  Location     Type
  4892 ;;                  1    wreg      void 
  4893 ;; Registers used:
  4894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4895 ;; Tracked objects:
  4896 ;;		On entry : 0/0
  4897 ;;		On exit  : 0/0
  4898 ;;		Unchanged: 0/0
  4899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4900 ;;      Params:         0       2       0       0
  4901 ;;      Locals:         0      13       0       0
  4902 ;;      Temps:          0       8       0       0
  4903 ;;      Totals:         0      23       0       0
  4904 ;;Total ram usage:       23 bytes
  4905 ;; Hardware stack levels used:    1
  4906 ;; Hardware stack levels required when called:    8
  4907 ;; This function calls:
  4908 ;;		___awdiv
  4909 ;;		___fladd
  4910 ;;		___flmul
  4911 ;;		___flneg
  4912 ;;		___flsub
  4913 ;;		___fltol
  4914 ;;		___wmul
  4915 ;;		___xxtofl
  4916 ;;		_printf
  4917 ;; This function is called by:
  4918 ;;		_SVPWM_STDISR
  4919 ;;		_main
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text16
  4924  002E34                     __ptext16:
  4925                           	opt callstack 0
  4926  002E34                     _SVPWM_SetVectorTimes:
  4927                           	opt callstack 20
  4928                           
  4929                           ;../functions.h: 136:     uint8_t sector;;../functions.h: 137:     uint16_t sectorIndex,
      +                           angleIndex;;../functions.h: 138:     sector = (*pm).CurrentSector + 1;
  4930                           
  4931                           ;incstack = 0
  4932  002E34  0100               	movlb	0	; () banked
  4933  002E36  EE20 F01C          	lfsr	2,28
  4934  002E3A  516A               	movf	SVPWM_SetVectorTimes@pm& (0+255),w,b
  4935  002E3C  26D9               	addwf	fsr2l,f,c
  4936  002E3E  516B               	movf	(SVPWM_SetVectorTimes@pm+1)& (0+255),w,b
  4937  002E40  22DA               	addwfc	fsr2h,f,c
  4938  002E42  50DF               	movf	indf2,w,c
  4939  002E44  6F6C               	movwf	??_SVPWM_SetVectorTimes& (0+255),b
  4940  002E46  296C               	incf	??_SVPWM_SetVectorTimes& (0+255),w,b
  4941  002E48  6F7C               	movwf	SVPWM_SetVectorTimes@sector& (0+255),b
  4942                           
  4943                           ; BSR set to: 0
  4944                           ;../functions.h: 139:     printf("Sector + 1 %d\r\n", sector);
  4945  002E4A  0E34               	movlw	low STR_1
  4946  002E4C  6F62               	movwf	printf@fmt& (0+255),b
  4947  002E4E  0E3F               	movlw	high STR_1
  4948  002E50  6F63               	movwf	(printf@fmt+1)& (0+255),b
  4949  002E52  C07C  F064         	movff	SVPWM_SetVectorTimes@sector,?_printf+2
  4950  002E56  6B65               	clrf	(?_printf+3)& (0+255),b
  4951  002E58  EC81  F008         	call	_printf	;wreg free
  4952                           
  4953                           ;../functions.h: 140:     sectorIndex = sector * 60 - 1;
  4954  002E5C  0100               	movlb	0	; () banked
  4955  002E5E  517C               	movf	SVPWM_SetVectorTimes@sector& (0+255),w,b
  4956  002E60  0D3C               	mullw	60
  4957  002E62  CFF3 F06C          	movff	prodl,??_SVPWM_SetVectorTimes
  4958  002E66  CFF4 F06D          	movff	prodh,??_SVPWM_SetVectorTimes+1
  4959  002E6A  0EFF               	movlw	255
  4960  002E6C  256C               	addwf	??_SVPWM_SetVectorTimes& (0+255),w,b
  4961  002E6E  6F7F               	movwf	SVPWM_SetVectorTimes@sectorIndex& (0+255),b
  4962  002E70  0EFF               	movlw	255
  4963  002E72  216D               	addwfc	(??_SVPWM_SetVectorTimes+1)& (0+255),w,b
  4964  002E74  6F80               	movwf	(SVPWM_SetVectorTimes@sectorIndex+1)& (0+255),b
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;../functions.h: 141:     printf("Sector index %d\r\n", sectorIndex);
  4968  002E76  0EDD               	movlw	low STR_2
  4969  002E78  6F62               	movwf	printf@fmt& (0+255),b
  4970  002E7A  0E3E               	movlw	high STR_2
  4971  002E7C  6F63               	movwf	(printf@fmt+1)& (0+255),b
  4972  002E7E  C07F  F064         	movff	SVPWM_SetVectorTimes@sectorIndex,?_printf+2
  4973  002E82  C080  F065         	movff	SVPWM_SetVectorTimes@sectorIndex+1,?_printf+3
  4974  002E86  EC81  F008         	call	_printf	;wreg free
  4975                           
  4976                           ;../functions.h: 142:     angleIndex = (*pm).RefAngle * 60 / 0x3FFF;
  4977  002E8A  0100               	movlb	0	; () banked
  4978  002E8C  EE20 F00E          	lfsr	2,14
  4979  002E90  516A               	movf	SVPWM_SetVectorTimes@pm& (0+255),w,b
  4980  002E92  26D9               	addwf	fsr2l,f,c
  4981  002E94  516B               	movf	(SVPWM_SetVectorTimes@pm+1)& (0+255),w,b
  4982  002E96  22DA               	addwfc	fsr2h,f,c
  4983  002E98  CFDE F001          	movff	postinc2,___wmul@multiplier
  4984  002E9C  CFDD F002          	movff	postdec2,___wmul@multiplier+1
  4985  002EA0  0E00               	movlw	0
  4986  002EA2  6E04               	movwf	___wmul@multiplicand+1,c
  4987  002EA4  0E3C               	movlw	60
  4988  002EA6  6E03               	movwf	___wmul@multiplicand,c
  4989  002EA8  EC5B  F008         	call	___wmul	;wreg free
  4990  002EAC  C001  F007         	movff	?___wmul,___awdiv@dividend
  4991  002EB0  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  4992  002EB4  0E3F               	movlw	63
  4993  002EB6  6E0A               	movwf	___awdiv@divisor+1,c
  4994  002EB8  6809               	setf	___awdiv@divisor,c
  4995  002EBA  ECB7  F00A         	call	___awdiv	;wreg free
  4996  002EBE  C007  F07D         	movff	?___awdiv,SVPWM_SetVectorTimes@angleIndex
  4997  002EC2  C008  F07E         	movff	?___awdiv+1,SVPWM_SetVectorTimes@angleIndex+1
  4998                           
  4999                           ;../functions.h: 143:     printf("Angle Index %d\r\n", angleIndex);
  5000  002EC6  0E01               	movlw	low STR_3
  5001  002EC8  0100               	movlb	0	; () banked
  5002  002ECA  6F62               	movwf	printf@fmt& (0+255),b
  5003  002ECC  0E3F               	movlw	high STR_3
  5004  002ECE  6F63               	movwf	(printf@fmt+1)& (0+255),b
  5005  002ED0  C07D  F064         	movff	SVPWM_SetVectorTimes@angleIndex,?_printf+2
  5006  002ED4  C07E  F065         	movff	SVPWM_SetVectorTimes@angleIndex+1,?_printf+3
  5007  002ED8  EC81  F008         	call	_printf	;wreg free
  5008                           
  5009                           ;../functions.h: 145:     (*pm).Timer.basicVec1 = (1.73205080757 * (*pm).Timer.totalPeri
      +                          od * (sineTable[sectorIndex] * cosineTable[angleIndex] - sineTable[angleIndex] * cosineT
      +                          able[sectorIndex]));
  5010  002EDC  C07F  F06C         	movff	SVPWM_SetVectorTimes@sectorIndex,??_SVPWM_SetVectorTimes
  5011  002EE0  C080  F06D         	movff	SVPWM_SetVectorTimes@sectorIndex+1,??_SVPWM_SetVectorTimes+1
  5012  002EE4  0100               	movlb	0	; () banked
  5013  002EE6  90D8               	bcf	status,0,c
  5014  002EE8  376C               	rlcf	??_SVPWM_SetVectorTimes& (0+255),f,b
  5015  002EEA  376D               	rlcf	(??_SVPWM_SetVectorTimes+1)& (0+255),f,b
  5016  002EEC  90D8               	bcf	status,0,c
  5017  002EEE  376C               	rlcf	??_SVPWM_SetVectorTimes& (0+255),f,b
  5018  002EF0  376D               	rlcf	(??_SVPWM_SetVectorTimes+1)& (0+255),f,b
  5019  002EF2  0E19               	movlw	low _cosineTable
  5020  002EF4  256C               	addwf	??_SVPWM_SetVectorTimes& (0+255),w,b
  5021  002EF6  6EF6               	movwf	tblptrl,c
  5022  002EF8  0E33               	movlw	high _cosineTable
  5023  002EFA  216D               	addwfc	(??_SVPWM_SetVectorTimes+1)& (0+255),w,b
  5024  002EFC  6EF7               	movwf	tblptrh,c
  5025  002EFE                     	if	0	;There are less than 3 active tblptr bytes
  5026  002EFE                     	endif
  5027  002EFE  0009               	tblrd		*+
  5028  002F00  CFF5 F019          	movff	tablat,___flmul@a
  5029  002F04  0009               	tblrd		*+
  5030  002F06  CFF5 F01A          	movff	tablat,___flmul@a+1
  5031  002F0A  0009               	tblrd		*+
  5032  002F0C  CFF5 F01B          	movff	tablat,___flmul@a+2
  5033  002F10  000A               	tblrd		*-
  5034  002F12  CFF5 F01C          	movff	tablat,___flmul@a+3
  5035  002F16  C07D  F06E         	movff	SVPWM_SetVectorTimes@angleIndex,??_SVPWM_SetVectorTimes+2
  5036  002F1A  C07E  F06F         	movff	SVPWM_SetVectorTimes@angleIndex+1,??_SVPWM_SetVectorTimes+3
  5037  002F1E  90D8               	bcf	status,0,c
  5038  002F20  376E               	rlcf	(??_SVPWM_SetVectorTimes+2)& (0+255),f,b
  5039  002F22  376F               	rlcf	(??_SVPWM_SetVectorTimes+3)& (0+255),f,b
  5040  002F24  90D8               	bcf	status,0,c
  5041  002F26  376E               	rlcf	(??_SVPWM_SetVectorTimes+2)& (0+255),f,b
  5042  002F28  376F               	rlcf	(??_SVPWM_SetVectorTimes+3)& (0+255),f,b
  5043  002F2A  0EB9               	movlw	low _sineTable
  5044  002F2C  256E               	addwf	(??_SVPWM_SetVectorTimes+2)& (0+255),w,b
  5045  002F2E  6EF6               	movwf	tblptrl,c
  5046  002F30  0E38               	movlw	high _sineTable
  5047  002F32  216F               	addwfc	(??_SVPWM_SetVectorTimes+3)& (0+255),w,b
  5048  002F34  6EF7               	movwf	tblptrh,c
  5049  002F36                     	if	0	;There are less than 3 active tblptr bytes
  5050  002F36                     	endif
  5051  002F36  0009               	tblrd		*+
  5052  002F38  CFF5 F015          	movff	tablat,___flmul@b
  5053  002F3C  0009               	tblrd		*+
  5054  002F3E  CFF5 F016          	movff	tablat,___flmul@b+1
  5055  002F42  0009               	tblrd		*+
  5056  002F44  CFF5 F017          	movff	tablat,___flmul@b+2
  5057  002F48  000A               	tblrd		*-
  5058  002F4A  CFF5 F018          	movff	tablat,___flmul@b+3
  5059  002F4E  EC71  F015         	call	___flmul	;wreg free
  5060  002F52  C015  F032         	movff	?___flmul,___flsub@a
  5061  002F56  C016  F033         	movff	?___flmul+1,___flsub@a+1
  5062  002F5A  C017  F034         	movff	?___flmul+2,___flsub@a+2
  5063  002F5E  C018  F035         	movff	?___flmul+3,___flsub@a+3
  5064  002F62  C07D  F070         	movff	SVPWM_SetVectorTimes@angleIndex,??_SVPWM_SetVectorTimes+4
  5065  002F66  C07E  F071         	movff	SVPWM_SetVectorTimes@angleIndex+1,??_SVPWM_SetVectorTimes+5
  5066  002F6A  0100               	movlb	0	; () banked
  5067  002F6C  90D8               	bcf	status,0,c
  5068  002F6E  3770               	rlcf	(??_SVPWM_SetVectorTimes+4)& (0+255),f,b
  5069  002F70  3771               	rlcf	(??_SVPWM_SetVectorTimes+5)& (0+255),f,b
  5070  002F72  90D8               	bcf	status,0,c
  5071  002F74  3770               	rlcf	(??_SVPWM_SetVectorTimes+4)& (0+255),f,b
  5072  002F76  3771               	rlcf	(??_SVPWM_SetVectorTimes+5)& (0+255),f,b
  5073  002F78  0E19               	movlw	low _cosineTable
  5074  002F7A  2570               	addwf	(??_SVPWM_SetVectorTimes+4)& (0+255),w,b
  5075  002F7C  6EF6               	movwf	tblptrl,c
  5076  002F7E  0E33               	movlw	high _cosineTable
  5077  002F80  2171               	addwfc	(??_SVPWM_SetVectorTimes+5)& (0+255),w,b
  5078  002F82  6EF7               	movwf	tblptrh,c
  5079  002F84                     	if	0	;There are less than 3 active tblptr bytes
  5080  002F84                     	endif
  5081  002F84  0009               	tblrd		*+
  5082  002F86  CFF5 F019          	movff	tablat,___flmul@a
  5083  002F8A  0009               	tblrd		*+
  5084  002F8C  CFF5 F01A          	movff	tablat,___flmul@a+1
  5085  002F90  0009               	tblrd		*+
  5086  002F92  CFF5 F01B          	movff	tablat,___flmul@a+2
  5087  002F96  000A               	tblrd		*-
  5088  002F98  CFF5 F01C          	movff	tablat,___flmul@a+3
  5089  002F9C  C07F  F072         	movff	SVPWM_SetVectorTimes@sectorIndex,??_SVPWM_SetVectorTimes+6
  5090  002FA0  C080  F073         	movff	SVPWM_SetVectorTimes@sectorIndex+1,??_SVPWM_SetVectorTimes+7
  5091  002FA4  90D8               	bcf	status,0,c
  5092  002FA6  3772               	rlcf	(??_SVPWM_SetVectorTimes+6)& (0+255),f,b
  5093  002FA8  3773               	rlcf	(??_SVPWM_SetVectorTimes+7)& (0+255),f,b
  5094  002FAA  90D8               	bcf	status,0,c
  5095  002FAC  3772               	rlcf	(??_SVPWM_SetVectorTimes+6)& (0+255),f,b
  5096  002FAE  3773               	rlcf	(??_SVPWM_SetVectorTimes+7)& (0+255),f,b
  5097  002FB0  0EB9               	movlw	low _sineTable
  5098  002FB2  2572               	addwf	(??_SVPWM_SetVectorTimes+6)& (0+255),w,b
  5099  002FB4  6EF6               	movwf	tblptrl,c
  5100  002FB6  0E38               	movlw	high _sineTable
  5101  002FB8  2173               	addwfc	(??_SVPWM_SetVectorTimes+7)& (0+255),w,b
  5102  002FBA  6EF7               	movwf	tblptrh,c
  5103  002FBC                     	if	0	;There are less than 3 active tblptr bytes
  5104  002FBC                     	endif
  5105  002FBC  0009               	tblrd		*+
  5106  002FBE  CFF5 F015          	movff	tablat,___flmul@b
  5107  002FC2  0009               	tblrd		*+
  5108  002FC4  CFF5 F016          	movff	tablat,___flmul@b+1
  5109  002FC8  0009               	tblrd		*+
  5110  002FCA  CFF5 F017          	movff	tablat,___flmul@b+2
  5111  002FCE  000A               	tblrd		*-
  5112  002FD0  CFF5 F018          	movff	tablat,___flmul@b+3
  5113  002FD4  EC71  F015         	call	___flmul	;wreg free
  5114  002FD8  C015  F02E         	movff	?___flmul,___flsub@b
  5115  002FDC  C016  F02F         	movff	?___flmul+1,___flsub@b+1
  5116  002FE0  C017  F030         	movff	?___flmul+2,___flsub@b+2
  5117  002FE4  C018  F031         	movff	?___flmul+3,___flsub@b+3
  5118  002FE8  EC92  F009         	call	___flsub	;wreg free
  5119  002FEC  C02E  F074         	movff	?___flsub,_SVPWM_SetVectorTimes$1547
  5120  002FF0  C02F  F075         	movff	?___flsub+1,_SVPWM_SetVectorTimes$1547+1
  5121  002FF4  C030  F076         	movff	?___flsub+2,_SVPWM_SetVectorTimes$1547+2
  5122  002FF8  C031  F077         	movff	?___flsub+3,_SVPWM_SetVectorTimes$1547+3
  5123                           
  5124                           ;../functions.h: 145:     (*pm).Timer.basicVec1 = (1.73205080757 * (*pm).Timer.totalPeri
      +                          od * (sineTable[sectorIndex] * cosineTable[angleIndex] - sineTable[angleIndex] * cosineT
      +                          able[sectorIndex]));
  5125  002FFC  0ED7               	movlw	215
  5126  002FFE  6E19               	movwf	___flmul@a,c
  5127  003000  0EB3               	movlw	179
  5128  003002  6E1A               	movwf	___flmul@a+1,c
  5129  003004  0EDD               	movlw	221
  5130  003006  6E1B               	movwf	___flmul@a+2,c
  5131  003008  0E3F               	movlw	63
  5132  00300A  6E1C               	movwf	___flmul@a+3,c
  5133  00300C  0100               	movlb	0	; () banked
  5134  00300E  EE20 F016          	lfsr	2,22
  5135  003012  516A               	movf	SVPWM_SetVectorTimes@pm& (0+255),w,b
  5136  003014  26D9               	addwf	fsr2l,f,c
  5137  003016  516B               	movf	(SVPWM_SetVectorTimes@pm+1)& (0+255),w,b
  5138  003018  22DA               	addwfc	fsr2h,f,c
  5139  00301A  CFDE F06C          	movff	postinc2,??_SVPWM_SetVectorTimes
  5140  00301E  CFDD F06D          	movff	postdec2,??_SVPWM_SetVectorTimes+1
  5141  003022  C06C  F001         	movff	??_SVPWM_SetVectorTimes,___xxtofl@val
  5142  003026  C06D  F002         	movff	??_SVPWM_SetVectorTimes+1,___xxtofl@val+1
  5143  00302A  6A03               	clrf	___xxtofl@val+2,c
  5144  00302C  6A04               	clrf	___xxtofl@val+3,c
  5145  00302E  0E00               	movlw	0
  5146  003030  ECB9  F00D         	call	___xxtofl
  5147  003034  C001  F015         	movff	?___xxtofl,___flmul@b
  5148  003038  C002  F016         	movff	?___xxtofl+1,___flmul@b+1
  5149  00303C  C003  F017         	movff	?___xxtofl+2,___flmul@b+2
  5150  003040  C004  F018         	movff	?___xxtofl+3,___flmul@b+3
  5151  003044  EC71  F015         	call	___flmul	;wreg free
  5152  003048  C015  F078         	movff	?___flmul,_SVPWM_SetVectorTimes$1548
  5153  00304C  C016  F079         	movff	?___flmul+1,_SVPWM_SetVectorTimes$1548+1
  5154  003050  C017  F07A         	movff	?___flmul+2,_SVPWM_SetVectorTimes$1548+2
  5155  003054  C018  F07B         	movff	?___flmul+3,_SVPWM_SetVectorTimes$1548+3
  5156                           
  5157                           ;../functions.h: 145:     (*pm).Timer.basicVec1 = (1.73205080757 * (*pm).Timer.totalPeri
      +                          od * (sineTable[sectorIndex] * cosineTable[angleIndex] - sineTable[angleIndex] * cosineT
      +                          able[sectorIndex]));
  5158  003058  C074  F019         	movff	_SVPWM_SetVectorTimes$1547,___flmul@a
  5159  00305C  C075  F01A         	movff	_SVPWM_SetVectorTimes$1547+1,___flmul@a+1
  5160  003060  C076  F01B         	movff	_SVPWM_SetVectorTimes$1547+2,___flmul@a+2
  5161  003064  C077  F01C         	movff	_SVPWM_SetVectorTimes$1547+3,___flmul@a+3
  5162  003068  C078  F015         	movff	_SVPWM_SetVectorTimes$1548,___flmul@b
  5163  00306C  C079  F016         	movff	_SVPWM_SetVectorTimes$1548+1,___flmul@b+1
  5164  003070  C07A  F017         	movff	_SVPWM_SetVectorTimes$1548+2,___flmul@b+2
  5165  003074  C07B  F018         	movff	_SVPWM_SetVectorTimes$1548+3,___flmul@b+3
  5166  003078  EC71  F015         	call	___flmul	;wreg free
  5167  00307C  C015  F036         	movff	?___flmul,___fltol@f1
  5168  003080  C016  F037         	movff	?___flmul+1,___fltol@f1+1
  5169  003084  C017  F038         	movff	?___flmul+2,___fltol@f1+2
  5170  003088  C018  F039         	movff	?___flmul+3,___fltol@f1+3
  5171  00308C  EC9D  F00B         	call	___fltol	;wreg free
  5172  003090  0100               	movlb	0	; () banked
  5173  003092  EE20 F012          	lfsr	2,18
  5174  003096  516A               	movf	SVPWM_SetVectorTimes@pm& (0+255),w,b
  5175  003098  26D9               	addwf	fsr2l,f,c
  5176  00309A  516B               	movf	(SVPWM_SetVectorTimes@pm+1)& (0+255),w,b
  5177  00309C  22DA               	addwfc	fsr2h,f,c
  5178  00309E  C036  FFDE         	movff	?___fltol,postinc2
  5179  0030A2  C037  FFDD         	movff	?___fltol+1,postdec2
  5180                           
  5181                           ; BSR set to: 0
  5182                           ;../functions.h: 147:     sectorIndex = (sector - 1) * 60;
  5183  0030A6  0EFF               	movlw	255
  5184  0030A8  257C               	addwf	SVPWM_SetVectorTimes@sector& (0+255),w,b
  5185  0030AA  6E01               	movwf	___wmul@multiplier,c
  5186  0030AC  6A02               	clrf	___wmul@multiplier+1,c
  5187  0030AE  0EFF               	movlw	255
  5188  0030B0  2202               	addwfc	___wmul@multiplier+1,f,c
  5189  0030B2  0E00               	movlw	0
  5190  0030B4  6E04               	movwf	___wmul@multiplicand+1,c
  5191  0030B6  0E3C               	movlw	60
  5192  0030B8  6E03               	movwf	___wmul@multiplicand,c
  5193  0030BA  EC5B  F008         	call	___wmul	;wreg free
  5194  0030BE  C001  F07F         	movff	?___wmul,SVPWM_SetVectorTimes@sectorIndex
  5195  0030C2  C002  F080         	movff	?___wmul+1,SVPWM_SetVectorTimes@sectorIndex+1
  5196                           
  5197                           ;../functions.h: 148:     (*pm).Timer.basicVec2 = (1.73205080757 * (*pm).Timer.totalPeri
      +                          od * (- sineTable[sectorIndex] * cosineTable[angleIndex] + sineTable[angleIndex] * cosin
      +                          eTable[sectorIndex]));
  5198  0030C6  0ED7               	movlw	215
  5199  0030C8  6E19               	movwf	___flmul@a,c
  5200  0030CA  0EB3               	movlw	179
  5201  0030CC  6E1A               	movwf	___flmul@a+1,c
  5202  0030CE  0EDD               	movlw	221
  5203  0030D0  6E1B               	movwf	___flmul@a+2,c
  5204  0030D2  0E3F               	movlw	63
  5205  0030D4  6E1C               	movwf	___flmul@a+3,c
  5206  0030D6  0100               	movlb	0	; () banked
  5207  0030D8  EE20 F016          	lfsr	2,22
  5208  0030DC  516A               	movf	SVPWM_SetVectorTimes@pm& (0+255),w,b
  5209  0030DE  26D9               	addwf	fsr2l,f,c
  5210  0030E0  516B               	movf	(SVPWM_SetVectorTimes@pm+1)& (0+255),w,b
  5211  0030E2  22DA               	addwfc	fsr2h,f,c
  5212  0030E4  CFDE F06C          	movff	postinc2,??_SVPWM_SetVectorTimes
  5213  0030E8  CFDD F06D          	movff	postdec2,??_SVPWM_SetVectorTimes+1
  5214  0030EC  C06C  F001         	movff	??_SVPWM_SetVectorTimes,___xxtofl@val
  5215  0030F0  C06D  F002         	movff	??_SVPWM_SetVectorTimes+1,___xxtofl@val+1
  5216  0030F4  6A03               	clrf	___xxtofl@val+2,c
  5217  0030F6  6A04               	clrf	___xxtofl@val+3,c
  5218  0030F8  0E00               	movlw	0
  5219  0030FA  ECB9  F00D         	call	___xxtofl
  5220  0030FE  C001  F015         	movff	?___xxtofl,___flmul@b
  5221  003102  C002  F016         	movff	?___xxtofl+1,___flmul@b+1
  5222  003106  C003  F017         	movff	?___xxtofl+2,___flmul@b+2
  5223  00310A  C004  F018         	movff	?___xxtofl+3,___flmul@b+3
  5224  00310E  EC71  F015         	call	___flmul	;wreg free
  5225  003112  C015  F074         	movff	?___flmul,_SVPWM_SetVectorTimes$1547
  5226  003116  C016  F075         	movff	?___flmul+1,_SVPWM_SetVectorTimes$1547+1
  5227  00311A  C017  F076         	movff	?___flmul+2,_SVPWM_SetVectorTimes$1547+2
  5228  00311E  C018  F077         	movff	?___flmul+3,_SVPWM_SetVectorTimes$1547+3
  5229                           
  5230                           ;../functions.h: 148:     (*pm).Timer.basicVec2 = (1.73205080757 * (*pm).Timer.totalPeri
      +                          od * (- sineTable[sectorIndex] * cosineTable[angleIndex] + sineTable[angleIndex] * cosin
      +                          eTable[sectorIndex]));
  5231  003122  C07F  F06C         	movff	SVPWM_SetVectorTimes@sectorIndex,??_SVPWM_SetVectorTimes
  5232  003126  C080  F06D         	movff	SVPWM_SetVectorTimes@sectorIndex+1,??_SVPWM_SetVectorTimes+1
  5233  00312A  0100               	movlb	0	; () banked
  5234  00312C  90D8               	bcf	status,0,c
  5235  00312E  376C               	rlcf	??_SVPWM_SetVectorTimes& (0+255),f,b
  5236  003130  376D               	rlcf	(??_SVPWM_SetVectorTimes+1)& (0+255),f,b
  5237  003132  90D8               	bcf	status,0,c
  5238  003134  376C               	rlcf	??_SVPWM_SetVectorTimes& (0+255),f,b
  5239  003136  376D               	rlcf	(??_SVPWM_SetVectorTimes+1)& (0+255),f,b
  5240  003138  0E19               	movlw	low _cosineTable
  5241  00313A  256C               	addwf	??_SVPWM_SetVectorTimes& (0+255),w,b
  5242  00313C  6EF6               	movwf	tblptrl,c
  5243  00313E  0E33               	movlw	high _cosineTable
  5244  003140  216D               	addwfc	(??_SVPWM_SetVectorTimes+1)& (0+255),w,b
  5245  003142  6EF7               	movwf	tblptrh,c
  5246  003144                     	if	0	;There are less than 3 active tblptr bytes
  5247  003144                     	endif
  5248  003144  0009               	tblrd		*+
  5249  003146  CFF5 F019          	movff	tablat,___flmul@a
  5250  00314A  0009               	tblrd		*+
  5251  00314C  CFF5 F01A          	movff	tablat,___flmul@a+1
  5252  003150  0009               	tblrd		*+
  5253  003152  CFF5 F01B          	movff	tablat,___flmul@a+2
  5254  003156  000A               	tblrd		*-
  5255  003158  CFF5 F01C          	movff	tablat,___flmul@a+3
  5256  00315C  C07D  F06E         	movff	SVPWM_SetVectorTimes@angleIndex,??_SVPWM_SetVectorTimes+2
  5257  003160  C07E  F06F         	movff	SVPWM_SetVectorTimes@angleIndex+1,??_SVPWM_SetVectorTimes+3
  5258  003164  90D8               	bcf	status,0,c
  5259  003166  376E               	rlcf	(??_SVPWM_SetVectorTimes+2)& (0+255),f,b
  5260  003168  376F               	rlcf	(??_SVPWM_SetVectorTimes+3)& (0+255),f,b
  5261  00316A  90D8               	bcf	status,0,c
  5262  00316C  376E               	rlcf	(??_SVPWM_SetVectorTimes+2)& (0+255),f,b
  5263  00316E  376F               	rlcf	(??_SVPWM_SetVectorTimes+3)& (0+255),f,b
  5264  003170  0EB9               	movlw	low _sineTable
  5265  003172  256E               	addwf	(??_SVPWM_SetVectorTimes+2)& (0+255),w,b
  5266  003174  6EF6               	movwf	tblptrl,c
  5267  003176  0E38               	movlw	high _sineTable
  5268  003178  216F               	addwfc	(??_SVPWM_SetVectorTimes+3)& (0+255),w,b
  5269  00317A  6EF7               	movwf	tblptrh,c
  5270  00317C                     	if	0	;There are less than 3 active tblptr bytes
  5271  00317C                     	endif
  5272  00317C  0009               	tblrd		*+
  5273  00317E  CFF5 F015          	movff	tablat,___flmul@b
  5274  003182  0009               	tblrd		*+
  5275  003184  CFF5 F016          	movff	tablat,___flmul@b+1
  5276  003188  0009               	tblrd		*+
  5277  00318A  CFF5 F017          	movff	tablat,___flmul@b+2
  5278  00318E  000A               	tblrd		*-
  5279  003190  CFF5 F018          	movff	tablat,___flmul@b+3
  5280  003194  EC71  F015         	call	___flmul	;wreg free
  5281  003198  C015  F009         	movff	?___flmul,___fladd@a
  5282  00319C  C016  F00A         	movff	?___flmul+1,___fladd@a+1
  5283  0031A0  C017  F00B         	movff	?___flmul+2,___fladd@a+2
  5284  0031A4  C018  F00C         	movff	?___flmul+3,___fladd@a+3
  5285  0031A8  C07D  F070         	movff	SVPWM_SetVectorTimes@angleIndex,??_SVPWM_SetVectorTimes+4
  5286  0031AC  C07E  F071         	movff	SVPWM_SetVectorTimes@angleIndex+1,??_SVPWM_SetVectorTimes+5
  5287  0031B0  0100               	movlb	0	; () banked
  5288  0031B2  90D8               	bcf	status,0,c
  5289  0031B4  3770               	rlcf	(??_SVPWM_SetVectorTimes+4)& (0+255),f,b
  5290  0031B6  3771               	rlcf	(??_SVPWM_SetVectorTimes+5)& (0+255),f,b
  5291  0031B8  90D8               	bcf	status,0,c
  5292  0031BA  3770               	rlcf	(??_SVPWM_SetVectorTimes+4)& (0+255),f,b
  5293  0031BC  3771               	rlcf	(??_SVPWM_SetVectorTimes+5)& (0+255),f,b
  5294  0031BE  0E19               	movlw	low _cosineTable
  5295  0031C0  2570               	addwf	(??_SVPWM_SetVectorTimes+4)& (0+255),w,b
  5296  0031C2  6EF6               	movwf	tblptrl,c
  5297  0031C4  0E33               	movlw	high _cosineTable
  5298  0031C6  2171               	addwfc	(??_SVPWM_SetVectorTimes+5)& (0+255),w,b
  5299  0031C8  6EF7               	movwf	tblptrh,c
  5300  0031CA                     	if	0	;There are less than 3 active tblptr bytes
  5301  0031CA                     	endif
  5302  0031CA  0009               	tblrd		*+
  5303  0031CC  CFF5 F019          	movff	tablat,___flmul@a
  5304  0031D0  0009               	tblrd		*+
  5305  0031D2  CFF5 F01A          	movff	tablat,___flmul@a+1
  5306  0031D6  0009               	tblrd		*+
  5307  0031D8  CFF5 F01B          	movff	tablat,___flmul@a+2
  5308  0031DC  000A               	tblrd		*-
  5309  0031DE  CFF5 F01C          	movff	tablat,___flmul@a+3
  5310  0031E2  C07F  F072         	movff	SVPWM_SetVectorTimes@sectorIndex,??_SVPWM_SetVectorTimes+6
  5311  0031E6  C080  F073         	movff	SVPWM_SetVectorTimes@sectorIndex+1,??_SVPWM_SetVectorTimes+7
  5312  0031EA  90D8               	bcf	status,0,c
  5313  0031EC  3772               	rlcf	(??_SVPWM_SetVectorTimes+6)& (0+255),f,b
  5314  0031EE  3773               	rlcf	(??_SVPWM_SetVectorTimes+7)& (0+255),f,b
  5315  0031F0  90D8               	bcf	status,0,c
  5316  0031F2  3772               	rlcf	(??_SVPWM_SetVectorTimes+6)& (0+255),f,b
  5317  0031F4  3773               	rlcf	(??_SVPWM_SetVectorTimes+7)& (0+255),f,b
  5318  0031F6  0EB9               	movlw	low _sineTable
  5319  0031F8  2572               	addwf	(??_SVPWM_SetVectorTimes+6)& (0+255),w,b
  5320  0031FA  6EF6               	movwf	tblptrl,c
  5321  0031FC  0E38               	movlw	high _sineTable
  5322  0031FE  2173               	addwfc	(??_SVPWM_SetVectorTimes+7)& (0+255),w,b
  5323  003200  6EF7               	movwf	tblptrh,c
  5324  003202                     	if	0	;There are less than 3 active tblptr bytes
  5325  003202                     	endif
  5326  003202  0009               	tblrd		*+
  5327  003204  CFF5 F001          	movff	tablat,___flneg@f1
  5328  003208  0009               	tblrd		*+
  5329  00320A  CFF5 F002          	movff	tablat,___flneg@f1+1
  5330  00320E  0009               	tblrd		*+
  5331  003210  CFF5 F003          	movff	tablat,___flneg@f1+2
  5332  003214  000A               	tblrd		*-
  5333  003216  CFF5 F004          	movff	tablat,___flneg@f1+3
  5334  00321A  ECAA  F008         	call	___flneg	;wreg free
  5335  00321E  C001  F015         	movff	?___flneg,___flmul@b
  5336  003222  C002  F016         	movff	?___flneg+1,___flmul@b+1
  5337  003226  C003  F017         	movff	?___flneg+2,___flmul@b+2
  5338  00322A  C004  F018         	movff	?___flneg+3,___flmul@b+3
  5339  00322E  EC71  F015         	call	___flmul	;wreg free
  5340  003232  C015  F005         	movff	?___flmul,___fladd@b
  5341  003236  C016  F006         	movff	?___flmul+1,___fladd@b+1
  5342  00323A  C017  F007         	movff	?___flmul+2,___fladd@b+2
  5343  00323E  C018  F008         	movff	?___flmul+3,___fladd@b+3
  5344  003242  ECEB  F013         	call	___fladd	;wreg free
  5345  003246  C005  F078         	movff	?___fladd,_SVPWM_SetVectorTimes$1548
  5346  00324A  C006  F079         	movff	?___fladd+1,_SVPWM_SetVectorTimes$1548+1
  5347  00324E  C007  F07A         	movff	?___fladd+2,_SVPWM_SetVectorTimes$1548+2
  5348  003252  C008  F07B         	movff	?___fladd+3,_SVPWM_SetVectorTimes$1548+3
  5349                           
  5350                           ;../functions.h: 148:     (*pm).Timer.basicVec2 = (1.73205080757 * (*pm).Timer.totalPeri
      +                          od * (- sineTable[sectorIndex] * cosineTable[angleIndex] + sineTable[angleIndex] * cosin
      +                          eTable[sectorIndex]));
  5351  003256  C074  F019         	movff	_SVPWM_SetVectorTimes$1547,___flmul@a
  5352  00325A  C075  F01A         	movff	_SVPWM_SetVectorTimes$1547+1,___flmul@a+1
  5353  00325E  C076  F01B         	movff	_SVPWM_SetVectorTimes$1547+2,___flmul@a+2
  5354  003262  C077  F01C         	movff	_SVPWM_SetVectorTimes$1547+3,___flmul@a+3
  5355  003266  C078  F015         	movff	_SVPWM_SetVectorTimes$1548,___flmul@b
  5356  00326A  C079  F016         	movff	_SVPWM_SetVectorTimes$1548+1,___flmul@b+1
  5357  00326E  C07A  F017         	movff	_SVPWM_SetVectorTimes$1548+2,___flmul@b+2
  5358  003272  C07B  F018         	movff	_SVPWM_SetVectorTimes$1548+3,___flmul@b+3
  5359  003276  EC71  F015         	call	___flmul	;wreg free
  5360  00327A  C015  F036         	movff	?___flmul,___fltol@f1
  5361  00327E  C016  F037         	movff	?___flmul+1,___fltol@f1+1
  5362  003282  C017  F038         	movff	?___flmul+2,___fltol@f1+2
  5363  003286  C018  F039         	movff	?___flmul+3,___fltol@f1+3
  5364  00328A  EC9D  F00B         	call	___fltol	;wreg free
  5365  00328E  0100               	movlb	0	; () banked
  5366  003290  EE20 F014          	lfsr	2,20
  5367  003294  516A               	movf	SVPWM_SetVectorTimes@pm& (0+255),w,b
  5368  003296  26D9               	addwf	fsr2l,f,c
  5369  003298  516B               	movf	(SVPWM_SetVectorTimes@pm+1)& (0+255),w,b
  5370  00329A  22DA               	addwfc	fsr2h,f,c
  5371  00329C  C036  FFDE         	movff	?___fltol,postinc2
  5372  0032A0  C037  FFDD         	movff	?___fltol+1,postdec2
  5373                           
  5374                           ; BSR set to: 0
  5375                           ;../functions.h: 150:     (*pm).Timer.halfZeroVector = ((*pm).Timer.totalPeriod - (*pm).
      +                          Timer.basicVec1 - (*pm).Timer.basicVec2) >> 1;
  5376  0032A4  EE20 F016          	lfsr	2,22
  5377  0032A8  516A               	movf	SVPWM_SetVectorTimes@pm& (0+255),w,b
  5378  0032AA  26D9               	addwf	fsr2l,f,c
  5379  0032AC  516B               	movf	(SVPWM_SetVectorTimes@pm+1)& (0+255),w,b
  5380  0032AE  22DA               	addwfc	fsr2h,f,c
  5381  0032B0  CFDE F06C          	movff	postinc2,??_SVPWM_SetVectorTimes
  5382  0032B4  CFDD F06D          	movff	postdec2,??_SVPWM_SetVectorTimes+1
  5383  0032B8  EE20 F014          	lfsr	2,20
  5384  0032BC  516A               	movf	SVPWM_SetVectorTimes@pm& (0+255),w,b
  5385  0032BE  26D9               	addwf	fsr2l,f,c
  5386  0032C0  516B               	movf	(SVPWM_SetVectorTimes@pm+1)& (0+255),w,b
  5387  0032C2  22DA               	addwfc	fsr2h,f,c
  5388  0032C4  CFDE F06E          	movff	postinc2,??_SVPWM_SetVectorTimes+2
  5389  0032C8  CFDD F06F          	movff	postdec2,??_SVPWM_SetVectorTimes+3
  5390  0032CC  EE20 F012          	lfsr	2,18
  5391  0032D0  516A               	movf	SVPWM_SetVectorTimes@pm& (0+255),w,b
  5392  0032D2  26D9               	addwf	fsr2l,f,c
  5393  0032D4  516B               	movf	(SVPWM_SetVectorTimes@pm+1)& (0+255),w,b
  5394  0032D6  22DA               	addwfc	fsr2h,f,c
  5395  0032D8  CFDE F070          	movff	postinc2,??_SVPWM_SetVectorTimes+4
  5396  0032DC  CFDD F071          	movff	postdec2,??_SVPWM_SetVectorTimes+5
  5397  0032E0  1F70               	comf	(??_SVPWM_SetVectorTimes+4)& (0+255),f,b
  5398  0032E2  1F71               	comf	(??_SVPWM_SetVectorTimes+5)& (0+255),f,b
  5399  0032E4  4B70               	infsnz	(??_SVPWM_SetVectorTimes+4)& (0+255),f,b
  5400  0032E6  2B71               	incf	(??_SVPWM_SetVectorTimes+5)& (0+255),f,b
  5401  0032E8  516E               	movf	(??_SVPWM_SetVectorTimes+2)& (0+255),w,b
  5402  0032EA  5F70               	subwf	(??_SVPWM_SetVectorTimes+4)& (0+255),f,b
  5403  0032EC  516F               	movf	(??_SVPWM_SetVectorTimes+3)& (0+255),w,b
  5404  0032EE  5B71               	subwfb	(??_SVPWM_SetVectorTimes+5)& (0+255),f,b
  5405  0032F0  516C               	movf	??_SVPWM_SetVectorTimes& (0+255),w,b
  5406  0032F2  2770               	addwf	(??_SVPWM_SetVectorTimes+4)& (0+255),f,b
  5407  0032F4  516D               	movf	(??_SVPWM_SetVectorTimes+1)& (0+255),w,b
  5408  0032F6  2371               	addwfc	(??_SVPWM_SetVectorTimes+5)& (0+255),f,b
  5409  0032F8  90D8               	bcf	status,0,c
  5410  0032FA  3171               	rrcf	(??_SVPWM_SetVectorTimes+5)& (0+255),w,b
  5411  0032FC  6F73               	movwf	(??_SVPWM_SetVectorTimes+7)& (0+255),b
  5412  0032FE  3170               	rrcf	(??_SVPWM_SetVectorTimes+4)& (0+255),w,b
  5413  003300  6F72               	movwf	(??_SVPWM_SetVectorTimes+6)& (0+255),b
  5414  003302  EE20 F010          	lfsr	2,16
  5415  003306  516A               	movf	SVPWM_SetVectorTimes@pm& (0+255),w,b
  5416  003308  26D9               	addwf	fsr2l,f,c
  5417  00330A  516B               	movf	(SVPWM_SetVectorTimes@pm+1)& (0+255),w,b
  5418  00330C  22DA               	addwfc	fsr2h,f,c
  5419  00330E  C072  FFDE         	movff	??_SVPWM_SetVectorTimes+6,postinc2
  5420  003312  C073  FFDD         	movff	??_SVPWM_SetVectorTimes+7,postdec2
  5421                           
  5422                           ; BSR set to: 0
  5423  003316  0012               	return		;funcret
  5424  003318                     __end_of_SVPWM_SetVectorTimes:
  5425                           	opt callstack 0
  5426                           
  5427 ;; *************** function _printf *****************
  5428 ;; Defined at:
  5429 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  5432 ;;		 -> STR_31(17), STR_30(17), STR_29(20), STR_28(19), 
  5433 ;;		 -> STR_27(20), STR_26(13), STR_25(18), STR_24(16), 
  5434 ;;		 -> STR_23(20), STR_22(12), STR_21(12), STR_20(53), 
  5435 ;;		 -> STR_19(13), STR_18(9), STR_17(10), STR_16(9), 
  5436 ;;		 -> STR_15(10), STR_14(9), STR_13(10), STR_12(9), 
  5437 ;;		 -> STR_11(10), STR_10(9), STR_9(10), STR_8(9), 
  5438 ;;		 -> STR_7(10), STR_6(9), STR_5(10), STR_4(11), 
  5439 ;;		 -> STR_3(17), STR_2(18), STR_1(16), 
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;  ap              2    8[BANK0 ] PTR void [1]
  5442 ;;		 -> ?_printf(2), 
  5443 ;;  ret             2    0        int 
  5444 ;; Return value:  Size  Location     Type
  5445 ;;                  2    2[BANK0 ] int 
  5446 ;; Registers used:
  5447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/0
  5450 ;;		On exit  : 0/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5453 ;;      Params:         0       4       0       0
  5454 ;;      Locals:         0       4       0       0
  5455 ;;      Temps:          0       0       0       0
  5456 ;;      Totals:         0       8       0       0
  5457 ;;Total ram usage:        8 bytes
  5458 ;; Hardware stack levels used:    1
  5459 ;; Hardware stack levels required when called:    7
  5460 ;; This function calls:
  5461 ;;		_vfprintf
  5462 ;; This function is called by:
  5463 ;;		_SVPWM_SetVectorTimes
  5464 ;;		_Test_setTimer
  5465 ;;		_main
  5466 ;;		_TEST_V0
  5467 ;;		_TEST_V1
  5468 ;;		_TEST_V2
  5469 ;;		_TEST_V3
  5470 ;;		_TEST_V4
  5471 ;;		_TEST_V5
  5472 ;;		_TEST_V6
  5473 ;; This function uses a non-reentrant model
  5474 ;;
  5475                           
  5476                           	psect	text17
  5477  001102                     __ptext17:
  5478                           	opt callstack 0
  5479  001102                     _printf:
  5480                           	opt callstack 23
  5481                           
  5482                           ; BSR set to: 0
  5483                           ;incstack = 0
  5484  001102  0E64               	movlw	low (?_printf+2)
  5485  001104  0100               	movlb	0	; () banked
  5486  001106  6F68               	movwf	printf@ap& (0+255),b
  5487  001108  0E00               	movlw	high (?_printf+2)
  5488  00110A  6F69               	movwf	(printf@ap+1)& (0+255),b
  5489                           
  5490                           ; BSR set to: 0
  5491  00110C  0E00               	movlw	0
  5492  00110E  6E5A               	movwf	vfprintf@fp,c
  5493  001110  0E00               	movlw	0
  5494  001112  6E5B               	movwf	vfprintf@fp+1,c
  5495  001114  C062  F05C         	movff	printf@fmt,vfprintf@fmt
  5496  001118  C063  F05D         	movff	printf@fmt+1,vfprintf@fmt+1
  5497  00111C  0E68               	movlw	low printf@ap
  5498  00111E  6E5E               	movwf	vfprintf@ap,c
  5499  001120  0E00               	movlw	high printf@ap
  5500  001122  6E5F               	movwf	vfprintf@ap+1,c
  5501  001124  ECDE  F009         	call	_vfprintf	;wreg free
  5502  001128  0012               	return		;funcret
  5503  00112A                     __end_of_printf:
  5504                           	opt callstack 0
  5505                           
  5506 ;; *************** function _vfprintf *****************
  5507 ;; Defined at:
  5508 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;  fp              2   89[COMRAM] PTR struct _IO_FILE
  5511 ;;		 -> NULL(0), 
  5512 ;;  fmt             2   91[COMRAM] PTR const unsigned char 
  5513 ;;		 -> STR_31(17), STR_30(17), STR_29(20), STR_28(19), 
  5514 ;;		 -> STR_27(20), STR_26(13), STR_25(18), STR_24(16), 
  5515 ;;		 -> STR_23(20), STR_22(12), STR_21(12), STR_20(53), 
  5516 ;;		 -> STR_19(13), STR_18(9), STR_17(10), STR_16(9), 
  5517 ;;		 -> STR_15(10), STR_14(9), STR_13(10), STR_12(9), 
  5518 ;;		 -> STR_11(10), STR_10(9), STR_9(10), STR_8(9), 
  5519 ;;		 -> STR_7(10), STR_6(9), STR_5(10), STR_4(11), 
  5520 ;;		 -> STR_3(17), STR_2(18), STR_1(16), 
  5521 ;;  ap              2   93[COMRAM] PTR PTR void 
  5522 ;;		 -> printf@ap(2), 
  5523 ;; Auto vars:     Size  Location     Type
  5524 ;;  cfmt            2    0[BANK0 ] PTR unsigned char 
  5525 ;;		 -> STR_31(17), STR_30(17), STR_29(20), STR_28(19), 
  5526 ;;		 -> STR_27(20), STR_26(13), STR_25(18), STR_24(16), 
  5527 ;;		 -> STR_23(20), STR_22(12), STR_21(12), STR_20(53), 
  5528 ;;		 -> STR_19(13), STR_18(9), STR_17(10), STR_16(9), 
  5529 ;;		 -> STR_15(10), STR_14(9), STR_13(10), STR_12(9), 
  5530 ;;		 -> STR_11(10), STR_10(9), STR_9(10), STR_8(9), 
  5531 ;;		 -> STR_7(10), STR_6(9), STR_5(10), STR_4(11), 
  5532 ;;		 -> STR_3(17), STR_2(18), STR_1(16), 
  5533 ;; Return value:  Size  Location     Type
  5534 ;;                  2   89[COMRAM] int 
  5535 ;; Registers used:
  5536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5537 ;; Tracked objects:
  5538 ;;		On entry : 0/0
  5539 ;;		On exit  : 0/0
  5540 ;;		Unchanged: 0/0
  5541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5542 ;;      Params:         6       0       0       0
  5543 ;;      Locals:         0       2       0       0
  5544 ;;      Temps:          0       0       0       0
  5545 ;;      Totals:         6       2       0       0
  5546 ;;Total ram usage:        8 bytes
  5547 ;; Hardware stack levels used:    1
  5548 ;; Hardware stack levels required when called:    6
  5549 ;; This function calls:
  5550 ;;		_vfpfcnvrt
  5551 ;; This function is called by:
  5552 ;;		_printf
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           	psect	text18
  5557  0013BC                     __ptext18:
  5558                           	opt callstack 0
  5559  0013BC                     _vfprintf:
  5560                           	opt callstack 23
  5561                           
  5562                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5563                           
  5564                           ;incstack = 0
  5565  0013BC  C05C  F060         	movff	vfprintf@fmt,vfprintf@cfmt
  5566  0013C0  C05D  F061         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5567                           
  5568                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5569  0013C4  0E00               	movlw	0
  5570  0013C6  0100               	movlb	0	; () banked
  5571  0013C8  6FAD               	movwf	(_nout+1)& (0+255),b
  5572  0013CA  0E00               	movlw	0
  5573  0013CC  6FAC               	movwf	_nout& (0+255),b
  5574                           
  5575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5576  0013CE  D013               	goto	l2593
  5577  0013D0                     l2591:
  5578                           
  5579                           ; BSR set to: 0
  5580                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5581  0013D0  C05A  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  5582  0013D4  C05B  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5583  0013D8  0E60               	movlw	low vfprintf@cfmt
  5584  0013DA  6E42               	movwf	vfpfcnvrt@fmt,c
  5585  0013DC  0E00               	movlw	high vfprintf@cfmt
  5586  0013DE  6E43               	movwf	vfpfcnvrt@fmt+1,c
  5587  0013E0  C05E  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  5588  0013E4  C05F  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5589  0013E8  EC8F  F010         	call	_vfpfcnvrt	;wreg free
  5590  0013EC  5040               	movf	?_vfpfcnvrt,w,c
  5591  0013EE  0100               	movlb	0	; () banked
  5592  0013F0  27AC               	addwf	_nout& (0+255),f,b
  5593  0013F2  5041               	movf	?_vfpfcnvrt+1,w,c
  5594  0013F4  23AD               	addwfc	(_nout+1)& (0+255),f,b
  5595  0013F6                     l2593:
  5596                           
  5597                           ; BSR set to: 0
  5598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5599  0013F6  C060  FFF6         	movff	vfprintf@cfmt,tblptrl
  5600  0013FA  C061  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5601  0013FE                     	if	0	;tblptru may be non-zero
  5602  0013FE                     	endif
  5603  0013FE                     	if	0	;tblptru may be non-zero
  5604  0013FE                     	endif
  5605  0013FE  0008               	tblrd		*
  5606  001400  50F5               	movf	tablat,w,c
  5607  001402  0900               	iorlw	0
  5608  001404  A4D8               	btfss	status,2,c
  5609  001406  D7E4               	goto	l2591
  5610                           
  5611                           ; BSR set to: 0
  5612                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5613  001408  C0AC  F05A         	movff	_nout,?_vfprintf
  5614  00140C  C0AD  F05B         	movff	_nout+1,?_vfprintf+1
  5615                           
  5616                           ; BSR set to: 0
  5617  001410  0012               	return		;funcret
  5618  001412                     __end_of_vfprintf:
  5619                           	opt callstack 0
  5620                           
  5621 ;; *************** function _vfpfcnvrt *****************
  5622 ;; Defined at:
  5623 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  5626 ;;		 -> NULL(0), 
  5627 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  5628 ;;		 -> vfprintf@cfmt(2), 
  5629 ;;  ap              2   67[COMRAM] PTR PTR void 
  5630 ;;		 -> printf@ap(2), 
  5631 ;; Auto vars:     Size  Location     Type
  5632 ;;  llu             8   81[COMRAM] unsigned long long 
  5633 ;;  ll              8   73[COMRAM] long long 
  5634 ;;  f               4    0        long long 
  5635 ;;  vp              3    0        PTR void 
  5636 ;;  ct              3    0        unsigned char [3]
  5637 ;;  cp              3    0        PTR unsigned char 
  5638 ;;  i               2    0        int 
  5639 ;;  done            2    0        int 
  5640 ;;  c               1    0        unsigned char 
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  2   63[COMRAM] int 
  5643 ;; Registers used:
  5644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5650 ;;      Params:         6       0       0       0
  5651 ;;      Locals:        16       0       0       0
  5652 ;;      Temps:          4       0       0       0
  5653 ;;      Totals:        26       0       0       0
  5654 ;;Total ram usage:       26 bytes
  5655 ;; Hardware stack levels used:    1
  5656 ;; Hardware stack levels required when called:    5
  5657 ;; This function calls:
  5658 ;;		_dtoa
  5659 ;;		_fputc
  5660 ;;		_utoa
  5661 ;; This function is called by:
  5662 ;;		_vfprintf
  5663 ;; This function uses a non-reentrant model
  5664 ;;
  5665                           
  5666                           	psect	text19
  5667  00211E                     __ptext19:
  5668                           	opt callstack 0
  5669  00211E                     _vfpfcnvrt:
  5670                           	opt callstack 23
  5671                           
  5672                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5673                           
  5674                           ; BSR set to: 0
  5675                           ;incstack = 0
  5676  00211E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5677  002122  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5678  002126  CFDE FFF6          	movff	postinc2,tblptrl
  5679  00212A  CFDD FFF7          	movff	postdec2,tblptrh
  5680  00212E                     	if	0	;tblptru may be non-zero
  5681  00212E                     	endif
  5682  00212E                     	if	0	;tblptru may be non-zero
  5683  00212E                     	endif
  5684  00212E  0008               	tblrd		*
  5685  002130  50F5               	movf	tablat,w,c
  5686  002132  0A25               	xorlw	37
  5687  002134  A4D8               	btfss	status,2,c
  5688  002136  D0E7               	goto	l2579
  5689                           
  5690                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5691  002138  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5692  00213C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5693  002140  2ADE               	incf	postinc2,f,c
  5694  002142  0E00               	movlw	0
  5695  002144  22DD               	addwfc	postdec2,f,c
  5696                           
  5697                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5698  002146  0E00               	movlw	0
  5699  002148  0100               	movlb	0	; () banked
  5700  00214A  6FAF               	movwf	(_width+1)& (0+255),b
  5701  00214C  0E00               	movlw	0
  5702  00214E  6FAE               	movwf	_width& (0+255),b
  5703  002150  C0AE  F0B2         	movff	_width,_flags
  5704  002154  C0AF  F0B3         	movff	_width+1,_flags+1
  5705                           
  5706                           ; BSR set to: 0
  5707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5708  002158  69B0               	setf	_prec& (0+255),b
  5709  00215A  69B1               	setf	(_prec+1)& (0+255),b
  5710                           
  5711                           ; BSR set to: 0
  5712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5713  00215C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5714  002160  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5715  002164  CFDE FFF6          	movff	postinc2,tblptrl
  5716  002168  CFDD FFF7          	movff	postdec2,tblptrh
  5717  00216C                     	if	0	;tblptru may be non-zero
  5718  00216C                     	endif
  5719  00216C                     	if	0	;tblptru may be non-zero
  5720  00216C                     	endif
  5721  00216C  0008               	tblrd		*
  5722  00216E  50F5               	movf	tablat,w,c
  5723  002170  0A64               	xorlw	100
  5724  002172  B4D8               	btfsc	status,2,c
  5725  002174  D00D               	goto	u2390
  5726                           
  5727                           ; BSR set to: 0
  5728  002176  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5729  00217A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5730  00217E  CFDE FFF6          	movff	postinc2,tblptrl
  5731  002182  CFDD FFF7          	movff	postdec2,tblptrh
  5732  002186                     	if	0	;tblptru may be non-zero
  5733  002186                     	endif
  5734  002186                     	if	0	;tblptru may be non-zero
  5735  002186                     	endif
  5736  002186  0008               	tblrd		*
  5737  002188  50F5               	movf	tablat,w,c
  5738  00218A  0A69               	xorlw	105
  5739  00218C  A4D8               	btfss	status,2,c
  5740  00218E  D03F               	goto	l2555
  5741  002190                     u2390:
  5742                           
  5743                           ; BSR set to: 0
  5744                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5745  002190  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5746  002194  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5747  002198  2ADE               	incf	postinc2,f,c
  5748  00219A  0E00               	movlw	0
  5749  00219C  22DD               	addwfc	postdec2,f,c
  5750                           
  5751                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5752  00219E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5753  0021A2  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5754  0021A6  CFDF F046          	movff	indf2,??_vfpfcnvrt
  5755  0021AA  0E02               	movlw	2
  5756  0021AC  26DE               	addwf	postinc2,f,c
  5757  0021AE  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  5758  0021B2  0E00               	movlw	0
  5759  0021B4  22DD               	addwfc	postdec2,f,c
  5760  0021B6  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5761  0021BA  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5762  0021BE  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  5763  0021C2  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  5764  0021C6  0E00               	movlw	0
  5765  0021C8  BE4B               	btfsc	vfpfcnvrt@ll+1,7,c
  5766  0021CA  0EFF               	movlw	-1
  5767  0021CC  6E4C               	movwf	vfpfcnvrt@ll+2,c
  5768  0021CE  6E4D               	movwf	vfpfcnvrt@ll+3,c
  5769  0021D0  6E4E               	movwf	vfpfcnvrt@ll+4,c
  5770  0021D2  6E4F               	movwf	vfpfcnvrt@ll+5,c
  5771  0021D4  6E50               	movwf	vfpfcnvrt@ll+6,c
  5772  0021D6  6E51               	movwf	vfpfcnvrt@ll+7,c
  5773                           
  5774                           ; BSR set to: 0
  5775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  5776  0021D8  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  5777  0021DC  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5778  0021E0  C04A  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  5779  0021E4  C04B  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5780  0021E8  C04C  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5781  0021EC  C04D  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5782  0021F0  C04E  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5783  0021F4  C04F  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5784  0021F8  C050  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5785  0021FC  C051  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5786  002200  EC9D  F011         	call	_dtoa	;wreg free
  5787  002204  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  5788  002208  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5789  00220C  0012               	return	
  5790  00220E                     l2555:
  5791                           
  5792                           ; BSR set to: 0
  5793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  5794  00220E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5795  002212  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5796  002216  CFDE FFF6          	movff	postinc2,tblptrl
  5797  00221A  CFDD FFF7          	movff	postdec2,tblptrh
  5798  00221E                     	if	0	;tblptru may be non-zero
  5799  00221E                     	endif
  5800  00221E                     	if	0	;tblptru may be non-zero
  5801  00221E                     	endif
  5802  00221E  0008               	tblrd		*
  5803  002220  50F5               	movf	tablat,w,c
  5804  002222  0A75               	xorlw	117
  5805  002224  A4D8               	btfss	status,2,c
  5806  002226  D040               	goto	l2563
  5807                           
  5808                           ; BSR set to: 0
  5809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  5810  002228  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5811  00222C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5812  002230  2ADE               	incf	postinc2,f,c
  5813  002232  0E00               	movlw	0
  5814  002234  22DD               	addwfc	postdec2,f,c
  5815                           
  5816                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  5817  002236  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5818  00223A  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5819  00223E  CFDF F046          	movff	indf2,??_vfpfcnvrt
  5820  002242  0E02               	movlw	2
  5821  002244  26DE               	addwf	postinc2,f,c
  5822  002246  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  5823  00224A  0E00               	movlw	0
  5824  00224C  22DD               	addwfc	postdec2,f,c
  5825  00224E  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5826  002252  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5827  002256  CFDE F048          	movff	postinc2,??_vfpfcnvrt+2
  5828  00225A  CFDD F049          	movff	postdec2,??_vfpfcnvrt+3
  5829  00225E  C048  F052         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5830  002262  C049  F053         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5831  002266  6A54               	clrf	vfpfcnvrt@llu+2,c
  5832  002268  6A55               	clrf	vfpfcnvrt@llu+3,c
  5833  00226A  6A56               	clrf	vfpfcnvrt@llu+4,c
  5834  00226C  6A57               	clrf	vfpfcnvrt@llu+5,c
  5835  00226E  6A58               	clrf	vfpfcnvrt@llu+6,c
  5836  002270  6A59               	clrf	vfpfcnvrt@llu+7,c
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  5840  002272  C040  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  5841  002276  C041  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  5842  00227A  C052  F01E         	movff	vfpfcnvrt@llu,utoa@d
  5843  00227E  C053  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  5844  002282  C054  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  5845  002286  C055  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  5846  00228A  C056  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  5847  00228E  C057  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  5848  002292  C058  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  5849  002296  C059  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  5850  00229A  ECB6  F00F         	call	_utoa	;wreg free
  5851  00229E  C01C  F040         	movff	?_utoa,?_vfpfcnvrt
  5852  0022A2  C01D  F041         	movff	?_utoa+1,?_vfpfcnvrt+1
  5853  0022A6  0012               	return	
  5854  0022A8                     l2563:
  5855                           
  5856                           ; BSR set to: 0
  5857                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5858  0022A8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5859  0022AC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5860  0022B0  CFDE FFF6          	movff	postinc2,tblptrl
  5861  0022B4  CFDD FFF7          	movff	postdec2,tblptrh
  5862  0022B8                     	if	0	;tblptru may be non-zero
  5863  0022B8                     	endif
  5864  0022B8                     	if	0	;tblptru may be non-zero
  5865  0022B8                     	endif
  5866  0022B8  0008               	tblrd		*
  5867  0022BA  50F5               	movf	tablat,w,c
  5868  0022BC  0A25               	xorlw	37
  5869  0022BE  A4D8               	btfss	status,2,c
  5870  0022C0  D016               	goto	l2573
  5871                           
  5872                           ; BSR set to: 0
  5873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5874  0022C2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5875  0022C6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5876  0022CA  2ADE               	incf	postinc2,f,c
  5877  0022CC  0E00               	movlw	0
  5878  0022CE  22DD               	addwfc	postdec2,f,c
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5882  0022D0  0E00               	movlw	0
  5883  0022D2  6E02               	movwf	fputc@c+1,c
  5884  0022D4  0E25               	movlw	37
  5885  0022D6  6E01               	movwf	fputc@c,c
  5886  0022D8  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5887  0022DC  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5888  0022E0  EC09  F00A         	call	_fputc	;wreg free
  5889  0022E4                     l2569:
  5890                           
  5891                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5892  0022E4  0E00               	movlw	0
  5893  0022E6  6E41               	movwf	?_vfpfcnvrt+1,c
  5894  0022E8  0E01               	movlw	1
  5895  0022EA  6E40               	movwf	?_vfpfcnvrt,c
  5896  0022EC  0012               	return	
  5897  0022EE                     l2573:
  5898                           
  5899                           ; BSR set to: 0
  5900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5901  0022EE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5902  0022F2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5903  0022F6  2ADE               	incf	postinc2,f,c
  5904  0022F8  0E00               	movlw	0
  5905  0022FA  22DD               	addwfc	postdec2,f,c
  5906                           
  5907                           ; BSR set to: 0
  5908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  5909  0022FC  0E00               	movlw	0
  5910  0022FE  6E41               	movwf	?_vfpfcnvrt+1,c
  5911  002300  0E00               	movlw	0
  5912  002302  6E40               	movwf	?_vfpfcnvrt,c
  5913  002304  0012               	return	
  5914  002306                     l2579:
  5915                           
  5916                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5917  002306  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5918  00230A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5919  00230E  CFDE FFF6          	movff	postinc2,tblptrl
  5920  002312  CFDD FFF7          	movff	postdec2,tblptrh
  5921  002316                     	if	0	;tblptru may be non-zero
  5922  002316                     	endif
  5923  002316                     	if	0	;tblptru may be non-zero
  5924  002316                     	endif
  5925  002316  0008               	tblrd		*
  5926  002318  50F5               	movf	tablat,w,c
  5927  00231A  6E01               	movwf	fputc@c,c
  5928  00231C  6A02               	clrf	fputc@c+1,c
  5929  00231E  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5930  002322  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5931  002326  EC09  F00A         	call	_fputc	;wreg free
  5932                           
  5933                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5934  00232A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5935  00232E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5936  002332  2ADE               	incf	postinc2,f,c
  5937  002334  0E00               	movlw	0
  5938  002336  22DD               	addwfc	postdec2,f,c
  5939  002338  D7D5               	goto	l2569
  5940  00233A                     __end_of_vfpfcnvrt:
  5941                           	opt callstack 0
  5942                           
  5943 ;; *************** function _utoa *****************
  5944 ;; Defined at:
  5945 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5946 ;; Parameters:    Size  Location     Type
  5947 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5948 ;;		 -> NULL(0), 
  5949 ;;  d               8   29[COMRAM] unsigned long long 
  5950 ;; Auto vars:     Size  Location     Type
  5951 ;;  n               8   49[COMRAM] unsigned long long 
  5952 ;;  i               2   57[COMRAM] int 
  5953 ;;  w               2   47[COMRAM] int 
  5954 ;;  p               2   45[COMRAM] int 
  5955 ;; Return value:  Size  Location     Type
  5956 ;;                  2   27[COMRAM] int 
  5957 ;; Registers used:
  5958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5959 ;; Tracked objects:
  5960 ;;		On entry : 0/0
  5961 ;;		On exit  : 0/0
  5962 ;;		Unchanged: 0/0
  5963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5964 ;;      Params:        10       0       0       0
  5965 ;;      Locals:        14       0       0       0
  5966 ;;      Temps:          8       0       0       0
  5967 ;;      Totals:        32       0       0       0
  5968 ;;Total ram usage:       32 bytes
  5969 ;; Hardware stack levels used:    1
  5970 ;; Hardware stack levels required when called:    4
  5971 ;; This function calls:
  5972 ;;		___lodiv
  5973 ;;		___lomod
  5974 ;;		_pad
  5975 ;; This function is called by:
  5976 ;;		_vfpfcnvrt
  5977 ;; This function uses a non-reentrant model
  5978 ;;
  5979                           
  5980                           	psect	text20
  5981  001F6C                     __ptext20:
  5982                           	opt callstack 0
  5983  001F6C                     _utoa:
  5984                           	opt callstack 23
  5985                           
  5986                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  5987                           
  5988                           ;incstack = 0
  5989  001F6C  0100               	movlb	0	; () banked
  5990  001F6E  AFB1               	btfss	(_prec+1)& (0+255),7,b
  5991                           
  5992                           ; BSR set to: 0
  5993                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  5994  001F70  93B2               	bcf	_flags& (0+255),1,b
  5995                           
  5996                           ; BSR set to: 0
  5997                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  5998  001F72  BFB1               	btfsc	(_prec+1)& (0+255),7,b
  5999  001F74  D005               	goto	u2310
  6000  001F76  51B1               	movf	(_prec+1)& (0+255),w,b
  6001  001F78  E108               	bnz	l223
  6002  001F7A  05B0               	decf	_prec& (0+255),w,b
  6003  001F7C  B0D8               	btfsc	status,0,c
  6004  001F7E  D005               	goto	l223
  6005  001F80                     u2310:
  6006                           
  6007                           ; BSR set to: 0
  6008  001F80  0E00               	movlw	0
  6009  001F82  6E2F               	movwf	utoa@p+1,c
  6010  001F84  0E01               	movlw	1
  6011  001F86  6E2E               	movwf	utoa@p,c
  6012  001F88  D004               	goto	l225
  6013  001F8A                     l223:
  6014                           
  6015                           ; BSR set to: 0
  6016  001F8A  C0B0  F02E         	movff	_prec,utoa@p
  6017  001F8E  C0B1  F02F         	movff	_prec+1,utoa@p+1
  6018  001F92                     l225:
  6019                           
  6020                           ; BSR set to: 0
  6021                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  6022  001F92  C0AE  F030         	movff	_width,utoa@w
  6023  001F96  C0AF  F031         	movff	_width+1,utoa@w+1
  6024                           
  6025                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  6026  001F9A  C01E  F032         	movff	utoa@d,utoa@n
  6027  001F9E  C01F  F033         	movff	utoa@d+1,utoa@n+1
  6028  001FA2  C020  F034         	movff	utoa@d+2,utoa@n+2
  6029  001FA6  C021  F035         	movff	utoa@d+3,utoa@n+3
  6030  001FAA  C022  F036         	movff	utoa@d+4,utoa@n+4
  6031  001FAE  C023  F037         	movff	utoa@d+5,utoa@n+5
  6032  001FB2  C024  F038         	movff	utoa@d+6,utoa@n+6
  6033  001FB6  C025  F039         	movff	utoa@d+7,utoa@n+7
  6034                           
  6035                           ; BSR set to: 0
  6036                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  6037  001FBA  0E00               	movlw	0
  6038  001FBC  6E3B               	movwf	utoa@i+1,c
  6039  001FBE  0E1F               	movlw	31
  6040  001FC0  6E3A               	movwf	utoa@i,c
  6041                           
  6042                           ; BSR set to: 0
  6043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  6044  001FC2  0E00               	movlw	0
  6045  001FC4  0101               	movlb	1	; () banked
  6046  001FC6  6F45               	movwf	(_dbuf+31)& (0+255),b
  6047                           
  6048                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6049  001FC8  D076               	goto	l2523
  6050  001FCA                     l2513:
  6051                           
  6052                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  6053  001FCA  063A               	decf	utoa@i,f,c
  6054  001FCC  A0D8               	btfss	status,0,c
  6055  001FCE  063B               	decf	utoa@i+1,f,c
  6056                           
  6057                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  6058  001FD0  0E26               	movlw	low _dbuf
  6059  001FD2  243A               	addwf	utoa@i,w,c
  6060  001FD4  6ED9               	movwf	fsr2l,c
  6061  001FD6  0E01               	movlw	high _dbuf
  6062  001FD8  203B               	addwfc	utoa@i+1,w,c
  6063  001FDA  6EDA               	movwf	fsr2h,c
  6064  001FDC  C032  F001         	movff	utoa@n,___lomod@dividend
  6065  001FE0  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  6066  001FE4  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  6067  001FE8  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  6068  001FEC  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  6069  001FF0  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  6070  001FF4  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  6071  001FF8  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  6072  001FFC  0E0A               	movlw	10
  6073  001FFE  6E09               	movwf	___lomod@divisor,c
  6074  002000  0E00               	movlw	0
  6075  002002  6E0A               	movwf	___lomod@divisor+1,c
  6076  002004  0E00               	movlw	0
  6077  002006  6E0B               	movwf	___lomod@divisor+2,c
  6078  002008  0E00               	movlw	0
  6079  00200A  6E0C               	movwf	___lomod@divisor+3,c
  6080  00200C  0E00               	movlw	0
  6081  00200E  6E0D               	movwf	___lomod@divisor+4,c
  6082  002010  0E00               	movlw	0
  6083  002012  6E0E               	movwf	___lomod@divisor+5,c
  6084  002014  0E00               	movlw	0
  6085  002016  6E0F               	movwf	___lomod@divisor+6,c
  6086  002018  0E00               	movlw	0
  6087  00201A  6E10               	movwf	___lomod@divisor+7,c
  6088  00201C  EC46  F00B         	call	___lomod	;wreg free
  6089  002020  C001  F026         	movff	?___lomod,??_utoa
  6090  002024  C002  F027         	movff	?___lomod+1,??_utoa+1
  6091  002028  C003  F028         	movff	?___lomod+2,??_utoa+2
  6092  00202C  C004  F029         	movff	?___lomod+3,??_utoa+3
  6093  002030  C005  F02A         	movff	?___lomod+4,??_utoa+4
  6094  002034  C006  F02B         	movff	?___lomod+5,??_utoa+5
  6095  002038  C007  F02C         	movff	?___lomod+6,??_utoa+6
  6096  00203C  C008  F02D         	movff	?___lomod+7,??_utoa+7
  6097  002040  5026               	movf	??_utoa,w,c
  6098  002042  0F30               	addlw	48
  6099  002044  6EDF               	movwf	indf2,c
  6100                           
  6101                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  6102  002046  062E               	decf	utoa@p,f,c
  6103  002048  A0D8               	btfss	status,0,c
  6104  00204A  062F               	decf	utoa@p+1,f,c
  6105                           
  6106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  6107  00204C  0630               	decf	utoa@w,f,c
  6108  00204E  A0D8               	btfss	status,0,c
  6109  002050  0631               	decf	utoa@w+1,f,c
  6110                           
  6111                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  6112  002052  C032  F001         	movff	utoa@n,___lodiv@dividend
  6113  002056  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  6114  00205A  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  6115  00205E  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  6116  002062  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  6117  002066  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  6118  00206A  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  6119  00206E  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  6120  002072  0E0A               	movlw	10
  6121  002074  6E09               	movwf	___lodiv@divisor,c
  6122  002076  0E00               	movlw	0
  6123  002078  6E0A               	movwf	___lodiv@divisor+1,c
  6124  00207A  0E00               	movlw	0
  6125  00207C  6E0B               	movwf	___lodiv@divisor+2,c
  6126  00207E  0E00               	movlw	0
  6127  002080  6E0C               	movwf	___lodiv@divisor+3,c
  6128  002082  0E00               	movlw	0
  6129  002084  6E0D               	movwf	___lodiv@divisor+4,c
  6130  002086  0E00               	movlw	0
  6131  002088  6E0E               	movwf	___lodiv@divisor+5,c
  6132  00208A  0E00               	movlw	0
  6133  00208C  6E0F               	movwf	___lodiv@divisor+6,c
  6134  00208E  0E00               	movlw	0
  6135  002090  6E10               	movwf	___lodiv@divisor+7,c
  6136  002092  ECC0  F00C         	call	___lodiv	;wreg free
  6137  002096  C001  F032         	movff	?___lodiv,utoa@n
  6138  00209A  C002  F033         	movff	?___lodiv+1,utoa@n+1
  6139  00209E  C003  F034         	movff	?___lodiv+2,utoa@n+2
  6140  0020A2  C004  F035         	movff	?___lodiv+3,utoa@n+3
  6141  0020A6  C005  F036         	movff	?___lodiv+4,utoa@n+4
  6142  0020AA  C006  F037         	movff	?___lodiv+5,utoa@n+5
  6143  0020AE  C007  F038         	movff	?___lodiv+6,utoa@n+6
  6144  0020B2  C008  F039         	movff	?___lodiv+7,utoa@n+7
  6145  0020B6                     l2523:
  6146                           
  6147                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6148  0020B6  503A               	movf	utoa@i,w,c
  6149  0020B8  103B               	iorwf	utoa@i+1,w,c
  6150  0020BA  B4D8               	btfsc	status,2,c
  6151  0020BC  D01B               	goto	u2360
  6152  0020BE  5032               	movf	utoa@n,w,c
  6153  0020C0  1033               	iorwf	utoa@n+1,w,c
  6154  0020C2  1034               	iorwf	utoa@n+2,w,c
  6155  0020C4  1035               	iorwf	utoa@n+3,w,c
  6156  0020C6  1036               	iorwf	utoa@n+4,w,c
  6157  0020C8  1037               	iorwf	utoa@n+5,w,c
  6158  0020CA  1038               	iorwf	utoa@n+6,w,c
  6159  0020CC  1039               	iorwf	utoa@n+7,w,c
  6160  0020CE  A4D8               	btfss	status,2,c
  6161  0020D0  D77C               	goto	l2513
  6162  0020D2  BE2F               	btfsc	utoa@p+1,7,c
  6163  0020D4  D005               	goto	u2340
  6164  0020D6  502F               	movf	utoa@p+1,w,c
  6165  0020D8  E102               	bnz	u2341
  6166  0020DA  042E               	decf	utoa@p,w,c
  6167  0020DC  B0D8               	btfsc	status,0,c
  6168  0020DE                     u2341:
  6169  0020DE  D775               	goto	l2513
  6170  0020E0                     u2340:
  6171  0020E0  BE31               	btfsc	utoa@w+1,7,c
  6172  0020E2  D008               	goto	u2360
  6173  0020E4  5031               	movf	utoa@w+1,w,c
  6174  0020E6  E103               	bnz	u2350
  6175  0020E8  0430               	decf	utoa@w,w,c
  6176  0020EA  A0D8               	btfss	status,0,c
  6177  0020EC  D003               	goto	u2360
  6178  0020EE                     u2350:
  6179  0020EE  0100               	movlb	0	; () banked
  6180  0020F0  B3B2               	btfsc	_flags& (0+255),1,b
  6181  0020F2  D76B               	goto	l2513
  6182  0020F4                     u2360:
  6183                           
  6184                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  6185  0020F4  C01C  F011         	movff	utoa@fp,pad@fp
  6186  0020F8  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  6187  0020FC  0E26               	movlw	low _dbuf
  6188  0020FE  243A               	addwf	utoa@i,w,c
  6189  002100  6E13               	movwf	pad@buf,c
  6190  002102  0E01               	movlw	high _dbuf
  6191  002104  203B               	addwfc	utoa@i+1,w,c
  6192  002106  6E14               	movwf	pad@buf+1,c
  6193  002108  C030  F015         	movff	utoa@w,pad@p
  6194  00210C  C031  F016         	movff	utoa@w+1,pad@p+1
  6195  002110  ECF9  F00A         	call	_pad	;wreg free
  6196  002114  C011  F01C         	movff	?_pad,?_utoa
  6197  002118  C012  F01D         	movff	?_pad+1,?_utoa+1
  6198  00211C  0012               	return		;funcret
  6199  00211E                     __end_of_utoa:
  6200                           	opt callstack 0
  6201                           
  6202 ;; *************** function ___lomod *****************
  6203 ;; Defined at:
  6204 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  6205 ;; Parameters:    Size  Location     Type
  6206 ;;  dividend        8    0[COMRAM] unsigned long long 
  6207 ;;  divisor         8    8[COMRAM] unsigned long long 
  6208 ;; Auto vars:     Size  Location     Type
  6209 ;;  counter         1   16[COMRAM] unsigned char 
  6210 ;; Return value:  Size  Location     Type
  6211 ;;                  8    0[COMRAM] unsigned long long 
  6212 ;; Registers used:
  6213 ;;		wreg, status,2, status,0
  6214 ;; Tracked objects:
  6215 ;;		On entry : 0/0
  6216 ;;		On exit  : 0/0
  6217 ;;		Unchanged: 0/0
  6218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6219 ;;      Params:        16       0       0       0
  6220 ;;      Locals:         1       0       0       0
  6221 ;;      Temps:          0       0       0       0
  6222 ;;      Totals:        17       0       0       0
  6223 ;;Total ram usage:       17 bytes
  6224 ;; Hardware stack levels used:    1
  6225 ;; This function calls:
  6226 ;;		Nothing
  6227 ;; This function is called by:
  6228 ;;		_utoa
  6229 ;; This function uses a non-reentrant model
  6230 ;;
  6231                           
  6232                           	psect	text21
  6233  00168C                     __ptext21:
  6234                           	opt callstack 0
  6235  00168C                     ___lomod:
  6236                           	opt callstack 26
  6237                           
  6238                           ;incstack = 0
  6239  00168C  5009               	movf	___lomod@divisor,w,c
  6240  00168E  100A               	iorwf	___lomod@divisor+1,w,c
  6241  001690  100B               	iorwf	___lomod@divisor+2,w,c
  6242  001692  100C               	iorwf	___lomod@divisor+3,w,c
  6243  001694  100D               	iorwf	___lomod@divisor+4,w,c
  6244  001696  100E               	iorwf	___lomod@divisor+5,w,c
  6245  001698  100F               	iorwf	___lomod@divisor+6,w,c
  6246  00169A  1010               	iorwf	___lomod@divisor+7,w,c
  6247  00169C  B4D8               	btfsc	status,2,c
  6248  00169E  D03C               	goto	l699
  6249  0016A0  0E01               	movlw	1
  6250  0016A2  6E11               	movwf	___lomod@counter,c
  6251  0016A4  D00A               	goto	l2429
  6252  0016A6                     l2427:
  6253  0016A6  90D8               	bcf	status,0,c
  6254  0016A8  3609               	rlcf	___lomod@divisor,f,c
  6255  0016AA  360A               	rlcf	___lomod@divisor+1,f,c
  6256  0016AC  360B               	rlcf	___lomod@divisor+2,f,c
  6257  0016AE  360C               	rlcf	___lomod@divisor+3,f,c
  6258  0016B0  360D               	rlcf	___lomod@divisor+4,f,c
  6259  0016B2  360E               	rlcf	___lomod@divisor+5,f,c
  6260  0016B4  360F               	rlcf	___lomod@divisor+6,f,c
  6261  0016B6  3610               	rlcf	___lomod@divisor+7,f,c
  6262  0016B8  2A11               	incf	___lomod@counter,f,c
  6263  0016BA                     l2429:
  6264  0016BA  AE10               	btfss	___lomod@divisor+7,7,c
  6265  0016BC  D7F4               	goto	l2427
  6266  0016BE                     u2130:
  6267  0016BE  5009               	movf	___lomod@divisor,w,c
  6268  0016C0  5C01               	subwf	___lomod@dividend,w,c
  6269  0016C2  500A               	movf	___lomod@divisor+1,w,c
  6270  0016C4  5802               	subwfb	___lomod@dividend+1,w,c
  6271  0016C6  500B               	movf	___lomod@divisor+2,w,c
  6272  0016C8  5803               	subwfb	___lomod@dividend+2,w,c
  6273  0016CA  500C               	movf	___lomod@divisor+3,w,c
  6274  0016CC  5804               	subwfb	___lomod@dividend+3,w,c
  6275  0016CE  500D               	movf	___lomod@divisor+4,w,c
  6276  0016D0  5805               	subwfb	___lomod@dividend+4,w,c
  6277  0016D2  500E               	movf	___lomod@divisor+5,w,c
  6278  0016D4  5806               	subwfb	___lomod@dividend+5,w,c
  6279  0016D6  500F               	movf	___lomod@divisor+6,w,c
  6280  0016D8  5807               	subwfb	___lomod@dividend+6,w,c
  6281  0016DA  5010               	movf	___lomod@divisor+7,w,c
  6282  0016DC  5808               	subwfb	___lomod@dividend+7,w,c
  6283  0016DE  A0D8               	btfss	status,0,c
  6284  0016E0  D010               	goto	l2435
  6285  0016E2  5009               	movf	___lomod@divisor,w,c
  6286  0016E4  5E01               	subwf	___lomod@dividend,f,c
  6287  0016E6  500A               	movf	___lomod@divisor+1,w,c
  6288  0016E8  5A02               	subwfb	___lomod@dividend+1,f,c
  6289  0016EA  500B               	movf	___lomod@divisor+2,w,c
  6290  0016EC  5A03               	subwfb	___lomod@dividend+2,f,c
  6291  0016EE  500C               	movf	___lomod@divisor+3,w,c
  6292  0016F0  5A04               	subwfb	___lomod@dividend+3,f,c
  6293  0016F2  500D               	movf	___lomod@divisor+4,w,c
  6294  0016F4  5A05               	subwfb	___lomod@dividend+4,f,c
  6295  0016F6  500E               	movf	___lomod@divisor+5,w,c
  6296  0016F8  5A06               	subwfb	___lomod@dividend+5,f,c
  6297  0016FA  500F               	movf	___lomod@divisor+6,w,c
  6298  0016FC  5A07               	subwfb	___lomod@dividend+6,f,c
  6299  0016FE  5010               	movf	___lomod@divisor+7,w,c
  6300  001700  5A08               	subwfb	___lomod@dividend+7,f,c
  6301  001702                     l2435:
  6302  001702  90D8               	bcf	status,0,c
  6303  001704  3210               	rrcf	___lomod@divisor+7,f,c
  6304  001706  320F               	rrcf	___lomod@divisor+6,f,c
  6305  001708  320E               	rrcf	___lomod@divisor+5,f,c
  6306  00170A  320D               	rrcf	___lomod@divisor+4,f,c
  6307  00170C  320C               	rrcf	___lomod@divisor+3,f,c
  6308  00170E  320B               	rrcf	___lomod@divisor+2,f,c
  6309  001710  320A               	rrcf	___lomod@divisor+1,f,c
  6310  001712  3209               	rrcf	___lomod@divisor,f,c
  6311  001714  2E11               	decfsz	___lomod@counter,f,c
  6312  001716  D7D3               	goto	u2130
  6313  001718                     l699:
  6314  001718  C001  F001         	movff	___lomod@dividend,?___lomod
  6315  00171C  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  6316  001720  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  6317  001724  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  6318  001728  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  6319  00172C  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  6320  001730  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  6321  001734  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  6322  001738  0012               	return		;funcret
  6323  00173A                     __end_of___lomod:
  6324                           	opt callstack 0
  6325                           
  6326 ;; *************** function ___lodiv *****************
  6327 ;; Defined at:
  6328 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  6329 ;; Parameters:    Size  Location     Type
  6330 ;;  dividend        8    0[COMRAM] unsigned long long 
  6331 ;;  divisor         8    8[COMRAM] unsigned long long 
  6332 ;; Auto vars:     Size  Location     Type
  6333 ;;  quotient        8   16[COMRAM] unsigned long long 
  6334 ;;  counter         1   24[COMRAM] unsigned char 
  6335 ;; Return value:  Size  Location     Type
  6336 ;;                  8    0[COMRAM] unsigned long long 
  6337 ;; Registers used:
  6338 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6339 ;; Tracked objects:
  6340 ;;		On entry : 0/0
  6341 ;;		On exit  : 0/0
  6342 ;;		Unchanged: 0/0
  6343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6344 ;;      Params:        16       0       0       0
  6345 ;;      Locals:         9       0       0       0
  6346 ;;      Temps:          0       0       0       0
  6347 ;;      Totals:        25       0       0       0
  6348 ;;Total ram usage:       25 bytes
  6349 ;; Hardware stack levels used:    1
  6350 ;; This function calls:
  6351 ;;		Nothing
  6352 ;; This function is called by:
  6353 ;;		_utoa
  6354 ;; This function uses a non-reentrant model
  6355 ;;
  6356                           
  6357                           	psect	text22
  6358  001980                     __ptext22:
  6359                           	opt callstack 0
  6360  001980                     ___lodiv:
  6361                           	opt callstack 26
  6362                           
  6363                           ;incstack = 0
  6364  001980  EE20  F011         	lfsr	2,___lodiv@quotient
  6365  001984  0E07               	movlw	7
  6366  001986                     u2081:
  6367  001986  6ADE               	clrf	postinc2,c
  6368  001988  06E8               	decf	wreg,f,c
  6369  00198A  E2FD               	bc	u2081
  6370  00198C  5009               	movf	___lodiv@divisor,w,c
  6371  00198E  100A               	iorwf	___lodiv@divisor+1,w,c
  6372  001990  100B               	iorwf	___lodiv@divisor+2,w,c
  6373  001992  100C               	iorwf	___lodiv@divisor+3,w,c
  6374  001994  100D               	iorwf	___lodiv@divisor+4,w,c
  6375  001996  100E               	iorwf	___lodiv@divisor+5,w,c
  6376  001998  100F               	iorwf	___lodiv@divisor+6,w,c
  6377  00199A  1010               	iorwf	___lodiv@divisor+7,w,c
  6378  00199C  B4D8               	btfsc	status,2,c
  6379  00199E  D046               	goto	l689
  6380  0019A0  0E01               	movlw	1
  6381  0019A2  6E19               	movwf	___lodiv@counter,c
  6382  0019A4  D00A               	goto	l2409
  6383  0019A6                     l2407:
  6384  0019A6  90D8               	bcf	status,0,c
  6385  0019A8  3609               	rlcf	___lodiv@divisor,f,c
  6386  0019AA  360A               	rlcf	___lodiv@divisor+1,f,c
  6387  0019AC  360B               	rlcf	___lodiv@divisor+2,f,c
  6388  0019AE  360C               	rlcf	___lodiv@divisor+3,f,c
  6389  0019B0  360D               	rlcf	___lodiv@divisor+4,f,c
  6390  0019B2  360E               	rlcf	___lodiv@divisor+5,f,c
  6391  0019B4  360F               	rlcf	___lodiv@divisor+6,f,c
  6392  0019B6  3610               	rlcf	___lodiv@divisor+7,f,c
  6393  0019B8  2A19               	incf	___lodiv@counter,f,c
  6394  0019BA                     l2409:
  6395  0019BA  AE10               	btfss	___lodiv@divisor+7,7,c
  6396  0019BC  D7F4               	goto	l2407
  6397  0019BE                     u2100:
  6398  0019BE  90D8               	bcf	status,0,c
  6399  0019C0  3611               	rlcf	___lodiv@quotient,f,c
  6400  0019C2  3612               	rlcf	___lodiv@quotient+1,f,c
  6401  0019C4  3613               	rlcf	___lodiv@quotient+2,f,c
  6402  0019C6  3614               	rlcf	___lodiv@quotient+3,f,c
  6403  0019C8  3615               	rlcf	___lodiv@quotient+4,f,c
  6404  0019CA  3616               	rlcf	___lodiv@quotient+5,f,c
  6405  0019CC  3617               	rlcf	___lodiv@quotient+6,f,c
  6406  0019CE  3618               	rlcf	___lodiv@quotient+7,f,c
  6407  0019D0  5009               	movf	___lodiv@divisor,w,c
  6408  0019D2  5C01               	subwf	___lodiv@dividend,w,c
  6409  0019D4  500A               	movf	___lodiv@divisor+1,w,c
  6410  0019D6  5802               	subwfb	___lodiv@dividend+1,w,c
  6411  0019D8  500B               	movf	___lodiv@divisor+2,w,c
  6412  0019DA  5803               	subwfb	___lodiv@dividend+2,w,c
  6413  0019DC  500C               	movf	___lodiv@divisor+3,w,c
  6414  0019DE  5804               	subwfb	___lodiv@dividend+3,w,c
  6415  0019E0  500D               	movf	___lodiv@divisor+4,w,c
  6416  0019E2  5805               	subwfb	___lodiv@dividend+4,w,c
  6417  0019E4  500E               	movf	___lodiv@divisor+5,w,c
  6418  0019E6  5806               	subwfb	___lodiv@dividend+5,w,c
  6419  0019E8  500F               	movf	___lodiv@divisor+6,w,c
  6420  0019EA  5807               	subwfb	___lodiv@dividend+6,w,c
  6421  0019EC  5010               	movf	___lodiv@divisor+7,w,c
  6422  0019EE  5808               	subwfb	___lodiv@dividend+7,w,c
  6423  0019F0  A0D8               	btfss	status,0,c
  6424  0019F2  D011               	goto	l2419
  6425  0019F4  5009               	movf	___lodiv@divisor,w,c
  6426  0019F6  5E01               	subwf	___lodiv@dividend,f,c
  6427  0019F8  500A               	movf	___lodiv@divisor+1,w,c
  6428  0019FA  5A02               	subwfb	___lodiv@dividend+1,f,c
  6429  0019FC  500B               	movf	___lodiv@divisor+2,w,c
  6430  0019FE  5A03               	subwfb	___lodiv@dividend+2,f,c
  6431  001A00  500C               	movf	___lodiv@divisor+3,w,c
  6432  001A02  5A04               	subwfb	___lodiv@dividend+3,f,c
  6433  001A04  500D               	movf	___lodiv@divisor+4,w,c
  6434  001A06  5A05               	subwfb	___lodiv@dividend+4,f,c
  6435  001A08  500E               	movf	___lodiv@divisor+5,w,c
  6436  001A0A  5A06               	subwfb	___lodiv@dividend+5,f,c
  6437  001A0C  500F               	movf	___lodiv@divisor+6,w,c
  6438  001A0E  5A07               	subwfb	___lodiv@dividend+6,f,c
  6439  001A10  5010               	movf	___lodiv@divisor+7,w,c
  6440  001A12  5A08               	subwfb	___lodiv@dividend+7,f,c
  6441  001A14  8011               	bsf	___lodiv@quotient,0,c
  6442  001A16                     l2419:
  6443  001A16  90D8               	bcf	status,0,c
  6444  001A18  3210               	rrcf	___lodiv@divisor+7,f,c
  6445  001A1A  320F               	rrcf	___lodiv@divisor+6,f,c
  6446  001A1C  320E               	rrcf	___lodiv@divisor+5,f,c
  6447  001A1E  320D               	rrcf	___lodiv@divisor+4,f,c
  6448  001A20  320C               	rrcf	___lodiv@divisor+3,f,c
  6449  001A22  320B               	rrcf	___lodiv@divisor+2,f,c
  6450  001A24  320A               	rrcf	___lodiv@divisor+1,f,c
  6451  001A26  3209               	rrcf	___lodiv@divisor,f,c
  6452  001A28  2E19               	decfsz	___lodiv@counter,f,c
  6453  001A2A  D7C9               	goto	u2100
  6454  001A2C                     l689:
  6455  001A2C  C011  F001         	movff	___lodiv@quotient,?___lodiv
  6456  001A30  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  6457  001A34  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  6458  001A38  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  6459  001A3C  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  6460  001A40  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  6461  001A44  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  6462  001A48  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  6463  001A4C  0012               	return		;funcret
  6464  001A4E                     __end_of___lodiv:
  6465                           	opt callstack 0
  6466                           
  6467 ;; *************** function _dtoa *****************
  6468 ;; Defined at:
  6469 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6472 ;;		 -> NULL(0), 
  6473 ;;  d               8   29[COMRAM] long long 
  6474 ;; Auto vars:     Size  Location     Type
  6475 ;;  n               8   53[COMRAM] long long 
  6476 ;;  i               2   61[COMRAM] int 
  6477 ;;  s               2   51[COMRAM] int 
  6478 ;;  w               2   49[COMRAM] int 
  6479 ;;  p               2   47[COMRAM] int 
  6480 ;; Return value:  Size  Location     Type
  6481 ;;                  2   27[COMRAM] int 
  6482 ;; Registers used:
  6483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6484 ;; Tracked objects:
  6485 ;;		On entry : 0/0
  6486 ;;		On exit  : 0/0
  6487 ;;		Unchanged: 0/0
  6488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6489 ;;      Params:        10       0       0       0
  6490 ;;      Locals:        18       0       0       0
  6491 ;;      Temps:          8       0       0       0
  6492 ;;      Totals:        36       0       0       0
  6493 ;;Total ram usage:       36 bytes
  6494 ;; Hardware stack levels used:    1
  6495 ;; Hardware stack levels required when called:    4
  6496 ;; This function calls:
  6497 ;;		___aodiv
  6498 ;;		___aomod
  6499 ;;		_abs
  6500 ;;		_pad
  6501 ;; This function is called by:
  6502 ;;		_vfpfcnvrt
  6503 ;; This function uses a non-reentrant model
  6504 ;;
  6505                           
  6506                           	psect	text23
  6507  00233A                     __ptext23:
  6508                           	opt callstack 0
  6509  00233A                     _dtoa:
  6510                           	opt callstack 23
  6511                           
  6512                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  6513                           
  6514                           ;incstack = 0
  6515  00233A  C01E  F036         	movff	dtoa@d,dtoa@n
  6516  00233E  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  6517  002342  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  6518  002346  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  6519  00234A  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  6520  00234E  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  6521  002352  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  6522  002356  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  6523                           
  6524                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  6525  00235A  AE3D               	btfss	dtoa@n+7,7,c
  6526  00235C  D002               	goto	u2150
  6527  00235E  0E01               	movlw	1
  6528  002360  D001               	goto	u2160
  6529  002362                     u2150:
  6530  002362  0E00               	movlw	0
  6531  002364                     u2160:
  6532  002364  6E34               	movwf	dtoa@s,c
  6533  002366  6A35               	clrf	dtoa@s+1,c
  6534                           
  6535                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  6536  002368  5034               	movf	dtoa@s,w,c
  6537  00236A  1035               	iorwf	dtoa@s+1,w,c
  6538  00236C  B4D8               	btfsc	status,2,c
  6539  00236E  D010               	goto	l2445
  6540                           
  6541                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  6542  002370  1E3D               	comf	dtoa@n+7,f,c
  6543  002372  1E3C               	comf	dtoa@n+6,f,c
  6544  002374  1E3B               	comf	dtoa@n+5,f,c
  6545  002376  1E3A               	comf	dtoa@n+4,f,c
  6546  002378  1E39               	comf	dtoa@n+3,f,c
  6547  00237A  1E38               	comf	dtoa@n+2,f,c
  6548  00237C  1E37               	comf	dtoa@n+1,f,c
  6549  00237E  6C36               	negf	dtoa@n,c
  6550  002380  0E00               	movlw	0
  6551  002382  2237               	addwfc	dtoa@n+1,f,c
  6552  002384  2238               	addwfc	dtoa@n+2,f,c
  6553  002386  2239               	addwfc	dtoa@n+3,f,c
  6554  002388  223A               	addwfc	dtoa@n+4,f,c
  6555  00238A  223B               	addwfc	dtoa@n+5,f,c
  6556  00238C  223C               	addwfc	dtoa@n+6,f,c
  6557  00238E  223D               	addwfc	dtoa@n+7,f,c
  6558  002390                     l2445:
  6559                           
  6560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  6561  002390  0100               	movlb	0	; () banked
  6562  002392  AFB1               	btfss	(_prec+1)& (0+255),7,b
  6563                           
  6564                           ; BSR set to: 0
  6565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  6566  002394  93B2               	bcf	_flags& (0+255),1,b
  6567                           
  6568                           ; BSR set to: 0
  6569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  6570  002396  BFB1               	btfsc	(_prec+1)& (0+255),7,b
  6571  002398  D005               	goto	u2190
  6572  00239A  51B1               	movf	(_prec+1)& (0+255),w,b
  6573  00239C  E108               	bnz	l198
  6574  00239E  05B0               	decf	_prec& (0+255),w,b
  6575  0023A0  B0D8               	btfsc	status,0,c
  6576  0023A2  D005               	goto	l198
  6577  0023A4                     u2190:
  6578                           
  6579                           ; BSR set to: 0
  6580  0023A4  0E00               	movlw	0
  6581  0023A6  6E31               	movwf	dtoa@p+1,c
  6582  0023A8  0E01               	movlw	1
  6583  0023AA  6E30               	movwf	dtoa@p,c
  6584  0023AC  D004               	goto	l200
  6585  0023AE                     l198:
  6586                           
  6587                           ; BSR set to: 0
  6588  0023AE  C0B0  F030         	movff	_prec,dtoa@p
  6589  0023B2  C0B1  F031         	movff	_prec+1,dtoa@p+1
  6590  0023B6                     l200:
  6591                           
  6592                           ; BSR set to: 0
  6593                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  6594  0023B6  C0AE  F032         	movff	_width,dtoa@w
  6595  0023BA  C0AF  F033         	movff	_width+1,dtoa@w+1
  6596                           
  6597                           ; BSR set to: 0
  6598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  6599  0023BE  5034               	movf	dtoa@s,w,c
  6600  0023C0  1035               	iorwf	dtoa@s+1,w,c
  6601  0023C2  A4D8               	btfss	status,2,c
  6602  0023C4  D002               	goto	u2210
  6603                           
  6604                           ; BSR set to: 0
  6605  0023C6  A5B2               	btfss	_flags& (0+255),2,b
  6606  0023C8  D003               	goto	l2459
  6607  0023CA                     u2210:
  6608                           
  6609                           ; BSR set to: 0
  6610                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  6611  0023CA  0632               	decf	dtoa@w,f,c
  6612  0023CC  A0D8               	btfss	status,0,c
  6613  0023CE  0633               	decf	dtoa@w+1,f,c
  6614  0023D0                     l2459:
  6615                           
  6616                           ; BSR set to: 0
  6617                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  6618  0023D0  0E00               	movlw	0
  6619  0023D2  6E3F               	movwf	dtoa@i+1,c
  6620  0023D4  0E1F               	movlw	31
  6621  0023D6  6E3E               	movwf	dtoa@i,c
  6622                           
  6623                           ; BSR set to: 0
  6624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  6625  0023D8  0E00               	movlw	0
  6626  0023DA  0101               	movlb	1	; () banked
  6627  0023DC  6F45               	movwf	(_dbuf+31)& (0+255),b
  6628                           
  6629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6630  0023DE  D07C               	goto	l2473
  6631  0023E0                     l2463:
  6632                           
  6633                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  6634  0023E0  063E               	decf	dtoa@i,f,c
  6635  0023E2  A0D8               	btfss	status,0,c
  6636  0023E4  063F               	decf	dtoa@i+1,f,c
  6637                           
  6638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  6639  0023E6  0E26               	movlw	low _dbuf
  6640  0023E8  243E               	addwf	dtoa@i,w,c
  6641  0023EA  6ED9               	movwf	fsr2l,c
  6642  0023EC  0E01               	movlw	high _dbuf
  6643  0023EE  203F               	addwfc	dtoa@i+1,w,c
  6644  0023F0  6EDA               	movwf	fsr2h,c
  6645  0023F2  C036  F001         	movff	dtoa@n,___aomod@dividend
  6646  0023F6  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6647  0023FA  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6648  0023FE  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6649  002402  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6650  002406  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6651  00240A  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6652  00240E  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6653  002412  0E0A               	movlw	10
  6654  002414  6E09               	movwf	___aomod@divisor,c
  6655  002416  0E00               	movlw	0
  6656  002418  6E0A               	movwf	___aomod@divisor+1,c
  6657  00241A  0E00               	movlw	0
  6658  00241C  6E0B               	movwf	___aomod@divisor+2,c
  6659  00241E  0E00               	movlw	0
  6660  002420  6E0C               	movwf	___aomod@divisor+3,c
  6661  002422  0E00               	movlw	0
  6662  002424  6E0D               	movwf	___aomod@divisor+4,c
  6663  002426  0E00               	movlw	0
  6664  002428  6E0E               	movwf	___aomod@divisor+5,c
  6665  00242A  0E00               	movlw	0
  6666  00242C  6E0F               	movwf	___aomod@divisor+6,c
  6667  00242E  0E00               	movlw	0
  6668  002430  6E10               	movwf	___aomod@divisor+7,c
  6669  002432  EC27  F00D         	call	___aomod	;wreg free
  6670  002436  C001  F026         	movff	?___aomod,??_dtoa
  6671  00243A  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6672  00243E  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6673  002442  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6674  002446  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6675  00244A  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6676  00244E  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6677  002452  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6678  002456  C026  F013         	movff	??_dtoa,abs@a
  6679  00245A  C028  F014         	movff	??_dtoa+2,abs@a+1
  6680  00245E  ECC1  F008         	call	_abs	;wreg free
  6681  002462  5013               	movf	?_abs,w,c
  6682  002464  0F30               	addlw	48
  6683  002466  6EDF               	movwf	indf2,c
  6684                           
  6685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  6686  002468  0630               	decf	dtoa@p,f,c
  6687  00246A  A0D8               	btfss	status,0,c
  6688  00246C  0631               	decf	dtoa@p+1,f,c
  6689                           
  6690                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  6691  00246E  0632               	decf	dtoa@w,f,c
  6692  002470  A0D8               	btfss	status,0,c
  6693  002472  0633               	decf	dtoa@w+1,f,c
  6694                           
  6695                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  6696  002474  C036  F001         	movff	dtoa@n,___aodiv@dividend
  6697  002478  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6698  00247C  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6699  002480  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6700  002484  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6701  002488  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6702  00248C  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6703  002490  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6704  002494  0E0A               	movlw	10
  6705  002496  6E09               	movwf	___aodiv@divisor,c
  6706  002498  0E00               	movlw	0
  6707  00249A  6E0A               	movwf	___aodiv@divisor+1,c
  6708  00249C  0E00               	movlw	0
  6709  00249E  6E0B               	movwf	___aodiv@divisor+2,c
  6710  0024A0  0E00               	movlw	0
  6711  0024A2  6E0C               	movwf	___aodiv@divisor+3,c
  6712  0024A4  0E00               	movlw	0
  6713  0024A6  6E0D               	movwf	___aodiv@divisor+4,c
  6714  0024A8  0E00               	movlw	0
  6715  0024AA  6E0E               	movwf	___aodiv@divisor+5,c
  6716  0024AC  0E00               	movlw	0
  6717  0024AE  6E0F               	movwf	___aodiv@divisor+6,c
  6718  0024B0  0E00               	movlw	0
  6719  0024B2  6E10               	movwf	___aodiv@divisor+7,c
  6720  0024B4  EC59  F00E         	call	___aodiv	;wreg free
  6721  0024B8  C001  F036         	movff	?___aodiv,dtoa@n
  6722  0024BC  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  6723  0024C0  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  6724  0024C4  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  6725  0024C8  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  6726  0024CC  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  6727  0024D0  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  6728  0024D4  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  6729  0024D8                     l2473:
  6730                           
  6731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6732  0024D8  BE3F               	btfsc	dtoa@i+1,7,c
  6733  0024DA  D020               	goto	u2260
  6734  0024DC  503F               	movf	dtoa@i+1,w,c
  6735  0024DE  E103               	bnz	u2220
  6736  0024E0  043E               	decf	dtoa@i,w,c
  6737  0024E2  A0D8               	btfss	status,0,c
  6738  0024E4  D01B               	goto	u2260
  6739  0024E6                     u2220:
  6740  0024E6  5036               	movf	dtoa@n,w,c
  6741  0024E8  1037               	iorwf	dtoa@n+1,w,c
  6742  0024EA  1038               	iorwf	dtoa@n+2,w,c
  6743  0024EC  1039               	iorwf	dtoa@n+3,w,c
  6744  0024EE  103A               	iorwf	dtoa@n+4,w,c
  6745  0024F0  103B               	iorwf	dtoa@n+5,w,c
  6746  0024F2  103C               	iorwf	dtoa@n+6,w,c
  6747  0024F4  103D               	iorwf	dtoa@n+7,w,c
  6748  0024F6  A4D8               	btfss	status,2,c
  6749  0024F8  D773               	goto	l2463
  6750  0024FA  BE31               	btfsc	dtoa@p+1,7,c
  6751  0024FC  D005               	goto	u2240
  6752  0024FE  5031               	movf	dtoa@p+1,w,c
  6753  002500  E102               	bnz	u2241
  6754  002502  0430               	decf	dtoa@p,w,c
  6755  002504  B0D8               	btfsc	status,0,c
  6756  002506                     u2241:
  6757  002506  D76C               	goto	l2463
  6758  002508                     u2240:
  6759  002508  BE33               	btfsc	dtoa@w+1,7,c
  6760  00250A  D008               	goto	u2260
  6761  00250C  5033               	movf	dtoa@w+1,w,c
  6762  00250E  E103               	bnz	u2250
  6763  002510  0432               	decf	dtoa@w,w,c
  6764  002512  A0D8               	btfss	status,0,c
  6765  002514  D003               	goto	u2260
  6766  002516                     u2250:
  6767  002516  0100               	movlb	0	; () banked
  6768  002518  B3B2               	btfsc	_flags& (0+255),1,b
  6769  00251A  D762               	goto	l2463
  6770  00251C                     u2260:
  6771                           
  6772                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  6773  00251C  5034               	movf	dtoa@s,w,c
  6774  00251E  1035               	iorwf	dtoa@s+1,w,c
  6775  002520  A4D8               	btfss	status,2,c
  6776  002522  D003               	goto	u2280
  6777  002524  0100               	movlb	0	; () banked
  6778  002526  A5B2               	btfss	_flags& (0+255),2,b
  6779  002528  D017               	goto	l2497
  6780  00252A                     u2280:
  6781                           
  6782                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  6783  00252A  063E               	decf	dtoa@i,f,c
  6784  00252C  A0D8               	btfss	status,0,c
  6785  00252E  063F               	decf	dtoa@i+1,f,c
  6786                           
  6787                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  6788  002530  5034               	movf	dtoa@s,w,c
  6789  002532  1035               	iorwf	dtoa@s+1,w,c
  6790  002534  A4D8               	btfss	status,2,c
  6791  002536  D004               	goto	l2493
  6792  002538  0E00               	movlw	0
  6793  00253A  6E2F               	movwf	_dtoa$792+1,c
  6794  00253C  0E2B               	movlw	43
  6795  00253E  D003               	goto	L1
  6796  002540                     l2493:
  6797  002540  0E00               	movlw	0
  6798  002542  6E2F               	movwf	_dtoa$792+1,c
  6799  002544  0E2D               	movlw	45
  6800  002546                     L1:
  6801  002546  6E2E               	movwf	_dtoa$792,c
  6802  002548  0E26               	movlw	low _dbuf
  6803  00254A  243E               	addwf	dtoa@i,w,c
  6804  00254C  6ED9               	movwf	fsr2l,c
  6805  00254E  0E01               	movlw	high _dbuf
  6806  002550  203F               	addwfc	dtoa@i+1,w,c
  6807  002552  6EDA               	movwf	fsr2h,c
  6808  002554  C02E  FFDF         	movff	_dtoa$792,indf2
  6809  002558                     l2497:
  6810                           
  6811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  6812  002558  C01C  F011         	movff	dtoa@fp,pad@fp
  6813  00255C  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6814  002560  0E26               	movlw	low _dbuf
  6815  002562  243E               	addwf	dtoa@i,w,c
  6816  002564  6E13               	movwf	pad@buf,c
  6817  002566  0E01               	movlw	high _dbuf
  6818  002568  203F               	addwfc	dtoa@i+1,w,c
  6819  00256A  6E14               	movwf	pad@buf+1,c
  6820  00256C  C032  F015         	movff	dtoa@w,pad@p
  6821  002570  C033  F016         	movff	dtoa@w+1,pad@p+1
  6822  002574  ECF9  F00A         	call	_pad	;wreg free
  6823  002578  C011  F01C         	movff	?_pad,?_dtoa
  6824  00257C  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6825  002580  0012               	return		;funcret
  6826  002582                     __end_of_dtoa:
  6827                           	opt callstack 0
  6828                           
  6829 ;; *************** function _pad *****************
  6830 ;; Defined at:
  6831 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6832 ;; Parameters:    Size  Location     Type
  6833 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6834 ;;		 -> NULL(0), 
  6835 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6836 ;;		 -> dbuf(32), 
  6837 ;;  p               2   20[COMRAM] int 
  6838 ;; Auto vars:     Size  Location     Type
  6839 ;;  w               2   25[COMRAM] int 
  6840 ;;  i               2   23[COMRAM] int 
  6841 ;; Return value:  Size  Location     Type
  6842 ;;                  2   16[COMRAM] int 
  6843 ;; Registers used:
  6844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6845 ;; Tracked objects:
  6846 ;;		On entry : 0/0
  6847 ;;		On exit  : 0/0
  6848 ;;		Unchanged: 0/0
  6849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6850 ;;      Params:         6       0       0       0
  6851 ;;      Locals:         4       0       0       0
  6852 ;;      Temps:          1       0       0       0
  6853 ;;      Totals:        11       0       0       0
  6854 ;;Total ram usage:       11 bytes
  6855 ;; Hardware stack levels used:    1
  6856 ;; Hardware stack levels required when called:    3
  6857 ;; This function calls:
  6858 ;;		_fputc
  6859 ;;		_fputs
  6860 ;;		_strlen
  6861 ;; This function is called by:
  6862 ;;		_dtoa
  6863 ;;		_utoa
  6864 ;; This function uses a non-reentrant model
  6865 ;;
  6866                           
  6867                           	psect	text24
  6868  0015F2                     __ptext24:
  6869                           	opt callstack 0
  6870  0015F2                     _pad:
  6871                           	opt callstack 23
  6872                           
  6873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6874                           
  6875                           ;incstack = 0
  6876  0015F2  0100               	movlb	0	; () banked
  6877  0015F4  A1B2               	btfss	_flags& (0+255),0,b
  6878  0015F6  D00A               	goto	l2299
  6879                           
  6880                           ; BSR set to: 0
  6881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6882  0015F8  C013  F00A         	movff	pad@buf,fputs@s
  6883  0015FC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6884  001600  C011  F00C         	movff	pad@fp,fputs@fp
  6885  001604  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6886  001608  ECF6  F008         	call	_fputs	;wreg free
  6887  00160C                     l2299:
  6888                           
  6889                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6890  00160C  BE16               	btfsc	pad@p+1,7,c
  6891  00160E  D005               	goto	l2303
  6892  001610  C015  F01A         	movff	pad@p,pad@w
  6893  001614  C016  F01B         	movff	pad@p+1,pad@w+1
  6894  001618  D004               	goto	l187
  6895  00161A                     l2303:
  6896  00161A  0E00               	movlw	0
  6897  00161C  6E1B               	movwf	pad@w+1,c
  6898  00161E  0E00               	movlw	0
  6899  001620  6E1A               	movwf	pad@w,c
  6900  001622                     l187:
  6901                           
  6902                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6903  001622  0E00               	movlw	0
  6904  001624  6E19               	movwf	pad@i+1,c
  6905  001626  0E00               	movlw	0
  6906  001628  6E18               	movwf	pad@i,c
  6907                           
  6908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6909  00162A  D00C               	goto	l2309
  6910  00162C                     l2305:
  6911                           
  6912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6913  00162C  0E00               	movlw	0
  6914  00162E  6E02               	movwf	fputc@c+1,c
  6915  001630  0E20               	movlw	32
  6916  001632  6E01               	movwf	fputc@c,c
  6917  001634  C011  F003         	movff	pad@fp,fputc@fp
  6918  001638  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6919  00163C  EC09  F00A         	call	_fputc	;wreg free
  6920                           
  6921                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6922  001640  4A18               	infsnz	pad@i,f,c
  6923  001642  2A19               	incf	pad@i+1,f,c
  6924  001644                     l2309:
  6925                           
  6926                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6927  001644  501A               	movf	pad@w,w,c
  6928  001646  5C18               	subwf	pad@i,w,c
  6929  001648  5019               	movf	pad@i+1,w,c
  6930  00164A  0A80               	xorlw	128
  6931  00164C  6E17               	movwf	??_pad& (0+255),c
  6932  00164E  501B               	movf	pad@w+1,w,c
  6933  001650  0A80               	xorlw	128
  6934  001652  5817               	subwfb	??_pad& (0+255),w,c
  6935  001654  A0D8               	btfss	status,0,c
  6936  001656  D7EA               	goto	l2305
  6937                           
  6938                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6939  001658  0100               	movlb	0	; () banked
  6940  00165A  B1B2               	btfsc	_flags& (0+255),0,b
  6941  00165C  D00A               	goto	l2313
  6942                           
  6943                           ; BSR set to: 0
  6944                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6945  00165E  C013  F00A         	movff	pad@buf,fputs@s
  6946  001662  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6947  001666  C011  F00C         	movff	pad@fp,fputs@fp
  6948  00166A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6949  00166E  ECF6  F008         	call	_fputs	;wreg free
  6950  001672                     l2313:
  6951                           
  6952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6953  001672  C013  F001         	movff	pad@buf,strlen@s
  6954  001676  C014  F002         	movff	pad@buf+1,strlen@s+1
  6955  00167A  EC95  F008         	call	_strlen	;wreg free
  6956  00167E  501A               	movf	pad@w,w,c
  6957  001680  2401               	addwf	?_strlen,w,c
  6958  001682  6E11               	movwf	?_pad,c
  6959  001684  501B               	movf	pad@w+1,w,c
  6960  001686  2002               	addwfc	?_strlen+1,w,c
  6961  001688  6E12               	movwf	?_pad+1,c
  6962  00168A  0012               	return		;funcret
  6963  00168C                     __end_of_pad:
  6964                           	opt callstack 0
  6965                           
  6966 ;; *************** function _strlen *****************
  6967 ;; Defined at:
  6968 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6971 ;;		 -> dbuf(32), 
  6972 ;; Auto vars:     Size  Location     Type
  6973 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6974 ;;		 -> dbuf(32), 
  6975 ;; Return value:  Size  Location     Type
  6976 ;;                  2    0[COMRAM] unsigned int 
  6977 ;; Registers used:
  6978 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6979 ;; Tracked objects:
  6980 ;;		On entry : 0/0
  6981 ;;		On exit  : 0/0
  6982 ;;		Unchanged: 0/0
  6983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6984 ;;      Params:         2       0       0       0
  6985 ;;      Locals:         2       0       0       0
  6986 ;;      Temps:          0       0       0       0
  6987 ;;      Totals:         4       0       0       0
  6988 ;;Total ram usage:        4 bytes
  6989 ;; Hardware stack levels used:    1
  6990 ;; This function calls:
  6991 ;;		Nothing
  6992 ;; This function is called by:
  6993 ;;		_pad
  6994 ;; This function uses a non-reentrant model
  6995 ;;
  6996                           
  6997                           	psect	text25
  6998  00112A                     __ptext25:
  6999                           	opt callstack 0
  7000  00112A                     _strlen:
  7001                           	opt callstack 25
  7002                           
  7003                           ;incstack = 0
  7004  00112A  C001  F003         	movff	strlen@s,strlen@a
  7005  00112E  C002  F004         	movff	strlen@s+1,strlen@a+1
  7006  001132  D002               	goto	l2289
  7007  001134                     l2287:
  7008  001134  4A01               	infsnz	strlen@s,f,c
  7009  001136  2A02               	incf	strlen@s+1,f,c
  7010  001138                     l2289:
  7011  001138  C001  FFD9         	movff	strlen@s,fsr2l
  7012  00113C  C002  FFDA         	movff	strlen@s+1,fsr2h
  7013  001140  50DF               	movf	indf2,w,c
  7014  001142  A4D8               	btfss	status,2,c
  7015  001144  D7F7               	goto	l2287
  7016  001146  5003               	movf	strlen@a,w,c
  7017  001148  5C01               	subwf	strlen@s,w,c
  7018  00114A  6E01               	movwf	?_strlen,c
  7019  00114C  5004               	movf	strlen@a+1,w,c
  7020  00114E  5802               	subwfb	strlen@s+1,w,c
  7021  001150  6E02               	movwf	?_strlen+1,c
  7022  001152  0012               	return		;funcret
  7023  001154                     __end_of_strlen:
  7024                           	opt callstack 0
  7025                           
  7026 ;; *************** function _fputs *****************
  7027 ;; Defined at:
  7028 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  7029 ;; Parameters:    Size  Location     Type
  7030 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7031 ;;		 -> dbuf(32), 
  7032 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7033 ;;		 -> NULL(0), 
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;  i               2   14[COMRAM] int 
  7036 ;;  c               1   13[COMRAM] unsigned char 
  7037 ;; Return value:  Size  Location     Type
  7038 ;;                  2    9[COMRAM] int 
  7039 ;; Registers used:
  7040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7041 ;; Tracked objects:
  7042 ;;		On entry : 0/0
  7043 ;;		On exit  : 0/0
  7044 ;;		Unchanged: 0/0
  7045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7046 ;;      Params:         4       0       0       0
  7047 ;;      Locals:         3       0       0       0
  7048 ;;      Temps:          0       0       0       0
  7049 ;;      Totals:         7       0       0       0
  7050 ;;Total ram usage:        7 bytes
  7051 ;; Hardware stack levels used:    1
  7052 ;; Hardware stack levels required when called:    2
  7053 ;; This function calls:
  7054 ;;		_fputc
  7055 ;; This function is called by:
  7056 ;;		_pad
  7057 ;; This function uses a non-reentrant model
  7058 ;;
  7059                           
  7060                           	psect	text26
  7061  0011EC                     __ptext26:
  7062                           	opt callstack 0
  7063  0011EC                     _fputs:
  7064                           	opt callstack 23
  7065                           
  7066                           ;incstack = 0
  7067  0011EC  0E00               	movlw	0
  7068  0011EE  6E10               	movwf	fputs@i+1,c
  7069  0011F0  0E00               	movlw	0
  7070  0011F2  6E0F               	movwf	fputs@i,c
  7071  0011F4  D00B               	goto	l2283
  7072  0011F6                     l2279:
  7073  0011F6  C00E  F001         	movff	fputs@c,fputc@c
  7074  0011FA  6A02               	clrf	fputc@c+1,c
  7075  0011FC  C00C  F003         	movff	fputs@fp,fputc@fp
  7076  001200  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  7077  001204  EC09  F00A         	call	_fputc	;wreg free
  7078  001208  4A0F               	infsnz	fputs@i,f,c
  7079  00120A  2A10               	incf	fputs@i+1,f,c
  7080  00120C                     l2283:
  7081  00120C  500F               	movf	fputs@i,w,c
  7082  00120E  240A               	addwf	fputs@s,w,c
  7083  001210  6ED9               	movwf	fsr2l,c
  7084  001212  5010               	movf	fputs@i+1,w,c
  7085  001214  200B               	addwfc	fputs@s+1,w,c
  7086  001216  6EDA               	movwf	fsr2h,c
  7087  001218  50DF               	movf	indf2,w,c
  7088  00121A  6E0E               	movwf	fputs@c,c
  7089  00121C  500E               	movf	fputs@c,w,c
  7090  00121E  B4D8               	btfsc	status,2,c
  7091  001220  0012               	return	
  7092  001222  D7E9               	goto	l2279
  7093  001224                     __end_of_fputs:
  7094                           	opt callstack 0
  7095                           
  7096 ;; *************** function _fputc *****************
  7097 ;; Defined at:
  7098 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  7099 ;; Parameters:    Size  Location     Type
  7100 ;;  c               2    0[COMRAM] int 
  7101 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7102 ;;		 -> NULL(0), 
  7103 ;; Auto vars:     Size  Location     Type
  7104 ;;		None
  7105 ;; Return value:  Size  Location     Type
  7106 ;;                  2    0[COMRAM] int 
  7107 ;; Registers used:
  7108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7109 ;; Tracked objects:
  7110 ;;		On entry : 0/0
  7111 ;;		On exit  : 0/0
  7112 ;;		Unchanged: 0/0
  7113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7114 ;;      Params:         4       0       0       0
  7115 ;;      Locals:         0       0       0       0
  7116 ;;      Temps:          5       0       0       0
  7117 ;;      Totals:         9       0       0       0
  7118 ;;Total ram usage:        9 bytes
  7119 ;; Hardware stack levels used:    1
  7120 ;; Hardware stack levels required when called:    1
  7121 ;; This function calls:
  7122 ;;		_putch
  7123 ;; This function is called by:
  7124 ;;		_pad
  7125 ;;		_vfpfcnvrt
  7126 ;;		_fputs
  7127 ;; This function uses a non-reentrant model
  7128 ;;
  7129                           
  7130                           	psect	text27
  7131  001412                     __ptext27:
  7132                           	opt callstack 0
  7133  001412                     _fputc:
  7134                           	opt callstack 23
  7135                           
  7136                           ;incstack = 0
  7137  001412  5003               	movf	fputc@fp,w,c
  7138  001414  1004               	iorwf	fputc@fp+1,w,c
  7139  001416  B4D8               	btfsc	status,2,c
  7140  001418  D004               	goto	u1850
  7141  00141A  5003               	movf	fputc@fp,w,c
  7142  00141C  1004               	iorwf	fputc@fp+1,w,c
  7143  00141E  A4D8               	btfss	status,2,c
  7144  001420  D004               	goto	l2269
  7145  001422                     u1850:
  7146  001422  5001               	movf	fputc@c,w,c
  7147  001424  EC26  F008         	call	_putch
  7148  001428  0012               	return	
  7149  00142A                     l2269:
  7150  00142A  EE20 F004          	lfsr	2,4
  7151  00142E  5003               	movf	fputc@fp,w,c
  7152  001430  26D9               	addwf	fsr2l,f,c
  7153  001432  5004               	movf	fputc@fp+1,w,c
  7154  001434  22DA               	addwfc	fsr2h,f,c
  7155  001436  50DE               	movf	postinc2,w,c
  7156  001438  10DE               	iorwf	postinc2,w,c
  7157  00143A  B4D8               	btfsc	status,2,c
  7158  00143C  D016               	goto	u1870
  7159  00143E  EE20 F004          	lfsr	2,4
  7160  001442  5003               	movf	fputc@fp,w,c
  7161  001444  26D9               	addwf	fsr2l,f,c
  7162  001446  5004               	movf	fputc@fp+1,w,c
  7163  001448  22DA               	addwfc	fsr2h,f,c
  7164  00144A  EE10 F002          	lfsr	1,2
  7165  00144E  5003               	movf	fputc@fp,w,c
  7166  001450  26E1               	addwf	fsr1l,f,c
  7167  001452  5004               	movf	fputc@fp+1,w,c
  7168  001454  22E2               	addwfc	fsr1h,f,c
  7169  001456  50DE               	movf	postinc2,w,c
  7170  001458  5CE6               	subwf	postinc1,w,c
  7171  00145A  50E6               	movf	postinc1,w,c
  7172  00145C  0A80               	xorlw	128
  7173  00145E  6E09               	movwf	(??_fputc+4)& (0+255),c
  7174  001460  50DE               	movf	postinc2,w,c
  7175  001462  0A80               	xorlw	128
  7176  001464  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  7177  001466  B0D8               	btfsc	status,0,c
  7178  001468  0012               	return	
  7179  00146A                     u1870:
  7180  00146A  EE20 F002          	lfsr	2,2
  7181  00146E  5003               	movf	fputc@fp,w,c
  7182  001470  26D9               	addwf	fsr2l,f,c
  7183  001472  5004               	movf	fputc@fp+1,w,c
  7184  001474  22DA               	addwfc	fsr2h,f,c
  7185  001476  2ADE               	incf	postinc2,f,c
  7186  001478  0E00               	movlw	0
  7187  00147A  22DD               	addwfc	postdec2,f,c
  7188  00147C  0012               	return		;funcret
  7189  00147E                     __end_of_fputc:
  7190                           	opt callstack 0
  7191                           
  7192 ;; *************** function _putch *****************
  7193 ;; Defined at:
  7194 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  7195 ;; Parameters:    Size  Location     Type
  7196 ;;  c               1    wreg     unsigned char 
  7197 ;; Auto vars:     Size  Location     Type
  7198 ;;  c               1    0[COMRAM] unsigned char 
  7199 ;; Return value:  Size  Location     Type
  7200 ;;                  1    wreg      void 
  7201 ;; Registers used:
  7202 ;;		wreg
  7203 ;; Tracked objects:
  7204 ;;		On entry : 0/0
  7205 ;;		On exit  : 0/0
  7206 ;;		Unchanged: 0/0
  7207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7208 ;;      Params:         0       0       0       0
  7209 ;;      Locals:         0       0       0       0
  7210 ;;      Temps:          0       0       0       0
  7211 ;;      Totals:         0       0       0       0
  7212 ;;Total ram usage:        0 bytes
  7213 ;; Hardware stack levels used:    1
  7214 ;; This function calls:
  7215 ;;		Nothing
  7216 ;; This function is called by:
  7217 ;;		_fputc
  7218 ;; This function uses a non-reentrant model
  7219 ;;
  7220                           
  7221                           	psect	text28
  7222  00104C                     __ptext28:
  7223                           	opt callstack 0
  7224  00104C                     _putch:
  7225                           	opt callstack 23
  7226                           
  7227                           ;incstack = 0
  7228  00104C  0012               	return		;funcret
  7229  00104E                     __end_of_putch:
  7230                           	opt callstack 0
  7231                           
  7232 ;; *************** function _abs *****************
  7233 ;; Defined at:
  7234 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  7235 ;; Parameters:    Size  Location     Type
  7236 ;;  a               2   18[COMRAM] int 
  7237 ;; Auto vars:     Size  Location     Type
  7238 ;;		None
  7239 ;; Return value:  Size  Location     Type
  7240 ;;                  2   18[COMRAM] int 
  7241 ;; Registers used:
  7242 ;;		wreg, status,2, status,0
  7243 ;; Tracked objects:
  7244 ;;		On entry : 0/0
  7245 ;;		On exit  : 0/0
  7246 ;;		Unchanged: 0/0
  7247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7248 ;;      Params:         2       0       0       0
  7249 ;;      Locals:         0       0       0       0
  7250 ;;      Temps:          2       0       0       0
  7251 ;;      Totals:         4       0       0       0
  7252 ;;Total ram usage:        4 bytes
  7253 ;; Hardware stack levels used:    1
  7254 ;; This function calls:
  7255 ;;		Nothing
  7256 ;; This function is called by:
  7257 ;;		_dtoa
  7258 ;; This function uses a non-reentrant model
  7259 ;;
  7260                           
  7261                           	psect	text29
  7262  001182                     __ptext29:
  7263                           	opt callstack 0
  7264  001182                     _abs:
  7265                           	opt callstack 26
  7266                           
  7267                           ;incstack = 0
  7268  001182  BE14               	btfsc	abs@a+1,7,c
  7269  001184  D005               	goto	u1940
  7270  001186  5014               	movf	abs@a+1,w,c
  7271  001188  E110               	bnz	l926
  7272  00118A  0413               	decf	abs@a,w,c
  7273  00118C  B0D8               	btfsc	status,0,c
  7274  00118E  D00D               	goto	l926
  7275  001190                     u1940:
  7276  001190  C013  F015         	movff	abs@a,??_abs
  7277  001194  C014  F016         	movff	abs@a+1,??_abs+1
  7278  001198  1E15               	comf	??_abs,f,c
  7279  00119A  1E16               	comf	??_abs+1,f,c
  7280  00119C  4A15               	infsnz	??_abs,f,c
  7281  00119E  2A16               	incf	??_abs+1,f,c
  7282  0011A0  C015  F013         	movff	??_abs,?_abs
  7283  0011A4  C016  F014         	movff	??_abs+1,?_abs+1
  7284  0011A8  0012               	return	
  7285  0011AA                     l926:
  7286  0011AA  C013  F013         	movff	abs@a,?_abs
  7287  0011AE  C014  F014         	movff	abs@a+1,?_abs+1
  7288  0011B2  0012               	return		;funcret
  7289  0011B4                     __end_of_abs:
  7290                           	opt callstack 0
  7291                           
  7292 ;; *************** function ___aomod *****************
  7293 ;; Defined at:
  7294 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;  dividend        8    0[COMRAM] long long 
  7297 ;;  divisor         8    8[COMRAM] long long 
  7298 ;; Auto vars:     Size  Location     Type
  7299 ;;  sign            1   17[COMRAM] unsigned char 
  7300 ;;  counter         1   16[COMRAM] unsigned char 
  7301 ;; Return value:  Size  Location     Type
  7302 ;;                  8    0[COMRAM] long long 
  7303 ;; Registers used:
  7304 ;;		wreg, status,2, status,0
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/0
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7310 ;;      Params:        16       0       0       0
  7311 ;;      Locals:         2       0       0       0
  7312 ;;      Temps:          0       0       0       0
  7313 ;;      Totals:        18       0       0       0
  7314 ;;Total ram usage:       18 bytes
  7315 ;; Hardware stack levels used:    1
  7316 ;; This function calls:
  7317 ;;		Nothing
  7318 ;; This function is called by:
  7319 ;;		_dtoa
  7320 ;; This function uses a non-reentrant model
  7321 ;;
  7322                           
  7323                           	psect	text30
  7324  001A4E                     __ptext30:
  7325                           	opt callstack 0
  7326  001A4E                     ___aomod:
  7327                           	opt callstack 26
  7328                           
  7329                           ;incstack = 0
  7330  001A4E  0E00               	movlw	0
  7331  001A50  6E12               	movwf	___aomod@sign,c
  7332  001A52  AE08               	btfss	___aomod@dividend+7,7,c
  7333  001A54  D012               	goto	l2373
  7334  001A56  1E08               	comf	___aomod@dividend+7,f,c
  7335  001A58  1E07               	comf	___aomod@dividend+6,f,c
  7336  001A5A  1E06               	comf	___aomod@dividend+5,f,c
  7337  001A5C  1E05               	comf	___aomod@dividend+4,f,c
  7338  001A5E  1E04               	comf	___aomod@dividend+3,f,c
  7339  001A60  1E03               	comf	___aomod@dividend+2,f,c
  7340  001A62  1E02               	comf	___aomod@dividend+1,f,c
  7341  001A64  6C01               	negf	___aomod@dividend,c
  7342  001A66  0E00               	movlw	0
  7343  001A68  2202               	addwfc	___aomod@dividend+1,f,c
  7344  001A6A  2203               	addwfc	___aomod@dividend+2,f,c
  7345  001A6C  2204               	addwfc	___aomod@dividend+3,f,c
  7346  001A6E  2205               	addwfc	___aomod@dividend+4,f,c
  7347  001A70  2206               	addwfc	___aomod@dividend+5,f,c
  7348  001A72  2207               	addwfc	___aomod@dividend+6,f,c
  7349  001A74  2208               	addwfc	___aomod@dividend+7,f,c
  7350  001A76  0E01               	movlw	1
  7351  001A78  6E12               	movwf	___aomod@sign,c
  7352  001A7A                     l2373:
  7353  001A7A  AE10               	btfss	___aomod@divisor+7,7,c
  7354  001A7C  D010               	goto	l2377
  7355  001A7E  1E10               	comf	___aomod@divisor+7,f,c
  7356  001A80  1E0F               	comf	___aomod@divisor+6,f,c
  7357  001A82  1E0E               	comf	___aomod@divisor+5,f,c
  7358  001A84  1E0D               	comf	___aomod@divisor+4,f,c
  7359  001A86  1E0C               	comf	___aomod@divisor+3,f,c
  7360  001A88  1E0B               	comf	___aomod@divisor+2,f,c
  7361  001A8A  1E0A               	comf	___aomod@divisor+1,f,c
  7362  001A8C  6C09               	negf	___aomod@divisor,c
  7363  001A8E  0E00               	movlw	0
  7364  001A90  220A               	addwfc	___aomod@divisor+1,f,c
  7365  001A92  220B               	addwfc	___aomod@divisor+2,f,c
  7366  001A94  220C               	addwfc	___aomod@divisor+3,f,c
  7367  001A96  220D               	addwfc	___aomod@divisor+4,f,c
  7368  001A98  220E               	addwfc	___aomod@divisor+5,f,c
  7369  001A9A  220F               	addwfc	___aomod@divisor+6,f,c
  7370  001A9C  2210               	addwfc	___aomod@divisor+7,f,c
  7371  001A9E                     l2377:
  7372  001A9E  5009               	movf	___aomod@divisor,w,c
  7373  001AA0  100A               	iorwf	___aomod@divisor+1,w,c
  7374  001AA2  100B               	iorwf	___aomod@divisor+2,w,c
  7375  001AA4  100C               	iorwf	___aomod@divisor+3,w,c
  7376  001AA6  100D               	iorwf	___aomod@divisor+4,w,c
  7377  001AA8  100E               	iorwf	___aomod@divisor+5,w,c
  7378  001AAA  100F               	iorwf	___aomod@divisor+6,w,c
  7379  001AAC  1010               	iorwf	___aomod@divisor+7,w,c
  7380  001AAE  B4D8               	btfsc	status,2,c
  7381  001AB0  D03C               	goto	l2393
  7382  001AB2  0E01               	movlw	1
  7383  001AB4  6E11               	movwf	___aomod@counter,c
  7384  001AB6  D00A               	goto	l2383
  7385  001AB8                     l2381:
  7386  001AB8  90D8               	bcf	status,0,c
  7387  001ABA  3609               	rlcf	___aomod@divisor,f,c
  7388  001ABC  360A               	rlcf	___aomod@divisor+1,f,c
  7389  001ABE  360B               	rlcf	___aomod@divisor+2,f,c
  7390  001AC0  360C               	rlcf	___aomod@divisor+3,f,c
  7391  001AC2  360D               	rlcf	___aomod@divisor+4,f,c
  7392  001AC4  360E               	rlcf	___aomod@divisor+5,f,c
  7393  001AC6  360F               	rlcf	___aomod@divisor+6,f,c
  7394  001AC8  3610               	rlcf	___aomod@divisor+7,f,c
  7395  001ACA  2A11               	incf	___aomod@counter,f,c
  7396  001ACC                     l2383:
  7397  001ACC  AE10               	btfss	___aomod@divisor+7,7,c
  7398  001ACE  D7F4               	goto	l2381
  7399  001AD0                     u2050:
  7400  001AD0  5009               	movf	___aomod@divisor,w,c
  7401  001AD2  5C01               	subwf	___aomod@dividend,w,c
  7402  001AD4  500A               	movf	___aomod@divisor+1,w,c
  7403  001AD6  5802               	subwfb	___aomod@dividend+1,w,c
  7404  001AD8  500B               	movf	___aomod@divisor+2,w,c
  7405  001ADA  5803               	subwfb	___aomod@dividend+2,w,c
  7406  001ADC  500C               	movf	___aomod@divisor+3,w,c
  7407  001ADE  5804               	subwfb	___aomod@dividend+3,w,c
  7408  001AE0  500D               	movf	___aomod@divisor+4,w,c
  7409  001AE2  5805               	subwfb	___aomod@dividend+4,w,c
  7410  001AE4  500E               	movf	___aomod@divisor+5,w,c
  7411  001AE6  5806               	subwfb	___aomod@dividend+5,w,c
  7412  001AE8  500F               	movf	___aomod@divisor+6,w,c
  7413  001AEA  5807               	subwfb	___aomod@dividend+6,w,c
  7414  001AEC  5010               	movf	___aomod@divisor+7,w,c
  7415  001AEE  5808               	subwfb	___aomod@dividend+7,w,c
  7416  001AF0  A0D8               	btfss	status,0,c
  7417  001AF2  D010               	goto	l2389
  7418  001AF4  5009               	movf	___aomod@divisor,w,c
  7419  001AF6  5E01               	subwf	___aomod@dividend,f,c
  7420  001AF8  500A               	movf	___aomod@divisor+1,w,c
  7421  001AFA  5A02               	subwfb	___aomod@dividend+1,f,c
  7422  001AFC  500B               	movf	___aomod@divisor+2,w,c
  7423  001AFE  5A03               	subwfb	___aomod@dividend+2,f,c
  7424  001B00  500C               	movf	___aomod@divisor+3,w,c
  7425  001B02  5A04               	subwfb	___aomod@dividend+3,f,c
  7426  001B04  500D               	movf	___aomod@divisor+4,w,c
  7427  001B06  5A05               	subwfb	___aomod@dividend+4,f,c
  7428  001B08  500E               	movf	___aomod@divisor+5,w,c
  7429  001B0A  5A06               	subwfb	___aomod@dividend+5,f,c
  7430  001B0C  500F               	movf	___aomod@divisor+6,w,c
  7431  001B0E  5A07               	subwfb	___aomod@dividend+6,f,c
  7432  001B10  5010               	movf	___aomod@divisor+7,w,c
  7433  001B12  5A08               	subwfb	___aomod@dividend+7,f,c
  7434  001B14                     l2389:
  7435  001B14  90D8               	bcf	status,0,c
  7436  001B16  3210               	rrcf	___aomod@divisor+7,f,c
  7437  001B18  320F               	rrcf	___aomod@divisor+6,f,c
  7438  001B1A  320E               	rrcf	___aomod@divisor+5,f,c
  7439  001B1C  320D               	rrcf	___aomod@divisor+4,f,c
  7440  001B1E  320C               	rrcf	___aomod@divisor+3,f,c
  7441  001B20  320B               	rrcf	___aomod@divisor+2,f,c
  7442  001B22  320A               	rrcf	___aomod@divisor+1,f,c
  7443  001B24  3209               	rrcf	___aomod@divisor,f,c
  7444  001B26  2E11               	decfsz	___aomod@counter,f,c
  7445  001B28  D7D3               	goto	u2050
  7446  001B2A                     l2393:
  7447  001B2A  5012               	movf	___aomod@sign,w,c
  7448  001B2C  B4D8               	btfsc	status,2,c
  7449  001B2E  D010               	goto	l2397
  7450  001B30  1E08               	comf	___aomod@dividend+7,f,c
  7451  001B32  1E07               	comf	___aomod@dividend+6,f,c
  7452  001B34  1E06               	comf	___aomod@dividend+5,f,c
  7453  001B36  1E05               	comf	___aomod@dividend+4,f,c
  7454  001B38  1E04               	comf	___aomod@dividend+3,f,c
  7455  001B3A  1E03               	comf	___aomod@dividend+2,f,c
  7456  001B3C  1E02               	comf	___aomod@dividend+1,f,c
  7457  001B3E  6C01               	negf	___aomod@dividend,c
  7458  001B40  0E00               	movlw	0
  7459  001B42  2202               	addwfc	___aomod@dividend+1,f,c
  7460  001B44  2203               	addwfc	___aomod@dividend+2,f,c
  7461  001B46  2204               	addwfc	___aomod@dividend+3,f,c
  7462  001B48  2205               	addwfc	___aomod@dividend+4,f,c
  7463  001B4A  2206               	addwfc	___aomod@dividend+5,f,c
  7464  001B4C  2207               	addwfc	___aomod@dividend+6,f,c
  7465  001B4E  2208               	addwfc	___aomod@dividend+7,f,c
  7466  001B50                     l2397:
  7467  001B50  C001  F001         	movff	___aomod@dividend,?___aomod
  7468  001B54  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  7469  001B58  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  7470  001B5C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  7471  001B60  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  7472  001B64  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  7473  001B68  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  7474  001B6C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  7475  001B70  0012               	return		;funcret
  7476  001B72                     __end_of___aomod:
  7477                           	opt callstack 0
  7478                           
  7479 ;; *************** function ___aodiv *****************
  7480 ;; Defined at:
  7481 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  7482 ;; Parameters:    Size  Location     Type
  7483 ;;  dividend        8    0[COMRAM] long long 
  7484 ;;  divisor         8    8[COMRAM] long long 
  7485 ;; Auto vars:     Size  Location     Type
  7486 ;;  quotient        8   18[COMRAM] long long 
  7487 ;;  sign            1   17[COMRAM] unsigned char 
  7488 ;;  counter         1   16[COMRAM] unsigned char 
  7489 ;; Return value:  Size  Location     Type
  7490 ;;                  8    0[COMRAM] long long 
  7491 ;; Registers used:
  7492 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7493 ;; Tracked objects:
  7494 ;;		On entry : 0/0
  7495 ;;		On exit  : 0/0
  7496 ;;		Unchanged: 0/0
  7497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7498 ;;      Params:        16       0       0       0
  7499 ;;      Locals:        10       0       0       0
  7500 ;;      Temps:          0       0       0       0
  7501 ;;      Totals:        26       0       0       0
  7502 ;;Total ram usage:       26 bytes
  7503 ;; Hardware stack levels used:    1
  7504 ;; This function calls:
  7505 ;;		Nothing
  7506 ;; This function is called by:
  7507 ;;		_dtoa
  7508 ;; This function uses a non-reentrant model
  7509 ;;
  7510                           
  7511                           	psect	text31
  7512  001CB2                     __ptext31:
  7513                           	opt callstack 0
  7514  001CB2                     ___aodiv:
  7515                           	opt callstack 26
  7516                           
  7517                           ;incstack = 0
  7518  001CB2  0E00               	movlw	0
  7519  001CB4  6E12               	movwf	___aodiv@sign,c
  7520  001CB6  AE10               	btfss	___aodiv@divisor+7,7,c
  7521  001CB8  D012               	goto	l2329
  7522  001CBA  1E10               	comf	___aodiv@divisor+7,f,c
  7523  001CBC  1E0F               	comf	___aodiv@divisor+6,f,c
  7524  001CBE  1E0E               	comf	___aodiv@divisor+5,f,c
  7525  001CC0  1E0D               	comf	___aodiv@divisor+4,f,c
  7526  001CC2  1E0C               	comf	___aodiv@divisor+3,f,c
  7527  001CC4  1E0B               	comf	___aodiv@divisor+2,f,c
  7528  001CC6  1E0A               	comf	___aodiv@divisor+1,f,c
  7529  001CC8  6C09               	negf	___aodiv@divisor,c
  7530  001CCA  0E00               	movlw	0
  7531  001CCC  220A               	addwfc	___aodiv@divisor+1,f,c
  7532  001CCE  220B               	addwfc	___aodiv@divisor+2,f,c
  7533  001CD0  220C               	addwfc	___aodiv@divisor+3,f,c
  7534  001CD2  220D               	addwfc	___aodiv@divisor+4,f,c
  7535  001CD4  220E               	addwfc	___aodiv@divisor+5,f,c
  7536  001CD6  220F               	addwfc	___aodiv@divisor+6,f,c
  7537  001CD8  2210               	addwfc	___aodiv@divisor+7,f,c
  7538  001CDA  0E01               	movlw	1
  7539  001CDC  6E12               	movwf	___aodiv@sign,c
  7540  001CDE                     l2329:
  7541  001CDE  AE08               	btfss	___aodiv@dividend+7,7,c
  7542  001CE0  D012               	goto	l2335
  7543  001CE2  1E08               	comf	___aodiv@dividend+7,f,c
  7544  001CE4  1E07               	comf	___aodiv@dividend+6,f,c
  7545  001CE6  1E06               	comf	___aodiv@dividend+5,f,c
  7546  001CE8  1E05               	comf	___aodiv@dividend+4,f,c
  7547  001CEA  1E04               	comf	___aodiv@dividend+3,f,c
  7548  001CEC  1E03               	comf	___aodiv@dividend+2,f,c
  7549  001CEE  1E02               	comf	___aodiv@dividend+1,f,c
  7550  001CF0  6C01               	negf	___aodiv@dividend,c
  7551  001CF2  0E00               	movlw	0
  7552  001CF4  2202               	addwfc	___aodiv@dividend+1,f,c
  7553  001CF6  2203               	addwfc	___aodiv@dividend+2,f,c
  7554  001CF8  2204               	addwfc	___aodiv@dividend+3,f,c
  7555  001CFA  2205               	addwfc	___aodiv@dividend+4,f,c
  7556  001CFC  2206               	addwfc	___aodiv@dividend+5,f,c
  7557  001CFE  2207               	addwfc	___aodiv@dividend+6,f,c
  7558  001D00  2208               	addwfc	___aodiv@dividend+7,f,c
  7559  001D02  0E01               	movlw	1
  7560  001D04  1A12               	xorwf	___aodiv@sign,f,c
  7561  001D06                     l2335:
  7562  001D06  EE20  F013         	lfsr	2,___aodiv@quotient
  7563  001D0A  0E07               	movlw	7
  7564  001D0C                     u1971:
  7565  001D0C  6ADE               	clrf	postinc2,c
  7566  001D0E  06E8               	decf	wreg,f,c
  7567  001D10  E2FD               	bc	u1971
  7568  001D12  5009               	movf	___aodiv@divisor,w,c
  7569  001D14  100A               	iorwf	___aodiv@divisor+1,w,c
  7570  001D16  100B               	iorwf	___aodiv@divisor+2,w,c
  7571  001D18  100C               	iorwf	___aodiv@divisor+3,w,c
  7572  001D1A  100D               	iorwf	___aodiv@divisor+4,w,c
  7573  001D1C  100E               	iorwf	___aodiv@divisor+5,w,c
  7574  001D1E  100F               	iorwf	___aodiv@divisor+6,w,c
  7575  001D20  1010               	iorwf	___aodiv@divisor+7,w,c
  7576  001D22  B4D8               	btfsc	status,2,c
  7577  001D24  D046               	goto	l2357
  7578  001D26  0E01               	movlw	1
  7579  001D28  6E11               	movwf	___aodiv@counter,c
  7580  001D2A  D00A               	goto	l2343
  7581  001D2C                     l2341:
  7582  001D2C  90D8               	bcf	status,0,c
  7583  001D2E  3609               	rlcf	___aodiv@divisor,f,c
  7584  001D30  360A               	rlcf	___aodiv@divisor+1,f,c
  7585  001D32  360B               	rlcf	___aodiv@divisor+2,f,c
  7586  001D34  360C               	rlcf	___aodiv@divisor+3,f,c
  7587  001D36  360D               	rlcf	___aodiv@divisor+4,f,c
  7588  001D38  360E               	rlcf	___aodiv@divisor+5,f,c
  7589  001D3A  360F               	rlcf	___aodiv@divisor+6,f,c
  7590  001D3C  3610               	rlcf	___aodiv@divisor+7,f,c
  7591  001D3E  2A11               	incf	___aodiv@counter,f,c
  7592  001D40                     l2343:
  7593  001D40  AE10               	btfss	___aodiv@divisor+7,7,c
  7594  001D42  D7F4               	goto	l2341
  7595  001D44                     u1990:
  7596  001D44  90D8               	bcf	status,0,c
  7597  001D46  3613               	rlcf	___aodiv@quotient,f,c
  7598  001D48  3614               	rlcf	___aodiv@quotient+1,f,c
  7599  001D4A  3615               	rlcf	___aodiv@quotient+2,f,c
  7600  001D4C  3616               	rlcf	___aodiv@quotient+3,f,c
  7601  001D4E  3617               	rlcf	___aodiv@quotient+4,f,c
  7602  001D50  3618               	rlcf	___aodiv@quotient+5,f,c
  7603  001D52  3619               	rlcf	___aodiv@quotient+6,f,c
  7604  001D54  361A               	rlcf	___aodiv@quotient+7,f,c
  7605  001D56  5009               	movf	___aodiv@divisor,w,c
  7606  001D58  5C01               	subwf	___aodiv@dividend,w,c
  7607  001D5A  500A               	movf	___aodiv@divisor+1,w,c
  7608  001D5C  5802               	subwfb	___aodiv@dividend+1,w,c
  7609  001D5E  500B               	movf	___aodiv@divisor+2,w,c
  7610  001D60  5803               	subwfb	___aodiv@dividend+2,w,c
  7611  001D62  500C               	movf	___aodiv@divisor+3,w,c
  7612  001D64  5804               	subwfb	___aodiv@dividend+3,w,c
  7613  001D66  500D               	movf	___aodiv@divisor+4,w,c
  7614  001D68  5805               	subwfb	___aodiv@dividend+4,w,c
  7615  001D6A  500E               	movf	___aodiv@divisor+5,w,c
  7616  001D6C  5806               	subwfb	___aodiv@dividend+5,w,c
  7617  001D6E  500F               	movf	___aodiv@divisor+6,w,c
  7618  001D70  5807               	subwfb	___aodiv@dividend+6,w,c
  7619  001D72  5010               	movf	___aodiv@divisor+7,w,c
  7620  001D74  5808               	subwfb	___aodiv@dividend+7,w,c
  7621  001D76  A0D8               	btfss	status,0,c
  7622  001D78  D011               	goto	l2353
  7623  001D7A  5009               	movf	___aodiv@divisor,w,c
  7624  001D7C  5E01               	subwf	___aodiv@dividend,f,c
  7625  001D7E  500A               	movf	___aodiv@divisor+1,w,c
  7626  001D80  5A02               	subwfb	___aodiv@dividend+1,f,c
  7627  001D82  500B               	movf	___aodiv@divisor+2,w,c
  7628  001D84  5A03               	subwfb	___aodiv@dividend+2,f,c
  7629  001D86  500C               	movf	___aodiv@divisor+3,w,c
  7630  001D88  5A04               	subwfb	___aodiv@dividend+3,f,c
  7631  001D8A  500D               	movf	___aodiv@divisor+4,w,c
  7632  001D8C  5A05               	subwfb	___aodiv@dividend+4,f,c
  7633  001D8E  500E               	movf	___aodiv@divisor+5,w,c
  7634  001D90  5A06               	subwfb	___aodiv@dividend+5,f,c
  7635  001D92  500F               	movf	___aodiv@divisor+6,w,c
  7636  001D94  5A07               	subwfb	___aodiv@dividend+6,f,c
  7637  001D96  5010               	movf	___aodiv@divisor+7,w,c
  7638  001D98  5A08               	subwfb	___aodiv@dividend+7,f,c
  7639  001D9A  8013               	bsf	___aodiv@quotient,0,c
  7640  001D9C                     l2353:
  7641  001D9C  90D8               	bcf	status,0,c
  7642  001D9E  3210               	rrcf	___aodiv@divisor+7,f,c
  7643  001DA0  320F               	rrcf	___aodiv@divisor+6,f,c
  7644  001DA2  320E               	rrcf	___aodiv@divisor+5,f,c
  7645  001DA4  320D               	rrcf	___aodiv@divisor+4,f,c
  7646  001DA6  320C               	rrcf	___aodiv@divisor+3,f,c
  7647  001DA8  320B               	rrcf	___aodiv@divisor+2,f,c
  7648  001DAA  320A               	rrcf	___aodiv@divisor+1,f,c
  7649  001DAC  3209               	rrcf	___aodiv@divisor,f,c
  7650  001DAE  2E11               	decfsz	___aodiv@counter,f,c
  7651  001DB0  D7C9               	goto	u1990
  7652  001DB2                     l2357:
  7653  001DB2  5012               	movf	___aodiv@sign,w,c
  7654  001DB4  B4D8               	btfsc	status,2,c
  7655  001DB6  D010               	goto	l2361
  7656  001DB8  1E1A               	comf	___aodiv@quotient+7,f,c
  7657  001DBA  1E19               	comf	___aodiv@quotient+6,f,c
  7658  001DBC  1E18               	comf	___aodiv@quotient+5,f,c
  7659  001DBE  1E17               	comf	___aodiv@quotient+4,f,c
  7660  001DC0  1E16               	comf	___aodiv@quotient+3,f,c
  7661  001DC2  1E15               	comf	___aodiv@quotient+2,f,c
  7662  001DC4  1E14               	comf	___aodiv@quotient+1,f,c
  7663  001DC6  6C13               	negf	___aodiv@quotient,c
  7664  001DC8  0E00               	movlw	0
  7665  001DCA  2214               	addwfc	___aodiv@quotient+1,f,c
  7666  001DCC  2215               	addwfc	___aodiv@quotient+2,f,c
  7667  001DCE  2216               	addwfc	___aodiv@quotient+3,f,c
  7668  001DD0  2217               	addwfc	___aodiv@quotient+4,f,c
  7669  001DD2  2218               	addwfc	___aodiv@quotient+5,f,c
  7670  001DD4  2219               	addwfc	___aodiv@quotient+6,f,c
  7671  001DD6  221A               	addwfc	___aodiv@quotient+7,f,c
  7672  001DD8                     l2361:
  7673  001DD8  C013  F001         	movff	___aodiv@quotient,?___aodiv
  7674  001DDC  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  7675  001DE0  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  7676  001DE4  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  7677  001DE8  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  7678  001DEC  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  7679  001DF0  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  7680  001DF4  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  7681  001DF8  0012               	return		;funcret
  7682  001DFA                     __end_of___aodiv:
  7683                           	opt callstack 0
  7684                           
  7685 ;; *************** function ___xxtofl *****************
  7686 ;; Defined at:
  7687 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;  sign            1    wreg     unsigned char 
  7690 ;;  val             4    0[COMRAM] long 
  7691 ;; Auto vars:     Size  Location     Type
  7692 ;;  sign            1    8[COMRAM] unsigned char 
  7693 ;;  arg             4   10[COMRAM] unsigned long 
  7694 ;;  exp             1    9[COMRAM] unsigned char 
  7695 ;; Return value:  Size  Location     Type
  7696 ;;                  4    0[COMRAM] unsigned char 
  7697 ;; Registers used:
  7698 ;;		wreg, status,2, status,0
  7699 ;; Tracked objects:
  7700 ;;		On entry : 0/0
  7701 ;;		On exit  : 0/0
  7702 ;;		Unchanged: 0/0
  7703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7704 ;;      Params:         4       0       0       0
  7705 ;;      Locals:         6       0       0       0
  7706 ;;      Temps:          4       0       0       0
  7707 ;;      Totals:        14       0       0       0
  7708 ;;Total ram usage:       14 bytes
  7709 ;; Hardware stack levels used:    1
  7710 ;; This function calls:
  7711 ;;		Nothing
  7712 ;; This function is called by:
  7713 ;;		_SVPWM_SetVectorTimes
  7714 ;; This function uses a non-reentrant model
  7715 ;;
  7716                           
  7717                           	psect	text32
  7718  001B72                     __ptext32:
  7719                           	opt callstack 0
  7720  001B72                     ___xxtofl:
  7721                           	opt callstack 27
  7722                           
  7723                           ;incstack = 0
  7724                           ;___xxtofl@sign stored from wreg
  7725  001B72  6E09               	movwf	___xxtofl@sign,c
  7726  001B74  5009               	movf	___xxtofl@sign,w,c
  7727  001B76  A4D8               	btfss	status,2,c
  7728  001B78  AE04               	btfss	___xxtofl@val+3,7,c
  7729  001B7A  D01A               	goto	l906
  7730  001B7C  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7731  001B80  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7732  001B84  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7733  001B88  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7734  001B8C  1E05               	comf	??___xxtofl,f,c
  7735  001B8E  1E06               	comf	??___xxtofl+1,f,c
  7736  001B90  1E07               	comf	??___xxtofl+2,f,c
  7737  001B92  1E08               	comf	??___xxtofl+3,f,c
  7738  001B94  2A05               	incf	??___xxtofl,f,c
  7739  001B96  0E00               	movlw	0
  7740  001B98  2206               	addwfc	??___xxtofl+1,f,c
  7741  001B9A  2207               	addwfc	??___xxtofl+2,f,c
  7742  001B9C  2208               	addwfc	??___xxtofl+3,f,c
  7743  001B9E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7744  001BA2  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7745  001BA6  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7746  001BAA  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7747  001BAE  D008               	goto	l3183
  7748  001BB0                     l906:
  7749  001BB0  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7750  001BB4  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7751  001BB8  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7752  001BBC  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7753  001BC0                     l3183:
  7754  001BC0  5001               	movf	___xxtofl@val,w,c
  7755  001BC2  1002               	iorwf	___xxtofl@val+1,w,c
  7756  001BC4  1003               	iorwf	___xxtofl@val+2,w,c
  7757  001BC6  1004               	iorwf	___xxtofl@val+3,w,c
  7758  001BC8  A4D8               	btfss	status,2,c
  7759  001BCA  D009               	goto	l3189
  7760  001BCC  0E00               	movlw	0
  7761  001BCE  6E01               	movwf	?___xxtofl,c
  7762  001BD0  0E00               	movlw	0
  7763  001BD2  6E02               	movwf	?___xxtofl+1,c
  7764  001BD4  0E00               	movlw	0
  7765  001BD6  6E03               	movwf	?___xxtofl+2,c
  7766  001BD8  0E00               	movlw	0
  7767  001BDA  6E04               	movwf	?___xxtofl+3,c
  7768  001BDC  0012               	return	
  7769  001BDE                     l3189:
  7770  001BDE  0E96               	movlw	150
  7771  001BE0  6E0A               	movwf	___xxtofl@exp,c
  7772  001BE2  D006               	goto	l3193
  7773  001BE4                     l3191:
  7774  001BE4  2A0A               	incf	___xxtofl@exp,f,c
  7775  001BE6  90D8               	bcf	status,0,c
  7776  001BE8  320E               	rrcf	___xxtofl@arg+3,f,c
  7777  001BEA  320D               	rrcf	___xxtofl@arg+2,f,c
  7778  001BEC  320C               	rrcf	___xxtofl@arg+1,f,c
  7779  001BEE  320B               	rrcf	___xxtofl@arg,f,c
  7780  001BF0                     l3193:
  7781  001BF0  0E00               	movlw	0
  7782  001BF2  140B               	andwf	___xxtofl@arg,w,c
  7783  001BF4  6E05               	movwf	??___xxtofl& (0+255),c
  7784  001BF6  0E00               	movlw	0
  7785  001BF8  140C               	andwf	___xxtofl@arg+1,w,c
  7786  001BFA  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  7787  001BFC  0E00               	movlw	0
  7788  001BFE  140D               	andwf	___xxtofl@arg+2,w,c
  7789  001C00  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  7790  001C02  0EFE               	movlw	254
  7791  001C04  140E               	andwf	___xxtofl@arg+3,w,c
  7792  001C06  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  7793  001C08  5005               	movf	??___xxtofl,w,c
  7794  001C0A  1006               	iorwf	??___xxtofl+1,w,c
  7795  001C0C  1007               	iorwf	??___xxtofl+2,w,c
  7796  001C0E  1008               	iorwf	??___xxtofl+3,w,c
  7797  001C10  B4D8               	btfsc	status,2,c
  7798  001C12  D00D               	goto	l913
  7799  001C14  D7E7               	goto	l3191
  7800  001C16                     l3195:
  7801  001C16  2A0A               	incf	___xxtofl@exp,f,c
  7802  001C18  0E01               	movlw	1
  7803  001C1A  260B               	addwf	___xxtofl@arg,f,c
  7804  001C1C  0E00               	movlw	0
  7805  001C1E  220C               	addwfc	___xxtofl@arg+1,f,c
  7806  001C20  220D               	addwfc	___xxtofl@arg+2,f,c
  7807  001C22  220E               	addwfc	___xxtofl@arg+3,f,c
  7808  001C24  90D8               	bcf	status,0,c
  7809  001C26  320E               	rrcf	___xxtofl@arg+3,f,c
  7810  001C28  320D               	rrcf	___xxtofl@arg+2,f,c
  7811  001C2A  320C               	rrcf	___xxtofl@arg+1,f,c
  7812  001C2C  320B               	rrcf	___xxtofl@arg,f,c
  7813  001C2E                     l913:
  7814  001C2E  0E00               	movlw	0
  7815  001C30  140B               	andwf	___xxtofl@arg,w,c
  7816  001C32  6E05               	movwf	??___xxtofl& (0+255),c
  7817  001C34  0E00               	movlw	0
  7818  001C36  140C               	andwf	___xxtofl@arg+1,w,c
  7819  001C38  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  7820  001C3A  0E00               	movlw	0
  7821  001C3C  140D               	andwf	___xxtofl@arg+2,w,c
  7822  001C3E  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  7823  001C40  0EFF               	movlw	255
  7824  001C42  140E               	andwf	___xxtofl@arg+3,w,c
  7825  001C44  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  7826  001C46  5005               	movf	??___xxtofl,w,c
  7827  001C48  1006               	iorwf	??___xxtofl+1,w,c
  7828  001C4A  1007               	iorwf	??___xxtofl+2,w,c
  7829  001C4C  1008               	iorwf	??___xxtofl+3,w,c
  7830  001C4E  B4D8               	btfsc	status,2,c
  7831  001C50  D007               	goto	l3203
  7832  001C52  D7E1               	goto	l3195
  7833  001C54                     l3201:
  7834  001C54  060A               	decf	___xxtofl@exp,f,c
  7835  001C56  90D8               	bcf	status,0,c
  7836  001C58  360B               	rlcf	___xxtofl@arg,f,c
  7837  001C5A  360C               	rlcf	___xxtofl@arg+1,f,c
  7838  001C5C  360D               	rlcf	___xxtofl@arg+2,f,c
  7839  001C5E  360E               	rlcf	___xxtofl@arg+3,f,c
  7840  001C60                     l3203:
  7841  001C60  BE0D               	btfsc	___xxtofl@arg+2,7,c
  7842  001C62  D003               	goto	u3410
  7843  001C64  0E02               	movlw	2
  7844  001C66  600A               	cpfslt	___xxtofl@exp,c
  7845  001C68  D7F5               	goto	l3201
  7846  001C6A                     u3410:
  7847  001C6A  A00A               	btfss	___xxtofl@exp,0,c
  7848  001C6C  9E0D               	bcf	___xxtofl@arg+2,7,c
  7849  001C6E  90D8               	bcf	status,0,c
  7850  001C70  320A               	rrcf	___xxtofl@exp,f,c
  7851  001C72  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7852  001C76  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  7853  001C78  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  7854  001C7A  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  7855  001C7C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7856  001C80  6A07               	clrf	??___xxtofl+2,c
  7857  001C82  6A06               	clrf	??___xxtofl+1,c
  7858  001C84  6A05               	clrf	??___xxtofl,c
  7859  001C86  5005               	movf	??___xxtofl,w,c
  7860  001C88  120B               	iorwf	___xxtofl@arg,f,c
  7861  001C8A  5006               	movf	??___xxtofl+1,w,c
  7862  001C8C  120C               	iorwf	___xxtofl@arg+1,f,c
  7863  001C8E  5007               	movf	??___xxtofl+2,w,c
  7864  001C90  120D               	iorwf	___xxtofl@arg+2,f,c
  7865  001C92  5008               	movf	??___xxtofl+3,w,c
  7866  001C94  120E               	iorwf	___xxtofl@arg+3,f,c
  7867  001C96  5009               	movf	___xxtofl@sign,w,c
  7868  001C98  A4D8               	btfss	status,2,c
  7869  001C9A  AE04               	btfss	___xxtofl@val+3,7,c
  7870  001C9C  D001               	goto	l3219
  7871  001C9E  8E0E               	bsf	___xxtofl@arg+3,7,c
  7872  001CA0                     l3219:
  7873  001CA0  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7874  001CA4  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7875  001CA8  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7876  001CAC  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7877  001CB0  0012               	return		;funcret
  7878  001CB2                     __end_of___xxtofl:
  7879                           	opt callstack 0
  7880                           
  7881 ;; *************** function ___wmul *****************
  7882 ;; Defined at:
  7883 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  7884 ;; Parameters:    Size  Location     Type
  7885 ;;  multiplier      2    0[COMRAM] unsigned int 
  7886 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7887 ;; Auto vars:     Size  Location     Type
  7888 ;;  product         2    4[COMRAM] unsigned int 
  7889 ;; Return value:  Size  Location     Type
  7890 ;;                  2    0[COMRAM] unsigned int 
  7891 ;; Registers used:
  7892 ;;		wreg, status,2, status,0, prodl, prodh
  7893 ;; Tracked objects:
  7894 ;;		On entry : 0/0
  7895 ;;		On exit  : 0/0
  7896 ;;		Unchanged: 0/0
  7897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7898 ;;      Params:         4       0       0       0
  7899 ;;      Locals:         2       0       0       0
  7900 ;;      Temps:          0       0       0       0
  7901 ;;      Totals:         6       0       0       0
  7902 ;;Total ram usage:        6 bytes
  7903 ;; Hardware stack levels used:    1
  7904 ;; This function calls:
  7905 ;;		Nothing
  7906 ;; This function is called by:
  7907 ;;		_SVPWM_SetVectorTimes
  7908 ;;		_main
  7909 ;; This function uses a non-reentrant model
  7910 ;;
  7911                           
  7912                           	psect	text33
  7913  0010B6                     __ptext33:
  7914                           	opt callstack 0
  7915  0010B6                     ___wmul:
  7916                           	opt callstack 27
  7917                           
  7918                           ;incstack = 0
  7919  0010B6  5001               	movf	___wmul@multiplier,w,c
  7920  0010B8  0203               	mulwf	___wmul@multiplicand,c
  7921  0010BA  CFF3 F005          	movff	prodl,___wmul@product
  7922  0010BE  CFF4 F006          	movff	prodh,___wmul@product+1
  7923  0010C2  5001               	movf	___wmul@multiplier,w,c
  7924  0010C4  0204               	mulwf	___wmul@multiplicand+1,c
  7925  0010C6  50F3               	movf	prodl,w,c
  7926  0010C8  2606               	addwf	___wmul@product+1,f,c
  7927  0010CA  5002               	movf	___wmul@multiplier+1,w,c
  7928  0010CC  0203               	mulwf	___wmul@multiplicand,c
  7929  0010CE  50F3               	movf	prodl,w,c
  7930  0010D0  2606               	addwf	___wmul@product+1,f,c
  7931  0010D2  C005  F001         	movff	___wmul@product,?___wmul
  7932  0010D6  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7933  0010DA  0012               	return		;funcret
  7934  0010DC                     __end_of___wmul:
  7935                           	opt callstack 0
  7936                           
  7937 ;; *************** function ___fltol *****************
  7938 ;; Defined at:
  7939 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  7940 ;; Parameters:    Size  Location     Type
  7941 ;;  f1              4   53[COMRAM] unsigned int 
  7942 ;; Auto vars:     Size  Location     Type
  7943 ;;  exp1            1   62[COMRAM] unsigned char 
  7944 ;;  sign1           1   61[COMRAM] unsigned char 
  7945 ;; Return value:  Size  Location     Type
  7946 ;;                  4   53[COMRAM] long 
  7947 ;; Registers used:
  7948 ;;		wreg, status,2, status,0
  7949 ;; Tracked objects:
  7950 ;;		On entry : 0/0
  7951 ;;		On exit  : 0/0
  7952 ;;		Unchanged: 0/0
  7953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7954 ;;      Params:         4       0       0       0
  7955 ;;      Locals:         2       0       0       0
  7956 ;;      Temps:          4       0       0       0
  7957 ;;      Totals:        10       0       0       0
  7958 ;;Total ram usage:       10 bytes
  7959 ;; Hardware stack levels used:    1
  7960 ;; This function calls:
  7961 ;;		Nothing
  7962 ;; This function is called by:
  7963 ;;		_SVPWM_SetVectorTimes
  7964 ;; This function uses a non-reentrant model
  7965 ;;
  7966                           
  7967                           	psect	text34
  7968  00173A                     __ptext34:
  7969                           	opt callstack 0
  7970  00173A                     ___fltol:
  7971                           	opt callstack 27
  7972                           
  7973                           ;incstack = 0
  7974  00173A  3438               	rlcf	___fltol@f1+2,w,c
  7975  00173C  3439               	rlcf	___fltol@f1+3,w,c
  7976  00173E  6E3F               	movwf	___fltol@exp1,c
  7977  001740  503F               	movf	___fltol@exp1,w,c
  7978  001742  A4D8               	btfss	status,2,c
  7979  001744  D009               	goto	l3139
  7980  001746                     u3280:
  7981  001746  0E00               	movlw	0
  7982  001748  6E36               	movwf	?___fltol,c
  7983  00174A  0E00               	movlw	0
  7984  00174C  6E37               	movwf	?___fltol+1,c
  7985  00174E  0E00               	movlw	0
  7986  001750  6E38               	movwf	?___fltol+2,c
  7987  001752  0E00               	movlw	0
  7988  001754  6E39               	movwf	?___fltol+3,c
  7989  001756  0012               	return	
  7990  001758                     l3139:
  7991  001758  C036  F03A         	movff	___fltol@f1,??___fltol
  7992  00175C  C037  F03B         	movff	___fltol@f1+1,??___fltol+1
  7993  001760  C038  F03C         	movff	___fltol@f1+2,??___fltol+2
  7994  001764  C039  F03D         	movff	___fltol@f1+3,??___fltol+3
  7995  001768  0E20               	movlw	32
  7996  00176A  D005               	goto	u3290
  7997  00176C                     u3295:
  7998  00176C  90D8               	bcf	status,0,c
  7999  00176E  323D               	rrcf	??___fltol+3,f,c
  8000  001770  323C               	rrcf	??___fltol+2,f,c
  8001  001772  323B               	rrcf	??___fltol+1,f,c
  8002  001774  323A               	rrcf	??___fltol,f,c
  8003  001776                     u3290:
  8004  001776  2EE8               	decfsz	wreg,f,c
  8005  001778  D7F9               	goto	u3295
  8006  00177A  503A               	movf	??___fltol,w,c
  8007  00177C  6E3E               	movwf	___fltol@sign1,c
  8008  00177E  8E38               	bsf	___fltol@f1+2,7,c
  8009  001780  0EFF               	movlw	255
  8010  001782  1636               	andwf	___fltol@f1,f,c
  8011  001784  0EFF               	movlw	255
  8012  001786  1637               	andwf	___fltol@f1+1,f,c
  8013  001788  0EFF               	movlw	255
  8014  00178A  1638               	andwf	___fltol@f1+2,f,c
  8015  00178C  0E00               	movlw	0
  8016  00178E  1639               	andwf	___fltol@f1+3,f,c
  8017  001790  0E96               	movlw	150
  8018  001792  5E3F               	subwf	___fltol@exp1,f,c
  8019  001794  AE3F               	btfss	___fltol@exp1,7,c
  8020  001796  D00D               	goto	l3159
  8021  001798  503F               	movf	___fltol@exp1,w,c
  8022  00179A  0A80               	xorlw	128
  8023  00179C  0F97               	addlw	151
  8024  00179E  A0D8               	btfss	status,0,c
  8025  0017A0  D7D2               	goto	u3280
  8026  0017A2                     l3155:
  8027  0017A2  90D8               	bcf	status,0,c
  8028  0017A4  3239               	rrcf	___fltol@f1+3,f,c
  8029  0017A6  3238               	rrcf	___fltol@f1+2,f,c
  8030  0017A8  3237               	rrcf	___fltol@f1+1,f,c
  8031  0017AA  3236               	rrcf	___fltol@f1,f,c
  8032  0017AC  3E3F               	incfsz	___fltol@exp1,f,c
  8033  0017AE  D7F9               	goto	l3155
  8034  0017B0  D00D               	goto	u3330
  8035  0017B2                     l3159:
  8036  0017B2  0E1F               	movlw	31
  8037  0017B4  643F               	cpfsgt	___fltol@exp1,c
  8038  0017B6  D007               	goto	l3167
  8039  0017B8  D7C6               	goto	u3280
  8040  0017BA                     l3165:
  8041  0017BA  90D8               	bcf	status,0,c
  8042  0017BC  3636               	rlcf	___fltol@f1,f,c
  8043  0017BE  3637               	rlcf	___fltol@f1+1,f,c
  8044  0017C0  3638               	rlcf	___fltol@f1+2,f,c
  8045  0017C2  3639               	rlcf	___fltol@f1+3,f,c
  8046  0017C4  063F               	decf	___fltol@exp1,f,c
  8047  0017C6                     l3167:
  8048  0017C6  503F               	movf	___fltol@exp1,w,c
  8049  0017C8  A4D8               	btfss	status,2,c
  8050  0017CA  D7F7               	goto	l3165
  8051  0017CC                     u3330:
  8052  0017CC  503E               	movf	___fltol@sign1,w,c
  8053  0017CE  B4D8               	btfsc	status,2,c
  8054  0017D0  D008               	goto	l3173
  8055  0017D2  1E39               	comf	___fltol@f1+3,f,c
  8056  0017D4  1E38               	comf	___fltol@f1+2,f,c
  8057  0017D6  1E37               	comf	___fltol@f1+1,f,c
  8058  0017D8  6C36               	negf	___fltol@f1,c
  8059  0017DA  0E00               	movlw	0
  8060  0017DC  2237               	addwfc	___fltol@f1+1,f,c
  8061  0017DE  2238               	addwfc	___fltol@f1+2,f,c
  8062  0017E0  2239               	addwfc	___fltol@f1+3,f,c
  8063  0017E2                     l3173:
  8064  0017E2  C036  F036         	movff	___fltol@f1,?___fltol
  8065  0017E6  C037  F037         	movff	___fltol@f1+1,?___fltol+1
  8066  0017EA  C038  F038         	movff	___fltol@f1+2,?___fltol+2
  8067  0017EE  C039  F039         	movff	___fltol@f1+3,?___fltol+3
  8068  0017F2  0012               	return		;funcret
  8069  0017F4                     __end_of___fltol:
  8070                           	opt callstack 0
  8071                           
  8072 ;; *************** function ___flsub *****************
  8073 ;; Defined at:
  8074 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;  b               4   45[COMRAM] long 
  8077 ;;  a               4   49[COMRAM] long 
  8078 ;; Auto vars:     Size  Location     Type
  8079 ;;		None
  8080 ;; Return value:  Size  Location     Type
  8081 ;;                  4   45[COMRAM] long 
  8082 ;; Registers used:
  8083 ;;		wreg, status,2, status,0, cstack
  8084 ;; Tracked objects:
  8085 ;;		On entry : 0/0
  8086 ;;		On exit  : 0/0
  8087 ;;		Unchanged: 0/0
  8088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8089 ;;      Params:         8       0       0       0
  8090 ;;      Locals:         0       0       0       0
  8091 ;;      Temps:          0       0       0       0
  8092 ;;      Totals:         8       0       0       0
  8093 ;;Total ram usage:        8 bytes
  8094 ;; Hardware stack levels used:    1
  8095 ;; Hardware stack levels required when called:    1
  8096 ;; This function calls:
  8097 ;;		___fladd
  8098 ;; This function is called by:
  8099 ;;		_SVPWM_SetVectorTimes
  8100 ;; This function uses a non-reentrant model
  8101 ;;
  8102                           
  8103                           	psect	text35
  8104  001324                     __ptext35:
  8105                           	opt callstack 0
  8106  001324                     ___flsub:
  8107                           	opt callstack 26
  8108                           
  8109                           ;incstack = 0
  8110  001324  0E00               	movlw	0
  8111  001326  1A32               	xorwf	___flsub@a,f,c
  8112  001328  0E00               	movlw	0
  8113  00132A  1A33               	xorwf	___flsub@a+1,f,c
  8114  00132C  0E00               	movlw	0
  8115  00132E  1A34               	xorwf	___flsub@a+2,f,c
  8116  001330  0E80               	movlw	128
  8117  001332  1A35               	xorwf	___flsub@a+3,f,c
  8118  001334  C02E  F005         	movff	___flsub@b,___fladd@b
  8119  001338  C02F  F006         	movff	___flsub@b+1,___fladd@b+1
  8120  00133C  C030  F007         	movff	___flsub@b+2,___fladd@b+2
  8121  001340  C031  F008         	movff	___flsub@b+3,___fladd@b+3
  8122  001344  C032  F009         	movff	___flsub@a,___fladd@a
  8123  001348  C033  F00A         	movff	___flsub@a+1,___fladd@a+1
  8124  00134C  C034  F00B         	movff	___flsub@a+2,___fladd@a+2
  8125  001350  C035  F00C         	movff	___flsub@a+3,___fladd@a+3
  8126  001354  ECEB  F013         	call	___fladd	;wreg free
  8127  001358  C005  F02E         	movff	?___fladd,?___flsub
  8128  00135C  C006  F02F         	movff	?___fladd+1,?___flsub+1
  8129  001360  C007  F030         	movff	?___fladd+2,?___flsub+2
  8130  001364  C008  F031         	movff	?___fladd+3,?___flsub+3
  8131  001368  0012               	return		;funcret
  8132  00136A                     __end_of___flsub:
  8133                           	opt callstack 0
  8134                           
  8135 ;; *************** function ___fladd *****************
  8136 ;; Defined at:
  8137 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  8138 ;; Parameters:    Size  Location     Type
  8139 ;;  b               4    4[COMRAM] long 
  8140 ;;  a               4    8[COMRAM] long 
  8141 ;; Auto vars:     Size  Location     Type
  8142 ;;  grs             1   19[COMRAM] unsigned char 
  8143 ;;  bexp            1   18[COMRAM] unsigned char 
  8144 ;;  aexp            1   17[COMRAM] unsigned char 
  8145 ;;  signs           1   16[COMRAM] unsigned char 
  8146 ;; Return value:  Size  Location     Type
  8147 ;;                  4    4[COMRAM] unsigned char 
  8148 ;; Registers used:
  8149 ;;		wreg, status,2, status,0
  8150 ;; Tracked objects:
  8151 ;;		On entry : 0/0
  8152 ;;		On exit  : 0/0
  8153 ;;		Unchanged: 0/0
  8154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8155 ;;      Params:         8       0       0       0
  8156 ;;      Locals:         4       0       0       0
  8157 ;;      Temps:          4       0       0       0
  8158 ;;      Totals:        16       0       0       0
  8159 ;;Total ram usage:       16 bytes
  8160 ;; Hardware stack levels used:    1
  8161 ;; This function calls:
  8162 ;;		Nothing
  8163 ;; This function is called by:
  8164 ;;		_SVPWM_SetVectorTimes
  8165 ;;		___flsub
  8166 ;; This function uses a non-reentrant model
  8167 ;;
  8168                           
  8169                           	psect	text36
  8170  0027D6                     __ptext36:
  8171                           	opt callstack 0
  8172  0027D6                     ___fladd:
  8173                           	opt callstack 26
  8174                           
  8175                           ;incstack = 0
  8176  0027D6  5008               	movf	___fladd@b+3,w,c
  8177  0027D8  0B80               	andlw	128
  8178  0027DA  6E11               	movwf	___fladd@signs,c
  8179  0027DC  5008               	movf	___fladd@b+3,w,c
  8180  0027DE  2408               	addwf	___fladd@b+3,w,c
  8181  0027E0  6E13               	movwf	___fladd@bexp,c
  8182  0027E2  BE07               	btfsc	___fladd@b+2,7,c
  8183  0027E4  8013               	bsf	___fladd@bexp,0,c
  8184  0027E6  5013               	movf	___fladd@bexp,w,c
  8185  0027E8  B4D8               	btfsc	status,2,c
  8186  0027EA  D00D               	goto	l2611
  8187  0027EC  2813               	incf	___fladd@bexp,w,c
  8188  0027EE  A4D8               	btfss	status,2,c
  8189  0027F0  D008               	goto	l2607
  8190  0027F2  0E00               	movlw	0
  8191  0027F4  6E05               	movwf	___fladd@b,c
  8192  0027F6  0E00               	movlw	0
  8193  0027F8  6E06               	movwf	___fladd@b+1,c
  8194  0027FA  0E00               	movlw	0
  8195  0027FC  6E07               	movwf	___fladd@b+2,c
  8196  0027FE  0E00               	movlw	0
  8197  002800  6E08               	movwf	___fladd@b+3,c
  8198  002802                     l2607:
  8199  002802  8E07               	bsf	___fladd@b+2,7,c
  8200  002804  D006               	goto	L2
  8201  002806                     l2611:
  8202  002806  0E00               	movlw	0
  8203  002808  6E05               	movwf	___fladd@b,c
  8204  00280A  0E00               	movlw	0
  8205  00280C  6E06               	movwf	___fladd@b+1,c
  8206  00280E  0E00               	movlw	0
  8207  002810  6E07               	movwf	___fladd@b+2,c
  8208  002812                     L2:
  8209  002812  0E00               	movlw	0
  8210  002814  6E08               	movwf	___fladd@b+3,c
  8211  002816  500C               	movf	___fladd@a+3,w,c
  8212  002818  0B80               	andlw	128
  8213  00281A  6E12               	movwf	___fladd@aexp,c
  8214  00281C  5011               	movf	___fladd@signs,w,c
  8215  00281E  1812               	xorwf	___fladd@aexp,w,c
  8216  002820  A4D8               	btfss	status,2,c
  8217  002822  8C11               	bsf	___fladd@signs,6,c
  8218  002824  500C               	movf	___fladd@a+3,w,c
  8219  002826  240C               	addwf	___fladd@a+3,w,c
  8220  002828  6E12               	movwf	___fladd@aexp,c
  8221  00282A  BE0B               	btfsc	___fladd@a+2,7,c
  8222  00282C  8012               	bsf	___fladd@aexp,0,c
  8223  00282E  5012               	movf	___fladd@aexp,w,c
  8224  002830  B4D8               	btfsc	status,2,c
  8225  002832  D00D               	goto	l2635
  8226  002834  2812               	incf	___fladd@aexp,w,c
  8227  002836  A4D8               	btfss	status,2,c
  8228  002838  D008               	goto	l2631
  8229  00283A  0E00               	movlw	0
  8230  00283C  6E09               	movwf	___fladd@a,c
  8231  00283E  0E00               	movlw	0
  8232  002840  6E0A               	movwf	___fladd@a+1,c
  8233  002842  0E00               	movlw	0
  8234  002844  6E0B               	movwf	___fladd@a+2,c
  8235  002846  0E00               	movlw	0
  8236  002848  6E0C               	movwf	___fladd@a+3,c
  8237  00284A                     l2631:
  8238  00284A  8E0B               	bsf	___fladd@a+2,7,c
  8239  00284C  D006               	goto	L3
  8240  00284E                     l2635:
  8241  00284E  0E00               	movlw	0
  8242  002850  6E09               	movwf	___fladd@a,c
  8243  002852  0E00               	movlw	0
  8244  002854  6E0A               	movwf	___fladd@a+1,c
  8245  002856  0E00               	movlw	0
  8246  002858  6E0B               	movwf	___fladd@a+2,c
  8247  00285A                     L3:
  8248  00285A  0E00               	movlw	0
  8249  00285C  6E0C               	movwf	___fladd@a+3,c
  8250  00285E  5013               	movf	___fladd@bexp,w,c
  8251  002860  5C12               	subwf	___fladd@aexp,w,c
  8252  002862  B0D8               	btfsc	status,0,c
  8253  002864  D022               	goto	l2673
  8254  002866  AC11               	btfss	___fladd@signs,6,c
  8255  002868  D002               	goto	l2643
  8256  00286A  0E80               	movlw	128
  8257  00286C  1A11               	xorwf	___fladd@signs,f,c
  8258  00286E                     l2643:
  8259  00286E  C013  F014         	movff	___fladd@bexp,___fladd@grs
  8260  002872  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  8261  002876  C014  F012         	movff	___fladd@grs,___fladd@aexp
  8262  00287A  C005  F014         	movff	___fladd@b,___fladd@grs
  8263  00287E  C009  F005         	movff	___fladd@a,___fladd@b
  8264  002882  C014  F009         	movff	___fladd@grs,___fladd@a
  8265  002886  C006  F014         	movff	___fladd@b+1,___fladd@grs
  8266  00288A  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  8267  00288E  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  8268  002892  C007  F014         	movff	___fladd@b+2,___fladd@grs
  8269  002896  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  8270  00289A  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  8271  00289E  C008  F014         	movff	___fladd@b+3,___fladd@grs
  8272  0028A2  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  8273  0028A6  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  8274  0028AA                     l2673:
  8275  0028AA  0E00               	movlw	0
  8276  0028AC  6E14               	movwf	___fladd@grs,c
  8277  0028AE  5013               	movf	___fladd@bexp,w,c
  8278  0028B0  C012  F00D         	movff	___fladd@aexp,??___fladd
  8279  0028B4  6A0E               	clrf	(??___fladd+1)& (0+255),c
  8280  0028B6  5E0D               	subwf	??___fladd,f,c
  8281  0028B8  0E00               	movlw	0
  8282  0028BA  5A0E               	subwfb	??___fladd+1,f,c
  8283  0028BC  BE0E               	btfsc	??___fladd+1,7,c
  8284  0028BE  D02C               	goto	l780
  8285  0028C0  500E               	movf	??___fladd+1,w,c
  8286  0028C2  E104               	bnz	u2520
  8287  0028C4  0E1A               	movlw	26
  8288  0028C6  5C0D               	subwf	??___fladd,w,c
  8289  0028C8  A0D8               	btfss	status,0,c
  8290  0028CA  D026               	goto	l780
  8291  0028CC                     u2520:
  8292  0028CC  5005               	movf	___fladd@b,w,c
  8293  0028CE  1006               	iorwf	___fladd@b+1,w,c
  8294  0028D0  1007               	iorwf	___fladd@b+2,w,c
  8295  0028D2  1008               	iorwf	___fladd@b+3,w,c
  8296  0028D4  B4D8               	btfsc	status,2,c
  8297  0028D6  D002               	goto	u2530
  8298  0028D8  0E01               	movlw	1
  8299  0028DA  D001               	goto	u2540
  8300  0028DC                     u2530:
  8301  0028DC  0E00               	movlw	0
  8302  0028DE                     u2540:
  8303  0028DE  6E14               	movwf	___fladd@grs,c
  8304  0028E0  0E00               	movlw	0
  8305  0028E2  6E05               	movwf	___fladd@b,c
  8306  0028E4  0E00               	movlw	0
  8307  0028E6  6E06               	movwf	___fladd@b+1,c
  8308  0028E8  0E00               	movlw	0
  8309  0028EA  6E07               	movwf	___fladd@b+2,c
  8310  0028EC  0E00               	movlw	0
  8311  0028EE  6E08               	movwf	___fladd@b+3,c
  8312  0028F0  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  8313  0028F4  D015               	goto	u2570
  8314  0028F6                     l781:
  8315  0028F6  A014               	btfss	___fladd@grs,0,c
  8316  0028F8  D005               	goto	l2685
  8317  0028FA  90D8               	bcf	status,0,c
  8318  0028FC  3014               	rrcf	___fladd@grs,w,c
  8319  0028FE  0901               	iorlw	1
  8320  002900  6E14               	movwf	___fladd@grs,c
  8321  002902  D002               	goto	l2687
  8322  002904                     l2685:
  8323  002904  90D8               	bcf	status,0,c
  8324  002906  3214               	rrcf	___fladd@grs,f,c
  8325  002908                     l2687:
  8326  002908  B005               	btfsc	___fladd@b,0,c
  8327  00290A  8E14               	bsf	___fladd@grs,7,c
  8328  00290C  3408               	rlcf	___fladd@b+3,w,c
  8329  00290E  3208               	rrcf	___fladd@b+3,f,c
  8330  002910  3207               	rrcf	___fladd@b+2,f,c
  8331  002912  3206               	rrcf	___fladd@b+1,f,c
  8332  002914  3205               	rrcf	___fladd@b,f,c
  8333  002916  2A13               	incf	___fladd@bexp,f,c
  8334  002918                     l780:
  8335  002918  5012               	movf	___fladd@aexp,w,c
  8336  00291A  5C13               	subwf	___fladd@bexp,w,c
  8337  00291C  A0D8               	btfss	status,0,c
  8338  00291E  D7EB               	goto	l781
  8339  002920                     u2570:
  8340  002920  BC11               	btfsc	___fladd@signs,6,c
  8341  002922  D028               	goto	l2719
  8342  002924  5013               	movf	___fladd@bexp,w,c
  8343  002926  A4D8               	btfss	status,2,c
  8344  002928  D009               	goto	l2701
  8345  00292A  0E00               	movlw	0
  8346  00292C  6E05               	movwf	?___fladd,c
  8347  00292E  0E00               	movlw	0
  8348  002930  6E06               	movwf	?___fladd+1,c
  8349  002932  0E00               	movlw	0
  8350  002934  6E07               	movwf	?___fladd+2,c
  8351  002936  0E00               	movlw	0
  8352  002938  6E08               	movwf	?___fladd+3,c
  8353  00293A  0012               	return	
  8354  00293C                     l2701:
  8355  00293C  5009               	movf	___fladd@a,w,c
  8356  00293E  2605               	addwf	___fladd@b,f,c
  8357  002940  500A               	movf	___fladd@a+1,w,c
  8358  002942  2206               	addwfc	___fladd@b+1,f,c
  8359  002944  500B               	movf	___fladd@a+2,w,c
  8360  002946  2207               	addwfc	___fladd@b+2,f,c
  8361  002948  500C               	movf	___fladd@a+3,w,c
  8362  00294A  2208               	addwfc	___fladd@b+3,f,c
  8363  00294C  A008               	btfss	___fladd@b+3,0,c
  8364  00294E  D071               	goto	u2700
  8365  002950  A014               	btfss	___fladd@grs,0,c
  8366  002952  D005               	goto	l2709
  8367  002954  90D8               	bcf	status,0,c
  8368  002956  3014               	rrcf	___fladd@grs,w,c
  8369  002958  0901               	iorlw	1
  8370  00295A  6E14               	movwf	___fladd@grs,c
  8371  00295C  D002               	goto	l2711
  8372  00295E                     l2709:
  8373  00295E  90D8               	bcf	status,0,c
  8374  002960  3214               	rrcf	___fladd@grs,f,c
  8375  002962                     l2711:
  8376  002962  B005               	btfsc	___fladd@b,0,c
  8377  002964  8E14               	bsf	___fladd@grs,7,c
  8378  002966  3408               	rlcf	___fladd@b+3,w,c
  8379  002968  3208               	rrcf	___fladd@b+3,f,c
  8380  00296A  3207               	rrcf	___fladd@b+2,f,c
  8381  00296C  3206               	rrcf	___fladd@b+1,f,c
  8382  00296E  3205               	rrcf	___fladd@b,f,c
  8383  002970  2A13               	incf	___fladd@bexp,f,c
  8384  002972  D05F               	goto	u2700
  8385  002974                     l2719:
  8386  002974  5009               	movf	___fladd@a,w,c
  8387  002976  5C05               	subwf	___fladd@b,w,c
  8388  002978  500A               	movf	___fladd@a+1,w,c
  8389  00297A  5806               	subwfb	___fladd@b+1,w,c
  8390  00297C  500B               	movf	___fladd@a+2,w,c
  8391  00297E  5807               	subwfb	___fladd@b+2,w,c
  8392  002980  5008               	movf	___fladd@b+3,w,c
  8393  002982  0A80               	xorlw	128
  8394  002984  6E0D               	movwf	??___fladd& (0+255),c
  8395  002986  500C               	movf	___fladd@a+3,w,c
  8396  002988  0A80               	xorlw	128
  8397  00298A  580D               	subwfb	??___fladd& (0+255),w,c
  8398  00298C  B0D8               	btfsc	status,0,c
  8399  00298E  D025               	goto	l2729
  8400  002990  5005               	movf	___fladd@b,w,c
  8401  002992  5C09               	subwf	___fladd@a,w,c
  8402  002994  6E0D               	movwf	??___fladd& (0+255),c
  8403  002996  5006               	movf	___fladd@b+1,w,c
  8404  002998  580A               	subwfb	___fladd@a+1,w,c
  8405  00299A  6E0E               	movwf	(??___fladd+1)& (0+255),c
  8406  00299C  5007               	movf	___fladd@b+2,w,c
  8407  00299E  580B               	subwfb	___fladd@a+2,w,c
  8408  0029A0  6E0F               	movwf	(??___fladd+2)& (0+255),c
  8409  0029A2  5008               	movf	___fladd@b+3,w,c
  8410  0029A4  580C               	subwfb	___fladd@a+3,w,c
  8411  0029A6  6E10               	movwf	(??___fladd+3)& (0+255),c
  8412  0029A8  0EFF               	movlw	255
  8413  0029AA  240D               	addwf	??___fladd,w,c
  8414  0029AC  6E05               	movwf	___fladd@b,c
  8415  0029AE  0EFF               	movlw	255
  8416  0029B0  200E               	addwfc	??___fladd+1,w,c
  8417  0029B2  6E06               	movwf	___fladd@b+1,c
  8418  0029B4  0EFF               	movlw	255
  8419  0029B6  200F               	addwfc	??___fladd+2,w,c
  8420  0029B8  6E07               	movwf	___fladd@b+2,c
  8421  0029BA  0EFF               	movlw	255
  8422  0029BC  2010               	addwfc	??___fladd+3,w,c
  8423  0029BE  6E08               	movwf	___fladd@b+3,c
  8424  0029C0  0E80               	movlw	128
  8425  0029C2  1A11               	xorwf	___fladd@signs,f,c
  8426  0029C4  6C14               	negf	___fladd@grs,c
  8427  0029C6  5014               	movf	___fladd@grs,w,c
  8428  0029C8  A4D8               	btfss	status,2,c
  8429  0029CA  D00F               	goto	l796
  8430  0029CC  0E01               	movlw	1
  8431  0029CE  2605               	addwf	___fladd@b,f,c
  8432  0029D0  0E00               	movlw	0
  8433  0029D2  2206               	addwfc	___fladd@b+1,f,c
  8434  0029D4  2207               	addwfc	___fladd@b+2,f,c
  8435  0029D6  2208               	addwfc	___fladd@b+3,f,c
  8436  0029D8  D008               	goto	l796
  8437  0029DA                     l2729:
  8438  0029DA  5009               	movf	___fladd@a,w,c
  8439  0029DC  5E05               	subwf	___fladd@b,f,c
  8440  0029DE  500A               	movf	___fladd@a+1,w,c
  8441  0029E0  5A06               	subwfb	___fladd@b+1,f,c
  8442  0029E2  500B               	movf	___fladd@a+2,w,c
  8443  0029E4  5A07               	subwfb	___fladd@b+2,f,c
  8444  0029E6  500C               	movf	___fladd@a+3,w,c
  8445  0029E8  5A08               	subwfb	___fladd@b+3,f,c
  8446  0029EA                     l796:
  8447  0029EA  5005               	movf	___fladd@b,w,c
  8448  0029EC  1006               	iorwf	___fladd@b+1,w,c
  8449  0029EE  1007               	iorwf	___fladd@b+2,w,c
  8450  0029F0  1008               	iorwf	___fladd@b+3,w,c
  8451  0029F2  A4D8               	btfss	status,2,c
  8452  0029F4  D01C               	goto	l2753
  8453  0029F6  5014               	movf	___fladd@grs,w,c
  8454  0029F8  A4D8               	btfss	status,2,c
  8455  0029FA  D019               	goto	l2753
  8456  0029FC  0E00               	movlw	0
  8457  0029FE  6E05               	movwf	?___fladd,c
  8458  002A00  0E00               	movlw	0
  8459  002A02  6E06               	movwf	?___fladd+1,c
  8460  002A04  0E00               	movlw	0
  8461  002A06  6E07               	movwf	?___fladd+2,c
  8462  002A08  0E00               	movlw	0
  8463  002A0A  6E08               	movwf	?___fladd+3,c
  8464  002A0C  0012               	return	
  8465  002A0E                     l2737:
  8466  002A0E  90D8               	bcf	status,0,c
  8467  002A10  3605               	rlcf	___fladd@b,f,c
  8468  002A12  3606               	rlcf	___fladd@b+1,f,c
  8469  002A14  3607               	rlcf	___fladd@b+2,f,c
  8470  002A16  3608               	rlcf	___fladd@b+3,f,c
  8471  002A18  BE14               	btfsc	___fladd@grs,7,c
  8472  002A1A  8005               	bsf	___fladd@b,0,c
  8473  002A1C  A014               	btfss	___fladd@grs,0,c
  8474  002A1E  D002               	goto	l2747
  8475  002A20  80D8               	bsf	status,0,c
  8476  002A22  D001               	goto	L4
  8477  002A24                     l2747:
  8478  002A24  90D8               	bcf	status,0,c
  8479  002A26                     L4:
  8480  002A26  3614               	rlcf	___fladd@grs,f,c
  8481  002A28  5013               	movf	___fladd@bexp,w,c
  8482  002A2A  A4D8               	btfss	status,2,c
  8483  002A2C  0613               	decf	___fladd@bexp,f,c
  8484  002A2E                     l2753:
  8485  002A2E  AE07               	btfss	___fladd@b+2,7,c
  8486  002A30  D7EE               	goto	l2737
  8487  002A32                     u2700:
  8488  002A32  0E00               	movlw	0
  8489  002A34  6E12               	movwf	___fladd@aexp,c
  8490  002A36  AE14               	btfss	___fladd@grs,7,c
  8491  002A38  D00B               	goto	l805
  8492  002A3A  C014  F00D         	movff	___fladd@grs,??___fladd
  8493  002A3E  0E7F               	movlw	127
  8494  002A40  160D               	andwf	??___fladd,f,c
  8495  002A42  B4D8               	btfsc	status,2,c
  8496  002A44  D003               	goto	l806
  8497  002A46                     u2720:
  8498  002A46  0E01               	movlw	1
  8499  002A48  6E12               	movwf	___fladd@aexp,c
  8500  002A4A  D002               	goto	l805
  8501  002A4C                     l806:
  8502  002A4C  B005               	btfsc	___fladd@b,0,c
  8503  002A4E  D7FB               	goto	u2720
  8504  002A50                     l805:
  8505  002A50  5012               	movf	___fladd@aexp,w,c
  8506  002A52  B4D8               	btfsc	status,2,c
  8507  002A54  D020               	goto	l2773
  8508  002A56  0E01               	movlw	1
  8509  002A58  2605               	addwf	___fladd@b,f,c
  8510  002A5A  0E00               	movlw	0
  8511  002A5C  2206               	addwfc	___fladd@b+1,f,c
  8512  002A5E  2207               	addwfc	___fladd@b+2,f,c
  8513  002A60  2208               	addwfc	___fladd@b+3,f,c
  8514  002A62  A008               	btfss	___fladd@b+3,0,c
  8515  002A64  D018               	goto	l2773
  8516  002A66  C005  F00D         	movff	___fladd@b,??___fladd
  8517  002A6A  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  8518  002A6E  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  8519  002A72  C008  F010         	movff	___fladd@b+3,??___fladd+3
  8520  002A76  3410               	rlcf	??___fladd+3,w,c
  8521  002A78  3210               	rrcf	??___fladd+3,f,c
  8522  002A7A  320F               	rrcf	??___fladd+2,f,c
  8523  002A7C  320E               	rrcf	??___fladd+1,f,c
  8524  002A7E  320D               	rrcf	??___fladd,f,c
  8525  002A80  C00D  F005         	movff	??___fladd,___fladd@b
  8526  002A84  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  8527  002A88  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  8528  002A8C  C010  F008         	movff	??___fladd+3,___fladd@b+3
  8529  002A90  2813               	incf	___fladd@bexp,w,c
  8530  002A92  A4D8               	btfss	status,2,c
  8531  002A94  2A13               	incf	___fladd@bexp,f,c
  8532  002A96                     l2773:
  8533  002A96  2813               	incf	___fladd@bexp,w,c
  8534  002A98  B4D8               	btfsc	status,2,c
  8535  002A9A  D003               	goto	u2780
  8536  002A9C  5013               	movf	___fladd@bexp,w,c
  8537  002A9E  A4D8               	btfss	status,2,c
  8538  002AA0  D00D               	goto	l2781
  8539  002AA2                     u2780:
  8540  002AA2  0E00               	movlw	0
  8541  002AA4  6E05               	movwf	___fladd@b,c
  8542  002AA6  0E00               	movlw	0
  8543  002AA8  6E06               	movwf	___fladd@b+1,c
  8544  002AAA  0E00               	movlw	0
  8545  002AAC  6E07               	movwf	___fladd@b+2,c
  8546  002AAE  0E00               	movlw	0
  8547  002AB0  6E08               	movwf	___fladd@b+3,c
  8548  002AB2  5013               	movf	___fladd@bexp,w,c
  8549  002AB4  A4D8               	btfss	status,2,c
  8550  002AB6  D002               	goto	l2781
  8551  002AB8  0E00               	movlw	0
  8552  002ABA  6E11               	movwf	___fladd@signs,c
  8553  002ABC                     l2781:
  8554  002ABC  A013               	btfss	___fladd@bexp,0,c
  8555  002ABE  D002               	goto	l2785
  8556  002AC0  8E07               	bsf	___fladd@b+2,7,c
  8557  002AC2  D001               	goto	l2787
  8558  002AC4                     l2785:
  8559  002AC4  9E07               	bcf	___fladd@b+2,7,c
  8560  002AC6                     l2787:
  8561  002AC6  90D8               	bcf	status,0,c
  8562  002AC8  3013               	rrcf	___fladd@bexp,w,c
  8563  002ACA  6E08               	movwf	___fladd@b+3,c
  8564  002ACC  BE11               	btfsc	___fladd@signs,7,c
  8565  002ACE  8E08               	bsf	___fladd@b+3,7,c
  8566  002AD0  C005  F005         	movff	___fladd@b,?___fladd
  8567  002AD4  C006  F006         	movff	___fladd@b+1,?___fladd+1
  8568  002AD8  C007  F007         	movff	___fladd@b+2,?___fladd+2
  8569  002ADC  C008  F008         	movff	___fladd@b+3,?___fladd+3
  8570  002AE0  0012               	return		;funcret
  8571  002AE2                     __end_of___fladd:
  8572                           	opt callstack 0
  8573                           
  8574 ;; *************** function ___flneg *****************
  8575 ;; Defined at:
  8576 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
  8577 ;; Parameters:    Size  Location     Type
  8578 ;;  f1              4    0[COMRAM] unsigned char 
  8579 ;; Auto vars:     Size  Location     Type
  8580 ;;		None
  8581 ;; Return value:  Size  Location     Type
  8582 ;;                  4    0[COMRAM] unsigned char 
  8583 ;; Registers used:
  8584 ;;		wreg, status,2, status,0
  8585 ;; Tracked objects:
  8586 ;;		On entry : 0/0
  8587 ;;		On exit  : 0/0
  8588 ;;		Unchanged: 0/0
  8589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8590 ;;      Params:         4       0       0       0
  8591 ;;      Locals:         0       0       0       0
  8592 ;;      Temps:          0       0       0       0
  8593 ;;      Totals:         4       0       0       0
  8594 ;;Total ram usage:        4 bytes
  8595 ;; Hardware stack levels used:    1
  8596 ;; This function calls:
  8597 ;;		Nothing
  8598 ;; This function is called by:
  8599 ;;		_SVPWM_SetVectorTimes
  8600 ;; This function uses a non-reentrant model
  8601 ;;
  8602                           
  8603                           	psect	text37
  8604  001154                     __ptext37:
  8605                           	opt callstack 0
  8606  001154                     ___flneg:
  8607                           	opt callstack 27
  8608                           
  8609                           ;incstack = 0
  8610  001154  5001               	movf	___flneg@f1,w,c
  8611  001156  1002               	iorwf	___flneg@f1+1,w,c
  8612  001158  1003               	iorwf	___flneg@f1+2,w,c
  8613  00115A  1004               	iorwf	___flneg@f1+3,w,c
  8614  00115C  B4D8               	btfsc	status,2,c
  8615  00115E  D008               	goto	l3129
  8616  001160  0E00               	movlw	0
  8617  001162  1A01               	xorwf	___flneg@f1,f,c
  8618  001164  0E00               	movlw	0
  8619  001166  1A02               	xorwf	___flneg@f1+1,f,c
  8620  001168  0E00               	movlw	0
  8621  00116A  1A03               	xorwf	___flneg@f1+2,f,c
  8622  00116C  0E80               	movlw	128
  8623  00116E  1A04               	xorwf	___flneg@f1+3,f,c
  8624  001170                     l3129:
  8625  001170  C001  F001         	movff	___flneg@f1,?___flneg
  8626  001174  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  8627  001178  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  8628  00117C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  8629  001180  0012               	return		;funcret
  8630  001182                     __end_of___flneg:
  8631                           	opt callstack 0
  8632                           
  8633 ;; *************** function ___flmul *****************
  8634 ;; Defined at:
  8635 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;  b               4   20[COMRAM] unsigned char 
  8638 ;;  a               4   24[COMRAM] unsigned char 
  8639 ;; Auto vars:     Size  Location     Type
  8640 ;;  prod            4   39[COMRAM] struct .
  8641 ;;  grs             4   33[COMRAM] unsigned long 
  8642 ;;  temp            2   43[COMRAM] struct .
  8643 ;;  bexp            1   38[COMRAM] unsigned char 
  8644 ;;  aexp            1   37[COMRAM] unsigned char 
  8645 ;;  sign            1   32[COMRAM] unsigned char 
  8646 ;; Return value:  Size  Location     Type
  8647 ;;                  4   20[COMRAM] unsigned char 
  8648 ;; Registers used:
  8649 ;;		wreg, status,2, status,0, prodl, prodh
  8650 ;; Tracked objects:
  8651 ;;		On entry : 0/0
  8652 ;;		On exit  : 0/0
  8653 ;;		Unchanged: 0/0
  8654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8655 ;;      Params:         8       0       0       0
  8656 ;;      Locals:        13       0       0       0
  8657 ;;      Temps:          4       0       0       0
  8658 ;;      Totals:        25       0       0       0
  8659 ;;Total ram usage:       25 bytes
  8660 ;; Hardware stack levels used:    1
  8661 ;; This function calls:
  8662 ;;		Nothing
  8663 ;; This function is called by:
  8664 ;;		_SVPWM_SetVectorTimes
  8665 ;; This function uses a non-reentrant model
  8666 ;;
  8667                           
  8668                           	psect	text38
  8669  002AE2                     __ptext38:
  8670                           	opt callstack 0
  8671  002AE2                     ___flmul:
  8672                           	opt callstack 27
  8673                           
  8674                           ;incstack = 0
  8675  002AE2  5018               	movf	___flmul@b+3,w,c
  8676  002AE4  0B80               	andlw	128
  8677  002AE6  6E21               	movwf	___flmul@sign,c
  8678  002AE8  5018               	movf	___flmul@b+3,w,c
  8679  002AEA  2418               	addwf	___flmul@b+3,w,c
  8680  002AEC  6E27               	movwf	___flmul@bexp,c
  8681  002AEE  BE17               	btfsc	___flmul@b+2,7,c
  8682  002AF0  8027               	bsf	___flmul@bexp,0,c
  8683  002AF2  5027               	movf	___flmul@bexp,w,c
  8684  002AF4  B4D8               	btfsc	status,2,c
  8685  002AF6  D00D               	goto	l3003
  8686  002AF8  2827               	incf	___flmul@bexp,w,c
  8687  002AFA  A4D8               	btfss	status,2,c
  8688  002AFC  D008               	goto	l3001
  8689  002AFE  0E00               	movlw	0
  8690  002B00  6E15               	movwf	___flmul@b,c
  8691  002B02  0E00               	movlw	0
  8692  002B04  6E16               	movwf	___flmul@b+1,c
  8693  002B06  0E00               	movlw	0
  8694  002B08  6E17               	movwf	___flmul@b+2,c
  8695  002B0A  0E00               	movlw	0
  8696  002B0C  6E18               	movwf	___flmul@b+3,c
  8697  002B0E                     l3001:
  8698  002B0E  8E17               	bsf	___flmul@b+2,7,c
  8699  002B10  D008               	goto	l3005
  8700  002B12                     l3003:
  8701  002B12  0E00               	movlw	0
  8702  002B14  6E15               	movwf	___flmul@b,c
  8703  002B16  0E00               	movlw	0
  8704  002B18  6E16               	movwf	___flmul@b+1,c
  8705  002B1A  0E00               	movlw	0
  8706  002B1C  6E17               	movwf	___flmul@b+2,c
  8707  002B1E  0E00               	movlw	0
  8708  002B20  6E18               	movwf	___flmul@b+3,c
  8709  002B22                     l3005:
  8710  002B22  501C               	movf	___flmul@a+3,w,c
  8711  002B24  0B80               	andlw	128
  8712  002B26  1A21               	xorwf	___flmul@sign,f,c
  8713  002B28  501C               	movf	___flmul@a+3,w,c
  8714  002B2A  241C               	addwf	___flmul@a+3,w,c
  8715  002B2C  6E26               	movwf	___flmul@aexp,c
  8716  002B2E  BE1B               	btfsc	___flmul@a+2,7,c
  8717  002B30  8026               	bsf	___flmul@aexp,0,c
  8718  002B32  5026               	movf	___flmul@aexp,w,c
  8719  002B34  B4D8               	btfsc	status,2,c
  8720  002B36  D00D               	goto	l3021
  8721  002B38  2826               	incf	___flmul@aexp,w,c
  8722  002B3A  A4D8               	btfss	status,2,c
  8723  002B3C  D008               	goto	l3019
  8724  002B3E  0E00               	movlw	0
  8725  002B40  6E19               	movwf	___flmul@a,c
  8726  002B42  0E00               	movlw	0
  8727  002B44  6E1A               	movwf	___flmul@a+1,c
  8728  002B46  0E00               	movlw	0
  8729  002B48  6E1B               	movwf	___flmul@a+2,c
  8730  002B4A  0E00               	movlw	0
  8731  002B4C  6E1C               	movwf	___flmul@a+3,c
  8732  002B4E                     l3019:
  8733  002B4E  8E1B               	bsf	___flmul@a+2,7,c
  8734  002B50  D008               	goto	l865
  8735  002B52                     l3021:
  8736  002B52  0E00               	movlw	0
  8737  002B54  6E19               	movwf	___flmul@a,c
  8738  002B56  0E00               	movlw	0
  8739  002B58  6E1A               	movwf	___flmul@a+1,c
  8740  002B5A  0E00               	movlw	0
  8741  002B5C  6E1B               	movwf	___flmul@a+2,c
  8742  002B5E  0E00               	movlw	0
  8743  002B60  6E1C               	movwf	___flmul@a+3,c
  8744  002B62                     l865:
  8745  002B62  5026               	movf	___flmul@aexp,w,c
  8746  002B64  B4D8               	btfsc	status,2,c
  8747  002B66  D003               	goto	u3150
  8748  002B68  5027               	movf	___flmul@bexp,w,c
  8749  002B6A  A4D8               	btfss	status,2,c
  8750  002B6C  D009               	goto	l3029
  8751  002B6E                     u3150:
  8752  002B6E  0E00               	movlw	0
  8753  002B70  6E15               	movwf	?___flmul,c
  8754  002B72  0E00               	movlw	0
  8755  002B74  6E16               	movwf	?___flmul+1,c
  8756  002B76  0E00               	movlw	0
  8757  002B78  6E17               	movwf	?___flmul+2,c
  8758  002B7A  0E00               	movlw	0
  8759  002B7C  6E18               	movwf	?___flmul+3,c
  8760  002B7E  0012               	return	
  8761  002B80                     l3029:
  8762  002B80  501B               	movf	___flmul@a+2,w,c
  8763  002B82  0215               	mulwf	___flmul@b,c
  8764  002B84  CFF3 F02C          	movff	prodl,___flmul@temp
  8765  002B88  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8766  002B8C  502C               	movf	___flmul@temp,w,c
  8767  002B8E  6E22               	movwf	___flmul@grs,c
  8768  002B90  6A23               	clrf	___flmul@grs+1,c
  8769  002B92  6A24               	clrf	___flmul@grs+2,c
  8770  002B94  6A25               	clrf	___flmul@grs+3,c
  8771  002B96  502D               	movf	___flmul@temp+1,w,c
  8772  002B98  6E28               	movwf	___flmul@prod,c
  8773  002B9A  6A29               	clrf	___flmul@prod+1,c
  8774  002B9C  6A2A               	clrf	___flmul@prod+2,c
  8775  002B9E  6A2B               	clrf	___flmul@prod+3,c
  8776  002BA0  501A               	movf	___flmul@a+1,w,c
  8777  002BA2  0216               	mulwf	___flmul@b+1,c
  8778  002BA4  CFF3 F02C          	movff	prodl,___flmul@temp
  8779  002BA8  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8780  002BAC  502C               	movf	___flmul@temp,w,c
  8781  002BAE  2622               	addwf	___flmul@grs,f,c
  8782  002BB0  0E00               	movlw	0
  8783  002BB2  2223               	addwfc	___flmul@grs+1,f,c
  8784  002BB4  2224               	addwfc	___flmul@grs+2,f,c
  8785  002BB6  2225               	addwfc	___flmul@grs+3,f,c
  8786  002BB8  502D               	movf	___flmul@temp+1,w,c
  8787  002BBA  2628               	addwf	___flmul@prod,f,c
  8788  002BBC  0E00               	movlw	0
  8789  002BBE  2229               	addwfc	___flmul@prod+1,f,c
  8790  002BC0  222A               	addwfc	___flmul@prod+2,f,c
  8791  002BC2  222B               	addwfc	___flmul@prod+3,f,c
  8792  002BC4  5019               	movf	___flmul@a,w,c
  8793  002BC6  0217               	mulwf	___flmul@b+2,c
  8794  002BC8  CFF3 F02C          	movff	prodl,___flmul@temp
  8795  002BCC  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8796  002BD0  502C               	movf	___flmul@temp,w,c
  8797  002BD2  2622               	addwf	___flmul@grs,f,c
  8798  002BD4  0E00               	movlw	0
  8799  002BD6  2223               	addwfc	___flmul@grs+1,f,c
  8800  002BD8  2224               	addwfc	___flmul@grs+2,f,c
  8801  002BDA  2225               	addwfc	___flmul@grs+3,f,c
  8802  002BDC  502D               	movf	___flmul@temp+1,w,c
  8803  002BDE  2628               	addwf	___flmul@prod,f,c
  8804  002BE0  0E00               	movlw	0
  8805  002BE2  2229               	addwfc	___flmul@prod+1,f,c
  8806  002BE4  222A               	addwfc	___flmul@prod+2,f,c
  8807  002BE6  222B               	addwfc	___flmul@prod+3,f,c
  8808  002BE8  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  8809  002BEC  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  8810  002BF0  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  8811  002BF4  6A22               	clrf	___flmul@grs,c
  8812  002BF6  5019               	movf	___flmul@a,w,c
  8813  002BF8  0216               	mulwf	___flmul@b+1,c
  8814  002BFA  CFF3 F02C          	movff	prodl,___flmul@temp
  8815  002BFE  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8816  002C02  502C               	movf	___flmul@temp,w,c
  8817  002C04  2622               	addwf	___flmul@grs,f,c
  8818  002C06  502D               	movf	___flmul@temp+1,w,c
  8819  002C08  2223               	addwfc	___flmul@grs+1,f,c
  8820  002C0A  0E00               	movlw	0
  8821  002C0C  2224               	addwfc	___flmul@grs+2,f,c
  8822  002C0E  0E00               	movlw	0
  8823  002C10  2225               	addwfc	___flmul@grs+3,f,c
  8824  002C12  501A               	movf	___flmul@a+1,w,c
  8825  002C14  0215               	mulwf	___flmul@b,c
  8826  002C16  CFF3 F02C          	movff	prodl,___flmul@temp
  8827  002C1A  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8828  002C1E  502C               	movf	___flmul@temp,w,c
  8829  002C20  2622               	addwf	___flmul@grs,f,c
  8830  002C22  502D               	movf	___flmul@temp+1,w,c
  8831  002C24  2223               	addwfc	___flmul@grs+1,f,c
  8832  002C26  0E00               	movlw	0
  8833  002C28  2224               	addwfc	___flmul@grs+2,f,c
  8834  002C2A  0E00               	movlw	0
  8835  002C2C  2225               	addwfc	___flmul@grs+3,f,c
  8836  002C2E  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  8837  002C32  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  8838  002C36  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  8839  002C3A  6A22               	clrf	___flmul@grs,c
  8840  002C3C  5019               	movf	___flmul@a,w,c
  8841  002C3E  0215               	mulwf	___flmul@b,c
  8842  002C40  CFF3 F02C          	movff	prodl,___flmul@temp
  8843  002C44  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8844  002C48  502C               	movf	___flmul@temp,w,c
  8845  002C4A  2622               	addwf	___flmul@grs,f,c
  8846  002C4C  502D               	movf	___flmul@temp+1,w,c
  8847  002C4E  2223               	addwfc	___flmul@grs+1,f,c
  8848  002C50  0E00               	movlw	0
  8849  002C52  2224               	addwfc	___flmul@grs+2,f,c
  8850  002C54  0E00               	movlw	0
  8851  002C56  2225               	addwfc	___flmul@grs+3,f,c
  8852  002C58  501B               	movf	___flmul@a+2,w,c
  8853  002C5A  0216               	mulwf	___flmul@b+1,c
  8854  002C5C  CFF3 F02C          	movff	prodl,___flmul@temp
  8855  002C60  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8856  002C64  502C               	movf	___flmul@temp,w,c
  8857  002C66  2628               	addwf	___flmul@prod,f,c
  8858  002C68  502D               	movf	___flmul@temp+1,w,c
  8859  002C6A  2229               	addwfc	___flmul@prod+1,f,c
  8860  002C6C  0E00               	movlw	0
  8861  002C6E  222A               	addwfc	___flmul@prod+2,f,c
  8862  002C70  0E00               	movlw	0
  8863  002C72  222B               	addwfc	___flmul@prod+3,f,c
  8864  002C74  501A               	movf	___flmul@a+1,w,c
  8865  002C76  0217               	mulwf	___flmul@b+2,c
  8866  002C78  CFF3 F02C          	movff	prodl,___flmul@temp
  8867  002C7C  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8868  002C80  502C               	movf	___flmul@temp,w,c
  8869  002C82  2628               	addwf	___flmul@prod,f,c
  8870  002C84  502D               	movf	___flmul@temp+1,w,c
  8871  002C86  2229               	addwfc	___flmul@prod+1,f,c
  8872  002C88  0E00               	movlw	0
  8873  002C8A  222A               	addwfc	___flmul@prod+2,f,c
  8874  002C8C  0E00               	movlw	0
  8875  002C8E  222B               	addwfc	___flmul@prod+3,f,c
  8876  002C90  501B               	movf	___flmul@a+2,w,c
  8877  002C92  0217               	mulwf	___flmul@b+2,c
  8878  002C94  CFF3 F02C          	movff	prodl,___flmul@temp
  8879  002C98  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8880  002C9C  502C               	movf	___flmul@temp,w,c
  8881  002C9E  6E1D               	movwf	??___flmul& (0+255),c
  8882  002CA0  502D               	movf	___flmul@temp+1,w,c
  8883  002CA2  6E1E               	movwf	(??___flmul+1)& (0+255),c
  8884  002CA4  6A1F               	clrf	(??___flmul+2)& (0+255),c
  8885  002CA6  6A20               	clrf	(??___flmul+3)& (0+255),c
  8886  002CA8  C01F  F020         	movff	??___flmul+2,??___flmul+3
  8887  002CAC  C01E  F01F         	movff	??___flmul+1,??___flmul+2
  8888  002CB0  C01D  F01E         	movff	??___flmul,??___flmul+1
  8889  002CB4  6A1D               	clrf	??___flmul,c
  8890  002CB6  501D               	movf	??___flmul,w,c
  8891  002CB8  2628               	addwf	___flmul@prod,f,c
  8892  002CBA  501E               	movf	??___flmul+1,w,c
  8893  002CBC  2229               	addwfc	___flmul@prod+1,f,c
  8894  002CBE  501F               	movf	??___flmul+2,w,c
  8895  002CC0  222A               	addwfc	___flmul@prod+2,f,c
  8896  002CC2  5020               	movf	??___flmul+3,w,c
  8897  002CC4  222B               	addwfc	___flmul@prod+3,f,c
  8898  002CC6  C022  F01D         	movff	___flmul@grs,??___flmul
  8899  002CCA  C023  F01E         	movff	___flmul@grs+1,??___flmul+1
  8900  002CCE  C024  F01F         	movff	___flmul@grs+2,??___flmul+2
  8901  002CD2  C025  F020         	movff	___flmul@grs+3,??___flmul+3
  8902  002CD6  0E19               	movlw	25
  8903  002CD8  D005               	goto	u3160
  8904  002CDA                     u3165:
  8905  002CDA  90D8               	bcf	status,0,c
  8906  002CDC  3220               	rrcf	??___flmul+3,f,c
  8907  002CDE  321F               	rrcf	??___flmul+2,f,c
  8908  002CE0  321E               	rrcf	??___flmul+1,f,c
  8909  002CE2  321D               	rrcf	??___flmul,f,c
  8910  002CE4                     u3160:
  8911  002CE4  2EE8               	decfsz	wreg,f,c
  8912  002CE6  D7F9               	goto	u3165
  8913  002CE8  501D               	movf	??___flmul,w,c
  8914  002CEA  2628               	addwf	___flmul@prod,f,c
  8915  002CEC  501E               	movf	??___flmul+1,w,c
  8916  002CEE  2229               	addwfc	___flmul@prod+1,f,c
  8917  002CF0  501F               	movf	??___flmul+2,w,c
  8918  002CF2  222A               	addwfc	___flmul@prod+2,f,c
  8919  002CF4  5020               	movf	??___flmul+3,w,c
  8920  002CF6  222B               	addwfc	___flmul@prod+3,f,c
  8921  002CF8  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  8922  002CFC  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  8923  002D00  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  8924  002D04  6A22               	clrf	___flmul@grs,c
  8925  002D06  5026               	movf	___flmul@aexp,w,c
  8926  002D08  C027  F01D         	movff	___flmul@bexp,??___flmul
  8927  002D0C  6A1E               	clrf	(??___flmul+1)& (0+255),c
  8928  002D0E  261D               	addwf	??___flmul,f,c
  8929  002D10  0E00               	movlw	0
  8930  002D12  221E               	addwfc	??___flmul+1,f,c
  8931  002D14  0E82               	movlw	130
  8932  002D16  241D               	addwf	??___flmul,w,c
  8933  002D18  6E2C               	movwf	___flmul@temp,c
  8934  002D1A  0EFF               	movlw	255
  8935  002D1C  201E               	addwfc	??___flmul+1,w,c
  8936  002D1E  6E2D               	movwf	___flmul@temp+1,c
  8937  002D20  D00F               	goto	l3077
  8938  002D22                     l3071:
  8939  002D22  90D8               	bcf	status,0,c
  8940  002D24  3628               	rlcf	___flmul@prod,f,c
  8941  002D26  3629               	rlcf	___flmul@prod+1,f,c
  8942  002D28  362A               	rlcf	___flmul@prod+2,f,c
  8943  002D2A  362B               	rlcf	___flmul@prod+3,f,c
  8944  002D2C  BE25               	btfsc	___flmul@grs+3,7,c
  8945  002D2E  8028               	bsf	___flmul@prod,0,c
  8946  002D30  90D8               	bcf	status,0,c
  8947  002D32  3622               	rlcf	___flmul@grs,f,c
  8948  002D34  3623               	rlcf	___flmul@grs+1,f,c
  8949  002D36  3624               	rlcf	___flmul@grs+2,f,c
  8950  002D38  3625               	rlcf	___flmul@grs+3,f,c
  8951  002D3A  062C               	decf	___flmul@temp,f,c
  8952  002D3C  A0D8               	btfss	status,0,c
  8953  002D3E  062D               	decf	___flmul@temp+1,f,c
  8954  002D40                     l3077:
  8955  002D40  AE2A               	btfss	___flmul@prod+2,7,c
  8956  002D42  D7EF               	goto	l3071
  8957  002D44  0E00               	movlw	0
  8958  002D46  6E26               	movwf	___flmul@aexp,c
  8959  002D48  AE25               	btfss	___flmul@grs+3,7,c
  8960  002D4A  D017               	goto	l874
  8961  002D4C  0EFF               	movlw	255
  8962  002D4E  1422               	andwf	___flmul@grs,w,c
  8963  002D50  6E1D               	movwf	??___flmul& (0+255),c
  8964  002D52  0EFF               	movlw	255
  8965  002D54  1423               	andwf	___flmul@grs+1,w,c
  8966  002D56  6E1E               	movwf	(??___flmul+1)& (0+255),c
  8967  002D58  0EFF               	movlw	255
  8968  002D5A  1424               	andwf	___flmul@grs+2,w,c
  8969  002D5C  6E1F               	movwf	(??___flmul+2)& (0+255),c
  8970  002D5E  0E7F               	movlw	127
  8971  002D60  1425               	andwf	___flmul@grs+3,w,c
  8972  002D62  6E20               	movwf	(??___flmul+3)& (0+255),c
  8973  002D64  501D               	movf	??___flmul,w,c
  8974  002D66  101E               	iorwf	??___flmul+1,w,c
  8975  002D68  101F               	iorwf	??___flmul+2,w,c
  8976  002D6A  1020               	iorwf	??___flmul+3,w,c
  8977  002D6C  B4D8               	btfsc	status,2,c
  8978  002D6E  D003               	goto	l875
  8979  002D70                     u3200:
  8980  002D70  0E01               	movlw	1
  8981  002D72  6E26               	movwf	___flmul@aexp,c
  8982  002D74  D002               	goto	l874
  8983  002D76                     l875:
  8984  002D76  B028               	btfsc	___flmul@prod,0,c
  8985  002D78  D7FB               	goto	u3200
  8986  002D7A                     l874:
  8987  002D7A  5026               	movf	___flmul@aexp,w,c
  8988  002D7C  B4D8               	btfsc	status,2,c
  8989  002D7E  D01F               	goto	l3097
  8990  002D80  0E01               	movlw	1
  8991  002D82  2628               	addwf	___flmul@prod,f,c
  8992  002D84  0E00               	movlw	0
  8993  002D86  2229               	addwfc	___flmul@prod+1,f,c
  8994  002D88  222A               	addwfc	___flmul@prod+2,f,c
  8995  002D8A  222B               	addwfc	___flmul@prod+3,f,c
  8996  002D8C  A02B               	btfss	___flmul@prod+3,0,c
  8997  002D8E  D017               	goto	l3097
  8998  002D90  C028  F01D         	movff	___flmul@prod,??___flmul
  8999  002D94  C029  F01E         	movff	___flmul@prod+1,??___flmul+1
  9000  002D98  C02A  F01F         	movff	___flmul@prod+2,??___flmul+2
  9001  002D9C  C02B  F020         	movff	___flmul@prod+3,??___flmul+3
  9002  002DA0  3420               	rlcf	??___flmul+3,w,c
  9003  002DA2  3220               	rrcf	??___flmul+3,f,c
  9004  002DA4  321F               	rrcf	??___flmul+2,f,c
  9005  002DA6  321E               	rrcf	??___flmul+1,f,c
  9006  002DA8  321D               	rrcf	??___flmul,f,c
  9007  002DAA  C01D  F028         	movff	??___flmul,___flmul@prod
  9008  002DAE  C01E  F029         	movff	??___flmul+1,___flmul@prod+1
  9009  002DB2  C01F  F02A         	movff	??___flmul+2,___flmul@prod+2
  9010  002DB6  C020  F02B         	movff	??___flmul+3,___flmul@prod+3
  9011  002DBA  4A2C               	infsnz	___flmul@temp,f,c
  9012  002DBC  2A2D               	incf	___flmul@temp+1,f,c
  9013  002DBE                     l3097:
  9014  002DBE  BE2D               	btfsc	___flmul@temp+1,7,c
  9015  002DC0  D00D               	goto	l3101
  9016  002DC2  502D               	movf	___flmul@temp+1,w,c
  9017  002DC4  E103               	bnz	u3240
  9018  002DC6  282C               	incf	___flmul@temp,w,c
  9019  002DC8  A0D8               	btfss	status,0,c
  9020  002DCA  D008               	goto	l3101
  9021  002DCC                     u3240:
  9022  002DCC  0E00               	movlw	0
  9023  002DCE  6E28               	movwf	___flmul@prod,c
  9024  002DD0  0E00               	movlw	0
  9025  002DD2  6E29               	movwf	___flmul@prod+1,c
  9026  002DD4  0E80               	movlw	128
  9027  002DD6  6E2A               	movwf	___flmul@prod+2,c
  9028  002DD8  0E7F               	movlw	127
  9029  002DDA  D020               	goto	L5
  9030  002DDC                     l3101:
  9031  002DDC  BE2D               	btfsc	___flmul@temp+1,7,c
  9032  002DDE  D005               	goto	u3250
  9033  002DE0  502D               	movf	___flmul@temp+1,w,c
  9034  002DE2  E10E               	bnz	l882
  9035  002DE4  042C               	decf	___flmul@temp,w,c
  9036  002DE6  B0D8               	btfsc	status,0,c
  9037  002DE8  D00B               	goto	l882
  9038  002DEA                     u3250:
  9039  002DEA  0E00               	movlw	0
  9040  002DEC  6E28               	movwf	___flmul@prod,c
  9041  002DEE  0E00               	movlw	0
  9042  002DF0  6E29               	movwf	___flmul@prod+1,c
  9043  002DF2  0E00               	movlw	0
  9044  002DF4  6E2A               	movwf	___flmul@prod+2,c
  9045  002DF6  0E00               	movlw	0
  9046  002DF8  6E2B               	movwf	___flmul@prod+3,c
  9047  002DFA  0E00               	movlw	0
  9048  002DFC  6E21               	movwf	___flmul@sign,c
  9049  002DFE  D00F               	goto	l3113
  9050  002E00                     l882:
  9051  002E00  C02C  F027         	movff	___flmul@temp,___flmul@bexp
  9052  002E04  0EFF               	movlw	255
  9053  002E06  1628               	andwf	___flmul@prod,f,c
  9054  002E08  0EFF               	movlw	255
  9055  002E0A  1629               	andwf	___flmul@prod+1,f,c
  9056  002E0C  0E7F               	movlw	127
  9057  002E0E  162A               	andwf	___flmul@prod+2,f,c
  9058  002E10  0E00               	movlw	0
  9059  002E12  162B               	andwf	___flmul@prod+3,f,c
  9060  002E14  B027               	btfsc	___flmul@bexp,0,c
  9061  002E16  8E2A               	bsf	___flmul@prod+2,7,c
  9062  002E18  90D8               	bcf	status,0,c
  9063  002E1A  3027               	rrcf	___flmul@bexp,w,c
  9064  002E1C                     L5:
  9065  002E1C  6E2B               	movwf	___flmul@prod+3,c
  9066  002E1E                     l3113:
  9067  002E1E  5021               	movf	___flmul@sign,w,c
  9068  002E20  122B               	iorwf	___flmul@prod+3,f,c
  9069  002E22  C028  F015         	movff	___flmul@prod,?___flmul
  9070  002E26  C029  F016         	movff	___flmul@prod+1,?___flmul+1
  9071  002E2A  C02A  F017         	movff	___flmul@prod+2,?___flmul+2
  9072  002E2E  C02B  F018         	movff	___flmul@prod+3,?___flmul+3
  9073  002E32  0012               	return		;funcret
  9074  002E34                     __end_of___flmul:
  9075                           	opt callstack 0
  9076                           
  9077 ;; *************** function _SVPWM_SetNextRelativeState *****************
  9078 ;; Defined at:
  9079 ;;		line 109 in file "../functions.h"
  9080 ;; Parameters:    Size  Location     Type
  9081 ;;  pm              2    0[COMRAM] PTR struct .
  9082 ;;		 -> pwmBoi(50), 
  9083 ;; Auto vars:     Size  Location     Type
  9084 ;;		None
  9085 ;; Return value:  Size  Location     Type
  9086 ;;                  1    wreg      void 
  9087 ;; Registers used:
  9088 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9089 ;; Tracked objects:
  9090 ;;		On entry : 0/0
  9091 ;;		On exit  : 0/0
  9092 ;;		Unchanged: 0/0
  9093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9094 ;;      Params:         2       0       0       0
  9095 ;;      Locals:         0       0       0       0
  9096 ;;      Temps:          2       0       0       0
  9097 ;;      Totals:         4       0       0       0
  9098 ;;Total ram usage:        4 bytes
  9099 ;; Hardware stack levels used:    1
  9100 ;; This function calls:
  9101 ;;		Nothing
  9102 ;; This function is called by:
  9103 ;;		_SVPWM_STDISR
  9104 ;; This function uses a non-reentrant model
  9105 ;;
  9106                           
  9107                           	psect	text39
  9108  0014EE                     __ptext39:
  9109                           	opt callstack 0
  9110  0014EE                     _SVPWM_SetNextRelativeState:
  9111                           	opt callstack 28
  9112                           
  9113                           ;../functions.h: 110:     switch((*pm).State) {
  9114                           
  9115                           ;incstack = 0
  9116  0014EE  D024               	goto	l3255
  9117  0014F0                     l3245:
  9118                           
  9119                           ;../functions.h: 112:             (*pm).State = V1_REL;
  9120  0014F0  EE20 F01B          	lfsr	2,27
  9121  0014F4  5001               	movf	SVPWM_SetNextRelativeState@pm,w,c
  9122  0014F6  26D9               	addwf	fsr2l,f,c
  9123  0014F8  5002               	movf	SVPWM_SetNextRelativeState@pm+1,w,c
  9124  0014FA  22DA               	addwfc	fsr2h,f,c
  9125  0014FC  0E01               	movlw	1
  9126  0014FE  6EDF               	movwf	indf2,c
  9127                           
  9128                           ;../functions.h: 113:             break;
  9129  001500  0012               	return	
  9130  001502                     l3247:
  9131                           
  9132                           ;../functions.h: 115:             (*pm).State = V2_REL;
  9133  001502  EE20 F01B          	lfsr	2,27
  9134  001506  5001               	movf	SVPWM_SetNextRelativeState@pm,w,c
  9135  001508  26D9               	addwf	fsr2l,f,c
  9136  00150A  5002               	movf	SVPWM_SetNextRelativeState@pm+1,w,c
  9137  00150C  22DA               	addwfc	fsr2h,f,c
  9138  00150E  0E02               	movlw	2
  9139  001510  6EDF               	movwf	indf2,c
  9140                           
  9141                           ;../functions.h: 116:             break;
  9142  001512  0012               	return	
  9143  001514                     l3249:
  9144                           
  9145                           ;../functions.h: 118:             (*pm).State = V7_REL;
  9146  001514  EE20 F01B          	lfsr	2,27
  9147  001518  5001               	movf	SVPWM_SetNextRelativeState@pm,w,c
  9148  00151A  26D9               	addwf	fsr2l,f,c
  9149  00151C  5002               	movf	SVPWM_SetNextRelativeState@pm+1,w,c
  9150  00151E  22DA               	addwfc	fsr2h,f,c
  9151  001520  0E03               	movlw	3
  9152  001522  6EDF               	movwf	indf2,c
  9153                           
  9154                           ;../functions.h: 119:             break;
  9155  001524  0012               	return	
  9156  001526                     l3251:
  9157                           
  9158                           ;../functions.h: 121:             (*pm).State = V0_REL;
  9159  001526  EE20 F01B          	lfsr	2,27
  9160  00152A  5001               	movf	SVPWM_SetNextRelativeState@pm,w,c
  9161  00152C  26D9               	addwf	fsr2l,f,c
  9162  00152E  5002               	movf	SVPWM_SetNextRelativeState@pm+1,w,c
  9163  001530  22DA               	addwfc	fsr2h,f,c
  9164  001532  0E00               	movlw	0
  9165  001534  6EDF               	movwf	indf2,c
  9166                           
  9167                           ;../functions.h: 122:             break;
  9168  001536  0012               	return	
  9169  001538                     l3255:
  9170  001538  EE20 F01B          	lfsr	2,27
  9171  00153C  5001               	movf	SVPWM_SetNextRelativeState@pm,w,c
  9172  00153E  26D9               	addwf	fsr2l,f,c
  9173  001540  5002               	movf	SVPWM_SetNextRelativeState@pm+1,w,c
  9174  001542  22DA               	addwfc	fsr2h,f,c
  9175  001544  50DF               	movf	indf2,w,c
  9176  001546  6E03               	movwf	??_SVPWM_SetNextRelativeState& (0+255),c
  9177  001548  6A04               	clrf	(??_SVPWM_SetNextRelativeState+1)& (0+255),c
  9178                           
  9179                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9180                           ; Switch size 1, requested type "simple"
  9181                           ; Number of cases is 1, Range of values is 0 to 0
  9182                           ; switch strategies available:
  9183                           ; Name         Instructions Cycles
  9184                           ; simple_byte            4     3 (average)
  9185                           ;	Chosen strategy is simple_byte
  9186  00154A  5004               	movf	??_SVPWM_SetNextRelativeState+1,w,c
  9187  00154C  0A00               	xorlw	0	; case 0
  9188  00154E  A4D8               	btfss	status,2,c
  9189  001550  0012               	return	
  9190                           
  9191                           ; Switch size 1, requested type "simple"
  9192                           ; Number of cases is 4, Range of values is 0 to 3
  9193                           ; switch strategies available:
  9194                           ; Name         Instructions Cycles
  9195                           ; simple_byte           13     7 (average)
  9196                           ;	Chosen strategy is simple_byte
  9197  001552  5003               	movf	??_SVPWM_SetNextRelativeState,w,c
  9198  001554  0A00               	xorlw	0	; case 0
  9199  001556  B4D8               	btfsc	status,2,c
  9200  001558  D7CB               	goto	l3245
  9201  00155A  0A01               	xorlw	1	; case 1
  9202  00155C  B4D8               	btfsc	status,2,c
  9203  00155E  D7D1               	goto	l3247
  9204  001560  0A03               	xorlw	3	; case 2
  9205  001562  B4D8               	btfsc	status,2,c
  9206  001564  D7D7               	goto	l3249
  9207  001566  0A01               	xorlw	1	; case 3
  9208  001568  A4D8               	btfss	status,2,c
  9209  00156A  0012               	return	
  9210  00156C  D7DC               	goto	l3251
  9211  00156E                     __end_of_SVPWM_SetNextRelativeState:
  9212                           	opt callstack 0
  9213                           
  9214 ;; *************** function _SVPWM_SetCurrentSEC *****************
  9215 ;; Defined at:
  9216 ;;		line 34 in file "../functions.h"
  9217 ;; Parameters:    Size  Location     Type
  9218 ;;  pm              2   22[COMRAM] PTR struct .
  9219 ;;		 -> pwmBoi(50), 
  9220 ;; Auto vars:     Size  Location     Type
  9221 ;;		None
  9222 ;; Return value:  Size  Location     Type
  9223 ;;                  1    wreg      void 
  9224 ;; Registers used:
  9225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9226 ;; Tracked objects:
  9227 ;;		On entry : 0/0
  9228 ;;		On exit  : 0/0
  9229 ;;		Unchanged: 0/0
  9230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9231 ;;      Params:         2       0       0       0
  9232 ;;      Locals:         0       0       0       0
  9233 ;;      Temps:          1       0       0       0
  9234 ;;      Totals:         3       0       0       0
  9235 ;;Total ram usage:        3 bytes
  9236 ;; Hardware stack levels used:    1
  9237 ;; Hardware stack levels required when called:    2
  9238 ;; This function calls:
  9239 ;;		_SVPWM_GetControlAngleSEC
  9240 ;; This function is called by:
  9241 ;;		_SVPWM_STDISR
  9242 ;;		_main
  9243 ;; This function uses a non-reentrant model
  9244 ;;
  9245                           
  9246                           	psect	text40
  9247  001096                     __ptext40:
  9248                           	opt callstack 0
  9249  001096                     _SVPWM_SetCurrentSEC:
  9250                           	opt callstack 26
  9251                           
  9252                           ;../functions.h: 35:     (*pm).CurrentSector = SVPWM_GetControlAngleSEC(pm);
  9253                           
  9254                           ;incstack = 0
  9255  001096  C017  F015         	movff	SVPWM_SetCurrentSEC@pm,SVPWM_GetControlAngleSEC@pm
  9256  00109A  C018  F016         	movff	SVPWM_SetCurrentSEC@pm+1,SVPWM_GetControlAngleSEC@pm+1
  9257  00109E  ECDA  F008         	call	_SVPWM_GetControlAngleSEC	;wreg free
  9258  0010A2  6E19               	movwf	??_SVPWM_SetCurrentSEC& (0+255),c
  9259  0010A4  EE20 F01C          	lfsr	2,28
  9260  0010A8  5017               	movf	SVPWM_SetCurrentSEC@pm,w,c
  9261  0010AA  26D9               	addwf	fsr2l,f,c
  9262  0010AC  5018               	movf	SVPWM_SetCurrentSEC@pm+1,w,c
  9263  0010AE  22DA               	addwfc	fsr2h,f,c
  9264  0010B0  C019  FFDF         	movff	??_SVPWM_SetCurrentSEC,indf2
  9265  0010B4  0012               	return		;funcret
  9266  0010B6                     __end_of_SVPWM_SetCurrentSEC:
  9267                           	opt callstack 0
  9268                           
  9269 ;; *************** function _SVPWM_GetControlAngleSEC *****************
  9270 ;; Defined at:
  9271 ;;		line 26 in file "../functions.h"
  9272 ;; Parameters:    Size  Location     Type
  9273 ;;  pm              2   20[COMRAM] PTR struct .
  9274 ;;		 -> pwmBoi(50), 
  9275 ;; Auto vars:     Size  Location     Type
  9276 ;;		None
  9277 ;; Return value:  Size  Location     Type
  9278 ;;                  1    wreg      enum E493
  9279 ;; Registers used:
  9280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9281 ;; Tracked objects:
  9282 ;;		On entry : 0/0
  9283 ;;		On exit  : 0/0
  9284 ;;		Unchanged: 0/0
  9285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9286 ;;      Params:         2       0       0       0
  9287 ;;      Locals:         0       0       0       0
  9288 ;;      Temps:          0       0       0       0
  9289 ;;      Totals:         2       0       0       0
  9290 ;;Total ram usage:        2 bytes
  9291 ;; Hardware stack levels used:    1
  9292 ;; Hardware stack levels required when called:    1
  9293 ;; This function calls:
  9294 ;;		___awdiv
  9295 ;;		___awmod
  9296 ;; This function is called by:
  9297 ;;		_SVPWM_SetCurrentSEC
  9298 ;; This function uses a non-reentrant model
  9299 ;;
  9300                           
  9301                           	psect	text41
  9302  0011B4                     __ptext41:
  9303                           	opt callstack 0
  9304  0011B4                     _SVPWM_GetControlAngleSEC:
  9305                           	opt callstack 26
  9306                           
  9307                           ;../functions.h: 30:     return ((*pm).ControlAngle / (0x3FFF*60/360)) % 6;
  9308                           
  9309                           ;incstack = 0
  9310  0011B4  0E00               	movlw	0
  9311  0011B6  6E0A               	movwf	___awdiv@divisor+1,c
  9312  0011B8  0E00               	movlw	0
  9313  0011BA  6E09               	movwf	___awdiv@divisor,c
  9314  0011BC  EE20 F00C          	lfsr	2,12
  9315  0011C0  5015               	movf	SVPWM_GetControlAngleSEC@pm,w,c
  9316  0011C2  26D9               	addwf	fsr2l,f,c
  9317  0011C4  5016               	movf	SVPWM_GetControlAngleSEC@pm+1,w,c
  9318  0011C6  22DA               	addwfc	fsr2h,f,c
  9319  0011C8  CFDE F007          	movff	postinc2,___awdiv@dividend
  9320  0011CC  CFDD F008          	movff	postdec2,___awdiv@dividend+1
  9321  0011D0  ECB7  F00A         	call	___awdiv	;wreg free
  9322  0011D4  C007  F00F         	movff	?___awdiv,___awmod@dividend
  9323  0011D8  C008  F010         	movff	?___awdiv+1,___awmod@dividend+1
  9324  0011DC  0E00               	movlw	0
  9325  0011DE  6E12               	movwf	___awmod@divisor+1,c
  9326  0011E0  0E06               	movlw	6
  9327  0011E2  6E11               	movwf	___awmod@divisor,c
  9328  0011E4  EC3F  F00A         	call	___awmod	;wreg free
  9329  0011E8  500F               	movf	?___awmod,w,c
  9330  0011EA  0012               	return		;funcret
  9331  0011EC                     __end_of_SVPWM_GetControlAngleSEC:
  9332                           	opt callstack 0
  9333                           
  9334 ;; *************** function ___awmod *****************
  9335 ;; Defined at:
  9336 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  9337 ;; Parameters:    Size  Location     Type
  9338 ;;  dividend        2   14[COMRAM] int 
  9339 ;;  divisor         2   16[COMRAM] int 
  9340 ;; Auto vars:     Size  Location     Type
  9341 ;;  sign            1   19[COMRAM] unsigned char 
  9342 ;;  counter         1   18[COMRAM] unsigned char 
  9343 ;; Return value:  Size  Location     Type
  9344 ;;                  2   14[COMRAM] int 
  9345 ;; Registers used:
  9346 ;;		wreg, status,2, status,0
  9347 ;; Tracked objects:
  9348 ;;		On entry : 0/0
  9349 ;;		On exit  : 0/0
  9350 ;;		Unchanged: 0/0
  9351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9352 ;;      Params:         4       0       0       0
  9353 ;;      Locals:         2       0       0       0
  9354 ;;      Temps:          0       0       0       0
  9355 ;;      Totals:         6       0       0       0
  9356 ;;Total ram usage:        6 bytes
  9357 ;; Hardware stack levels used:    1
  9358 ;; This function calls:
  9359 ;;		Nothing
  9360 ;; This function is called by:
  9361 ;;		_SVPWM_GetControlAngleSEC
  9362 ;; This function uses a non-reentrant model
  9363 ;;
  9364                           
  9365                           	psect	text42
  9366  00147E                     __ptext42:
  9367                           	opt callstack 0
  9368  00147E                     ___awmod:
  9369                           	opt callstack 26
  9370                           
  9371                           ;incstack = 0
  9372  00147E  0E00               	movlw	0
  9373  001480  6E14               	movwf	___awmod@sign,c
  9374  001482  AE10               	btfss	___awmod@dividend+1,7,c
  9375  001484  D006               	goto	l2849
  9376  001486  6C0F               	negf	___awmod@dividend,c
  9377  001488  1E10               	comf	___awmod@dividend+1,f,c
  9378  00148A  B0D8               	btfsc	status,0,c
  9379  00148C  2A10               	incf	___awmod@dividend+1,f,c
  9380  00148E  0E01               	movlw	1
  9381  001490  6E14               	movwf	___awmod@sign,c
  9382  001492                     l2849:
  9383  001492  AE12               	btfss	___awmod@divisor+1,7,c
  9384  001494  D004               	goto	l2853
  9385  001496  6C11               	negf	___awmod@divisor,c
  9386  001498  1E12               	comf	___awmod@divisor+1,f,c
  9387  00149A  B0D8               	btfsc	status,0,c
  9388  00149C  2A12               	incf	___awmod@divisor+1,f,c
  9389  00149E                     l2853:
  9390  00149E  5011               	movf	___awmod@divisor,w,c
  9391  0014A0  1012               	iorwf	___awmod@divisor+1,w,c
  9392  0014A2  B4D8               	btfsc	status,2,c
  9393  0014A4  D018               	goto	l2869
  9394  0014A6  0E01               	movlw	1
  9395  0014A8  6E13               	movwf	___awmod@counter,c
  9396  0014AA  D004               	goto	l2859
  9397  0014AC                     l2857:
  9398  0014AC  90D8               	bcf	status,0,c
  9399  0014AE  3611               	rlcf	___awmod@divisor,f,c
  9400  0014B0  3612               	rlcf	___awmod@divisor+1,f,c
  9401  0014B2  2A13               	incf	___awmod@counter,f,c
  9402  0014B4                     l2859:
  9403  0014B4  AE12               	btfss	___awmod@divisor+1,7,c
  9404  0014B6  D7FA               	goto	l2857
  9405  0014B8                     u2910:
  9406  0014B8  5011               	movf	___awmod@divisor,w,c
  9407  0014BA  5C0F               	subwf	___awmod@dividend,w,c
  9408  0014BC  5012               	movf	___awmod@divisor+1,w,c
  9409  0014BE  5810               	subwfb	___awmod@dividend+1,w,c
  9410  0014C0  A0D8               	btfss	status,0,c
  9411  0014C2  D004               	goto	l2865
  9412  0014C4  5011               	movf	___awmod@divisor,w,c
  9413  0014C6  5E0F               	subwf	___awmod@dividend,f,c
  9414  0014C8  5012               	movf	___awmod@divisor+1,w,c
  9415  0014CA  5A10               	subwfb	___awmod@dividend+1,f,c
  9416  0014CC                     l2865:
  9417  0014CC  90D8               	bcf	status,0,c
  9418  0014CE  3212               	rrcf	___awmod@divisor+1,f,c
  9419  0014D0  3211               	rrcf	___awmod@divisor,f,c
  9420  0014D2  2E13               	decfsz	___awmod@counter,f,c
  9421  0014D4  D7F1               	goto	u2910
  9422  0014D6                     l2869:
  9423  0014D6  5014               	movf	___awmod@sign,w,c
  9424  0014D8  B4D8               	btfsc	status,2,c
  9425  0014DA  D004               	goto	l2873
  9426  0014DC  6C0F               	negf	___awmod@dividend,c
  9427  0014DE  1E10               	comf	___awmod@dividend+1,f,c
  9428  0014E0  B0D8               	btfsc	status,0,c
  9429  0014E2  2A10               	incf	___awmod@dividend+1,f,c
  9430  0014E4                     l2873:
  9431  0014E4  C00F  F00F         	movff	___awmod@dividend,?___awmod
  9432  0014E8  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  9433  0014EC  0012               	return		;funcret
  9434  0014EE                     __end_of___awmod:
  9435                           	opt callstack 0
  9436                           
  9437 ;; *************** function ___awdiv *****************
  9438 ;; Defined at:
  9439 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  9440 ;; Parameters:    Size  Location     Type
  9441 ;;  dividend        2    6[COMRAM] int 
  9442 ;;  divisor         2    8[COMRAM] int 
  9443 ;; Auto vars:     Size  Location     Type
  9444 ;;  quotient        2   12[COMRAM] int 
  9445 ;;  sign            1   11[COMRAM] unsigned char 
  9446 ;;  counter         1   10[COMRAM] unsigned char 
  9447 ;; Return value:  Size  Location     Type
  9448 ;;                  2    6[COMRAM] int 
  9449 ;; Registers used:
  9450 ;;		wreg, status,2, status,0
  9451 ;; Tracked objects:
  9452 ;;		On entry : 0/0
  9453 ;;		On exit  : 0/0
  9454 ;;		Unchanged: 0/0
  9455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9456 ;;      Params:         4       0       0       0
  9457 ;;      Locals:         4       0       0       0
  9458 ;;      Temps:          0       0       0       0
  9459 ;;      Totals:         8       0       0       0
  9460 ;;Total ram usage:        8 bytes
  9461 ;; Hardware stack levels used:    1
  9462 ;; This function calls:
  9463 ;;		Nothing
  9464 ;; This function is called by:
  9465 ;;		_SVPWM_GetControlAngleSEC
  9466 ;;		_SVPWM_SetVectorTimes
  9467 ;;		_main
  9468 ;; This function uses a non-reentrant model
  9469 ;;
  9470                           
  9471                           	psect	text43
  9472  00156E                     __ptext43:
  9473                           	opt callstack 0
  9474  00156E                     ___awdiv:
  9475                           	opt callstack 27
  9476                           
  9477                           ;incstack = 0
  9478  00156E  0E00               	movlw	0
  9479  001570  6E0C               	movwf	___awdiv@sign,c
  9480  001572  AE0A               	btfss	___awdiv@divisor+1,7,c
  9481  001574  D006               	goto	l2805
  9482  001576  6C09               	negf	___awdiv@divisor,c
  9483  001578  1E0A               	comf	___awdiv@divisor+1,f,c
  9484  00157A  B0D8               	btfsc	status,0,c
  9485  00157C  2A0A               	incf	___awdiv@divisor+1,f,c
  9486  00157E  0E01               	movlw	1
  9487  001580  6E0C               	movwf	___awdiv@sign,c
  9488  001582                     l2805:
  9489  001582  AE08               	btfss	___awdiv@dividend+1,7,c
  9490  001584  D006               	goto	l2811
  9491  001586  6C07               	negf	___awdiv@dividend,c
  9492  001588  1E08               	comf	___awdiv@dividend+1,f,c
  9493  00158A  B0D8               	btfsc	status,0,c
  9494  00158C  2A08               	incf	___awdiv@dividend+1,f,c
  9495  00158E  0E01               	movlw	1
  9496  001590  1A0C               	xorwf	___awdiv@sign,f,c
  9497  001592                     l2811:
  9498  001592  0E00               	movlw	0
  9499  001594  6E0E               	movwf	___awdiv@quotient+1,c
  9500  001596  0E00               	movlw	0
  9501  001598  6E0D               	movwf	___awdiv@quotient,c
  9502  00159A  5009               	movf	___awdiv@divisor,w,c
  9503  00159C  100A               	iorwf	___awdiv@divisor+1,w,c
  9504  00159E  B4D8               	btfsc	status,2,c
  9505  0015A0  D01C               	goto	l2833
  9506  0015A2  0E01               	movlw	1
  9507  0015A4  6E0B               	movwf	___awdiv@counter,c
  9508  0015A6  D004               	goto	l2819
  9509  0015A8                     l2817:
  9510  0015A8  90D8               	bcf	status,0,c
  9511  0015AA  3609               	rlcf	___awdiv@divisor,f,c
  9512  0015AC  360A               	rlcf	___awdiv@divisor+1,f,c
  9513  0015AE  2A0B               	incf	___awdiv@counter,f,c
  9514  0015B0                     l2819:
  9515  0015B0  AE0A               	btfss	___awdiv@divisor+1,7,c
  9516  0015B2  D7FA               	goto	l2817
  9517  0015B4                     u2850:
  9518  0015B4  90D8               	bcf	status,0,c
  9519  0015B6  360D               	rlcf	___awdiv@quotient,f,c
  9520  0015B8  360E               	rlcf	___awdiv@quotient+1,f,c
  9521  0015BA  5009               	movf	___awdiv@divisor,w,c
  9522  0015BC  5C07               	subwf	___awdiv@dividend,w,c
  9523  0015BE  500A               	movf	___awdiv@divisor+1,w,c
  9524  0015C0  5808               	subwfb	___awdiv@dividend+1,w,c
  9525  0015C2  A0D8               	btfss	status,0,c
  9526  0015C4  D005               	goto	l2829
  9527  0015C6  5009               	movf	___awdiv@divisor,w,c
  9528  0015C8  5E07               	subwf	___awdiv@dividend,f,c
  9529  0015CA  500A               	movf	___awdiv@divisor+1,w,c
  9530  0015CC  5A08               	subwfb	___awdiv@dividend+1,f,c
  9531  0015CE  800D               	bsf	___awdiv@quotient,0,c
  9532  0015D0                     l2829:
  9533  0015D0  90D8               	bcf	status,0,c
  9534  0015D2  320A               	rrcf	___awdiv@divisor+1,f,c
  9535  0015D4  3209               	rrcf	___awdiv@divisor,f,c
  9536  0015D6  2E0B               	decfsz	___awdiv@counter,f,c
  9537  0015D8  D7ED               	goto	u2850
  9538  0015DA                     l2833:
  9539  0015DA  500C               	movf	___awdiv@sign,w,c
  9540  0015DC  B4D8               	btfsc	status,2,c
  9541  0015DE  D004               	goto	l2837
  9542  0015E0  6C0D               	negf	___awdiv@quotient,c
  9543  0015E2  1E0E               	comf	___awdiv@quotient+1,f,c
  9544  0015E4  B0D8               	btfsc	status,0,c
  9545  0015E6  2A0E               	incf	___awdiv@quotient+1,f,c
  9546  0015E8                     l2837:
  9547  0015E8  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  9548  0015EC  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  9549  0015F0  0012               	return		;funcret
  9550  0015F2                     __end_of___awdiv:
  9551                           	opt callstack 0
  9552                           
  9553 ;; *************** function ___lwdiv *****************
  9554 ;; Defined at:
  9555 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  9556 ;; Parameters:    Size  Location     Type
  9557 ;;  dividend        2    6[COMRAM] unsigned int 
  9558 ;;  divisor         2    8[COMRAM] unsigned int 
  9559 ;; Auto vars:     Size  Location     Type
  9560 ;;  quotient        2   10[COMRAM] unsigned int 
  9561 ;;  counter         1   12[COMRAM] unsigned char 
  9562 ;; Return value:  Size  Location     Type
  9563 ;;                  2    6[COMRAM] unsigned int 
  9564 ;; Registers used:
  9565 ;;		wreg, status,2, status,0
  9566 ;; Tracked objects:
  9567 ;;		On entry : 0/0
  9568 ;;		On exit  : 0/0
  9569 ;;		Unchanged: 0/0
  9570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9571 ;;      Params:         4       0       0       0
  9572 ;;      Locals:         3       0       0       0
  9573 ;;      Temps:          0       0       0       0
  9574 ;;      Totals:         7       0       0       0
  9575 ;;Total ram usage:        7 bytes
  9576 ;; Hardware stack levels used:    1
  9577 ;; This function calls:
  9578 ;;		Nothing
  9579 ;; This function is called by:
  9580 ;;		_main
  9581 ;; This function uses a non-reentrant model
  9582 ;;
  9583                           
  9584                           	psect	text44
  9585  00136A                     __ptext44:
  9586                           	opt callstack 0
  9587  00136A                     ___lwdiv:
  9588                           	opt callstack 30
  9589                           
  9590                           ;incstack = 0
  9591  00136A  0E00               	movlw	0
  9592  00136C  6E0C               	movwf	___lwdiv@quotient+1,c
  9593  00136E  0E00               	movlw	0
  9594  001370  6E0B               	movwf	___lwdiv@quotient,c
  9595  001372  5009               	movf	___lwdiv@divisor,w,c
  9596  001374  100A               	iorwf	___lwdiv@divisor+1,w,c
  9597  001376  B4D8               	btfsc	status,2,c
  9598  001378  D01C               	goto	l742
  9599  00137A  0E01               	movlw	1
  9600  00137C  6E0D               	movwf	___lwdiv@counter,c
  9601  00137E  D004               	goto	l3355
  9602  001380                     l3353:
  9603  001380  90D8               	bcf	status,0,c
  9604  001382  3609               	rlcf	___lwdiv@divisor,f,c
  9605  001384  360A               	rlcf	___lwdiv@divisor+1,f,c
  9606  001386  2A0D               	incf	___lwdiv@counter,f,c
  9607  001388                     l3355:
  9608  001388  AE0A               	btfss	___lwdiv@divisor+1,7,c
  9609  00138A  D7FA               	goto	l3353
  9610  00138C                     u3490:
  9611  00138C  90D8               	bcf	status,0,c
  9612  00138E  360B               	rlcf	___lwdiv@quotient,f,c
  9613  001390  360C               	rlcf	___lwdiv@quotient+1,f,c
  9614  001392  5009               	movf	___lwdiv@divisor,w,c
  9615  001394  5C07               	subwf	___lwdiv@dividend,w,c
  9616  001396  500A               	movf	___lwdiv@divisor+1,w,c
  9617  001398  5808               	subwfb	___lwdiv@dividend+1,w,c
  9618  00139A  A0D8               	btfss	status,0,c
  9619  00139C  D005               	goto	l3365
  9620  00139E  5009               	movf	___lwdiv@divisor,w,c
  9621  0013A0  5E07               	subwf	___lwdiv@dividend,f,c
  9622  0013A2  500A               	movf	___lwdiv@divisor+1,w,c
  9623  0013A4  5A08               	subwfb	___lwdiv@dividend+1,f,c
  9624  0013A6  800B               	bsf	___lwdiv@quotient,0,c
  9625  0013A8                     l3365:
  9626  0013A8  90D8               	bcf	status,0,c
  9627  0013AA  320A               	rrcf	___lwdiv@divisor+1,f,c
  9628  0013AC  3209               	rrcf	___lwdiv@divisor,f,c
  9629  0013AE  2E0D               	decfsz	___lwdiv@counter,f,c
  9630  0013B0  D7ED               	goto	u3490
  9631  0013B2                     l742:
  9632  0013B2  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  9633  0013B6  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9634  0013BA  0012               	return		;funcret
  9635  0013BC                     __end_of___lwdiv:
  9636                           	opt callstack 0
  9637                           
  9638 ;; *************** function _SVPWM_SetControlAngle *****************
  9639 ;; Defined at:
  9640 ;;		line 129 in file "../functions.h"
  9641 ;; Parameters:    Size  Location     Type
  9642 ;;  pm              2   13[COMRAM] PTR struct .
  9643 ;;		 -> pwmBoi(50), 
  9644 ;;  inputAngle      2   15[COMRAM] unsigned short 
  9645 ;; Auto vars:     Size  Location     Type
  9646 ;;		None
  9647 ;; Return value:  Size  Location     Type
  9648 ;;                  1    wreg      void 
  9649 ;; Registers used:
  9650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9651 ;; Tracked objects:
  9652 ;;		On entry : 0/0
  9653 ;;		On exit  : 0/0
  9654 ;;		Unchanged: 0/0
  9655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9656 ;;      Params:         4       0       0       0
  9657 ;;      Locals:         0       0       0       0
  9658 ;;      Temps:          0       0       0       0
  9659 ;;      Totals:         4       0       0       0
  9660 ;;Total ram usage:        4 bytes
  9661 ;; Hardware stack levels used:    1
  9662 ;; Hardware stack levels required when called:    1
  9663 ;; This function calls:
  9664 ;;		___lwmod
  9665 ;; This function is called by:
  9666 ;;		_main
  9667 ;; This function uses a non-reentrant model
  9668 ;;
  9669                           
  9670                           	psect	text45
  9671  001224                     __ptext45:
  9672                           	opt callstack 0
  9673  001224                     _SVPWM_SetControlAngle:
  9674                           	opt callstack 29
  9675                           
  9676                           ;../functions.h: 130:     (*pm).ControlAngle = inputAngle;
  9677                           
  9678                           ;incstack = 0
  9679  001224  EE20 F00C          	lfsr	2,12
  9680  001228  500E               	movf	SVPWM_SetControlAngle@pm,w,c
  9681  00122A  26D9               	addwf	fsr2l,f,c
  9682  00122C  500F               	movf	SVPWM_SetControlAngle@pm+1,w,c
  9683  00122E  22DA               	addwfc	fsr2h,f,c
  9684  001230  C010  FFDE         	movff	SVPWM_SetControlAngle@inputAngle,postinc2
  9685  001234  C011  FFDD         	movff	SVPWM_SetControlAngle@inputAngle+1,postdec2
  9686                           
  9687                           ;../functions.h: 131:     (*pm).RefAngle = inputAngle % (0x3FFF*60/360);
  9688  001238  C010  F001         	movff	SVPWM_SetControlAngle@inputAngle,___lwmod@dividend
  9689  00123C  C011  F002         	movff	SVPWM_SetControlAngle@inputAngle+1,___lwmod@dividend+1
  9690  001240  0E00               	movlw	0
  9691  001242  6E04               	movwf	___lwmod@divisor+1,c
  9692  001244  0E00               	movlw	0
  9693  001246  6E03               	movwf	___lwmod@divisor,c
  9694  001248  EC50  F009         	call	___lwmod	;wreg free
  9695  00124C  EE20 F00E          	lfsr	2,14
  9696  001250  500E               	movf	SVPWM_SetControlAngle@pm,w,c
  9697  001252  26D9               	addwf	fsr2l,f,c
  9698  001254  500F               	movf	SVPWM_SetControlAngle@pm+1,w,c
  9699  001256  22DA               	addwfc	fsr2h,f,c
  9700  001258  C001  FFDE         	movff	?___lwmod,postinc2
  9701  00125C  C002  FFDD         	movff	?___lwmod+1,postdec2
  9702  001260  0012               	return		;funcret
  9703  001262                     __end_of_SVPWM_SetControlAngle:
  9704                           	opt callstack 0
  9705                           
  9706 ;; *************** function ___lwmod *****************
  9707 ;; Defined at:
  9708 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
  9709 ;; Parameters:    Size  Location     Type
  9710 ;;  dividend        2    0[COMRAM] unsigned int 
  9711 ;;  divisor         2    2[COMRAM] unsigned int 
  9712 ;; Auto vars:     Size  Location     Type
  9713 ;;  counter         1    4[COMRAM] unsigned char 
  9714 ;; Return value:  Size  Location     Type
  9715 ;;                  2    0[COMRAM] unsigned int 
  9716 ;; Registers used:
  9717 ;;		wreg, status,2, status,0
  9718 ;; Tracked objects:
  9719 ;;		On entry : 0/0
  9720 ;;		On exit  : 0/0
  9721 ;;		Unchanged: 0/0
  9722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9723 ;;      Params:         4       0       0       0
  9724 ;;      Locals:         1       0       0       0
  9725 ;;      Temps:          0       0       0       0
  9726 ;;      Totals:         5       0       0       0
  9727 ;;Total ram usage:        5 bytes
  9728 ;; Hardware stack levels used:    1
  9729 ;; This function calls:
  9730 ;;		Nothing
  9731 ;; This function is called by:
  9732 ;;		_SVPWM_SetControlAngle
  9733 ;; This function uses a non-reentrant model
  9734 ;;
  9735                           
  9736                           	psect	text46
  9737  0012A0                     __ptext46:
  9738                           	opt callstack 0
  9739  0012A0                     ___lwmod:
  9740                           	opt callstack 29
  9741                           
  9742                           ;incstack = 0
  9743  0012A0  5003               	movf	___lwmod@divisor,w,c
  9744  0012A2  1004               	iorwf	___lwmod@divisor+1,w,c
  9745  0012A4  B4D8               	btfsc	status,2,c
  9746  0012A6  D018               	goto	l752
  9747  0012A8  0E01               	movlw	1
  9748  0012AA  6E05               	movwf	___lwmod@counter,c
  9749  0012AC  D004               	goto	l3329
  9750  0012AE                     l3327:
  9751  0012AE  90D8               	bcf	status,0,c
  9752  0012B0  3603               	rlcf	___lwmod@divisor,f,c
  9753  0012B2  3604               	rlcf	___lwmod@divisor+1,f,c
  9754  0012B4  2A05               	incf	___lwmod@counter,f,c
  9755  0012B6                     l3329:
  9756  0012B6  AE04               	btfss	___lwmod@divisor+1,7,c
  9757  0012B8  D7FA               	goto	l3327
  9758  0012BA                     u3460:
  9759  0012BA  5003               	movf	___lwmod@divisor,w,c
  9760  0012BC  5C01               	subwf	___lwmod@dividend,w,c
  9761  0012BE  5004               	movf	___lwmod@divisor+1,w,c
  9762  0012C0  5802               	subwfb	___lwmod@dividend+1,w,c
  9763  0012C2  A0D8               	btfss	status,0,c
  9764  0012C4  D004               	goto	l3335
  9765  0012C6  5003               	movf	___lwmod@divisor,w,c
  9766  0012C8  5E01               	subwf	___lwmod@dividend,f,c
  9767  0012CA  5004               	movf	___lwmod@divisor+1,w,c
  9768  0012CC  5A02               	subwfb	___lwmod@dividend+1,f,c
  9769  0012CE                     l3335:
  9770  0012CE  90D8               	bcf	status,0,c
  9771  0012D0  3204               	rrcf	___lwmod@divisor+1,f,c
  9772  0012D2  3203               	rrcf	___lwmod@divisor,f,c
  9773  0012D4  2E05               	decfsz	___lwmod@counter,f,c
  9774  0012D6  D7F1               	goto	u3460
  9775  0012D8                     l752:
  9776  0012D8  C001  F001         	movff	___lwmod@dividend,?___lwmod
  9777  0012DC  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  9778  0012E0  0012               	return		;funcret
  9779  0012E2                     __end_of___lwmod:
  9780                           	opt callstack 0
  9781                           
  9782                           	psect	rparam
  9783  0000                     tosu	equ	0xFFF
  9784                           tosh	equ	0xFFE
  9785                           tosl	equ	0xFFD
  9786                           stkptr	equ	0xFFC
  9787                           pclatu	equ	0xFFB
  9788                           pclath	equ	0xFFA
  9789                           pcl	equ	0xFF9
  9790                           tblptru	equ	0xFF8
  9791                           tblptrh	equ	0xFF7
  9792                           tblptrl	equ	0xFF6
  9793                           tablat	equ	0xFF5
  9794                           prodh	equ	0xFF4
  9795                           prodl	equ	0xFF3
  9796                           indf0	equ	0xFEF
  9797                           postinc0	equ	0xFEE
  9798                           postdec0	equ	0xFED
  9799                           preinc0	equ	0xFEC
  9800                           plusw0	equ	0xFEB
  9801                           fsr0h	equ	0xFEA
  9802                           fsr0l	equ	0xFE9
  9803                           wreg	equ	0xFE8
  9804                           indf1	equ	0xFE7
  9805                           postinc1	equ	0xFE6
  9806                           postdec1	equ	0xFE5
  9807                           preinc1	equ	0xFE4
  9808                           plusw1	equ	0xFE3
  9809                           fsr1h	equ	0xFE2
  9810                           fsr1l	equ	0xFE1
  9811                           bsr	equ	0xFE0
  9812                           indf2	equ	0xFDF
  9813                           postinc2	equ	0xFDE
  9814                           postdec2	equ	0xFDD
  9815                           preinc2	equ	0xFDC
  9816                           plusw2	equ	0xFDB
  9817                           fsr2h	equ	0xFDA
  9818                           fsr2l	equ	0xFD9
  9819                           status	equ	0xFD8


Data Sizes:
    Strings     421
    Constant    2880
    Data        38
    BSS         90
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     76     134
    BANK1           256      0      70
    BANK2           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 53
		 -> STR_31(CODE[17]), STR_30(CODE[17]), STR_29(CODE[20]), STR_28(CODE[19]), 
		 -> STR_27(CODE[20]), STR_26(CODE[13]), STR_25(CODE[18]), STR_24(CODE[16]), 
		 -> STR_23(CODE[20]), STR_22(CODE[12]), STR_21(CODE[12]), STR_20(CODE[53]), 
		 -> STR_19(CODE[13]), STR_18(CODE[9]), STR_17(CODE[10]), STR_16(CODE[9]), 
		 -> STR_15(CODE[10]), STR_14(CODE[9]), STR_13(CODE[10]), STR_12(CODE[9]), 
		 -> STR_11(CODE[10]), STR_10(CODE[9]), STR_9(CODE[10]), STR_8(CODE[9]), 
		 -> STR_7(CODE[10]), STR_6(CODE[9]), STR_5(CODE[10]), STR_4(CODE[11]), 
		 -> STR_3(CODE[17]), STR_2(CODE[18]), STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1261_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 53
		 -> STR_31(CODE[17]), STR_30(CODE[17]), STR_29(CODE[20]), STR_28(CODE[19]), 
		 -> STR_27(CODE[20]), STR_26(CODE[13]), STR_25(CODE[18]), STR_24(CODE[16]), 
		 -> STR_23(CODE[20]), STR_22(CODE[12]), STR_21(CODE[12]), STR_20(CODE[53]), 
		 -> STR_19(CODE[13]), STR_18(CODE[9]), STR_17(CODE[10]), STR_16(CODE[9]), 
		 -> STR_15(CODE[10]), STR_14(CODE[9]), STR_13(CODE[10]), STR_12(CODE[9]), 
		 -> STR_11(CODE[10]), STR_10(CODE[9]), STR_9(CODE[10]), STR_8(CODE[9]), 
		 -> STR_7(CODE[10]), STR_6(CODE[9]), STR_5(CODE[10]), STR_4(CODE[11]), 
		 -> STR_3(CODE[17]), STR_2(CODE[18]), STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 53
		 -> STR_31(CODE[17]), STR_30(CODE[17]), STR_29(CODE[20]), STR_28(CODE[19]), 
		 -> STR_27(CODE[20]), STR_26(CODE[13]), STR_25(CODE[18]), STR_24(CODE[16]), 
		 -> STR_23(CODE[20]), STR_22(CODE[12]), STR_21(CODE[12]), STR_20(CODE[53]), 
		 -> STR_19(CODE[13]), STR_18(CODE[9]), STR_17(CODE[10]), STR_16(CODE[9]), 
		 -> STR_15(CODE[10]), STR_14(CODE[9]), STR_13(CODE[10]), STR_12(CODE[9]), 
		 -> STR_11(CODE[10]), STR_10(CODE[9]), STR_9(CODE[10]), STR_8(CODE[9]), 
		 -> STR_7(CODE[10]), STR_6(CODE[9]), STR_5(CODE[10]), STR_4(CODE[11]), 
		 -> STR_3(CODE[17]), STR_2(CODE[18]), STR_1(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pwmBoi.setTran6	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V6(), 

    pwmBoi.setTran5	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V5(), 

    pwmBoi.setTran4	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V4(), 

    pwmBoi.setTran3	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V3(), 

    pwmBoi.setTran2	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V2(), 

    pwmBoi.setTran1	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V1(), 

    SVPWM_STDISR@pm	PTR struct . size(2) Largest target is 50
		 -> pwmBoi(BANK0[50]), 

    SVPWM_WriteABSVector@pm	PTR struct . size(2) Largest target is 50
		 -> pwmBoi(BANK0[50]), 

    SVPWM_SetVectorTimes@pm.setTran6	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V6(), 

    SVPWM_SetVectorTimes@pm.setTran5	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V5(), 

    SVPWM_SetVectorTimes@pm.setTran4	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V4(), 

    SVPWM_SetVectorTimes@pm.setTran3	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V3(), 

    SVPWM_SetVectorTimes@pm.setTran2	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V2(), 

    SVPWM_SetVectorTimes@pm.setTran1	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V1(), 

    SVPWM_SetVectorTimes@pm	PTR struct . size(2) Largest target is 50
		 -> pwmBoi(BANK0[50]), 

    SVPWM_SetControlAngle@pm.setTran6	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V6(), 

    SVPWM_SetControlAngle@pm.setTran5	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V5(), 

    SVPWM_SetControlAngle@pm.setTran4	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V4(), 

    SVPWM_SetControlAngle@pm.setTran3	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V3(), 

    SVPWM_SetControlAngle@pm.setTran2	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V2(), 

    SVPWM_SetControlAngle@pm.setTran1	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V1(), 

    SVPWM_SetControlAngle@pm	PTR struct . size(2) Largest target is 50
		 -> pwmBoi(BANK0[50]), 

    SVPWM_SetNextRelativeState@pm.setTran6	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V6(), 

    SVPWM_SetNextRelativeState@pm.setTran5	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V5(), 

    SVPWM_SetNextRelativeState@pm.setTran4	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V4(), 

    SVPWM_SetNextRelativeState@pm.setTran3	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V3(), 

    SVPWM_SetNextRelativeState@pm.setTran2	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V2(), 

    SVPWM_SetNextRelativeState@pm.setTran1	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V1(), 

    SVPWM_SetNextRelativeState@pm	PTR struct . size(2) Largest target is 50
		 -> pwmBoi(BANK0[50]), 

    SVPWM_GetAbsoluteVoltageVector@pm.setTran6	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V6(), 

    SVPWM_GetAbsoluteVoltageVector@pm.setTran5	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V5(), 

    SVPWM_GetAbsoluteVoltageVector@pm.setTran4	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V4(), 

    SVPWM_GetAbsoluteVoltageVector@pm.setTran3	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V3(), 

    SVPWM_GetAbsoluteVoltageVector@pm.setTran2	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V2(), 

    SVPWM_GetAbsoluteVoltageVector@pm.setTran1	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V1(), 

    SVPWM_GetAbsoluteVoltageVector@pm	PTR struct . size(2) Largest target is 50
		 -> pwmBoi(BANK0[50]), 

    SVPWM_UpdateCurrentTimer@pm.setTran6	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V6(), 

    SVPWM_UpdateCurrentTimer@pm.setTran5	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V5(), 

    SVPWM_UpdateCurrentTimer@pm.setTran4	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V4(), 

    SVPWM_UpdateCurrentTimer@pm.setTran3	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V3(), 

    SVPWM_UpdateCurrentTimer@pm.setTran2	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V2(), 

    SVPWM_UpdateCurrentTimer@pm.setTran1	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V1(), 

    SVPWM_UpdateCurrentTimer@pm	PTR struct . size(2) Largest target is 50
		 -> pwmBoi(BANK0[50]), 

    SVPWM_SetCurrentSEC@pm.setTran6	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V6(), 

    SVPWM_SetCurrentSEC@pm.setTran5	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V5(), 

    SVPWM_SetCurrentSEC@pm.setTran4	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V4(), 

    SVPWM_SetCurrentSEC@pm.setTran3	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V3(), 

    SVPWM_SetCurrentSEC@pm.setTran2	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V2(), 

    SVPWM_SetCurrentSEC@pm.setTran1	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V1(), 

    SVPWM_SetCurrentSEC@pm	PTR struct . size(2) Largest target is 50
		 -> pwmBoi(BANK0[50]), 

    SVPWM_GetControlAngleSEC@pm.setTran6	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V6(), 

    SVPWM_GetControlAngleSEC@pm.setTran5	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V5(), 

    SVPWM_GetControlAngleSEC@pm.setTran4	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V4(), 

    SVPWM_GetControlAngleSEC@pm.setTran3	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V3(), 

    SVPWM_GetControlAngleSEC@pm.setTran2	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V2(), 

    SVPWM_GetControlAngleSEC@pm.setTran1	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V1(), 

    SVPWM_GetControlAngleSEC@pm	PTR struct . size(2) Largest target is 50
		 -> pwmBoi(BANK0[50]), 

    SVPWM_WriteOFF@pm.setTran6	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V6(), 

    SVPWM_WriteOFF@pm.setTran5	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V5(), 

    SVPWM_WriteOFF@pm.setTran4	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V4(), 

    SVPWM_WriteOFF@pm.setTran3	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V3(), 

    SVPWM_WriteOFF@pm.setTran2	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V2(), 

    SVPWM_WriteOFF@pm.setTran1	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V1(), 

    SVPWM_WriteOFF@pm	PTR struct . size(2) Largest target is 50
		 -> pwmBoi(BANK0[50]), 

    SVPWM_WriteV7@pm.setTran6	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V6(), 

    SVPWM_WriteV7@pm.setTran5	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V5(), 

    SVPWM_WriteV7@pm.setTran4	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V4(), 

    SVPWM_WriteV7@pm.setTran3	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V3(), 

    SVPWM_WriteV7@pm.setTran2	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V2(), 

    SVPWM_WriteV7@pm.setTran1	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V1(), 

    SVPWM_WriteV7@pm	PTR struct . size(2) Largest target is 50
		 -> pwmBoi(BANK0[50]), 

    SVPWM_WriteV6@pm.setTran6	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V6(), 

    SVPWM_WriteV6@pm.setTran5	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V5(), 

    SVPWM_WriteV6@pm.setTran4	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V4(), 

    SVPWM_WriteV6@pm.setTran3	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V3(), 

    SVPWM_WriteV6@pm.setTran2	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V2(), 

    SVPWM_WriteV6@pm.setTran1	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V1(), 

    SVPWM_WriteV6@pm	PTR struct . size(2) Largest target is 50
		 -> pwmBoi(BANK0[50]), 

    SVPWM_WriteV5@pm.setTran6	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V6(), 

    SVPWM_WriteV5@pm.setTran5	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V5(), 

    SVPWM_WriteV5@pm.setTran4	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V4(), 

    SVPWM_WriteV5@pm.setTran3	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V3(), 

    SVPWM_WriteV5@pm.setTran2	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V2(), 

    SVPWM_WriteV5@pm.setTran1	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V1(), 

    SVPWM_WriteV5@pm	PTR struct . size(2) Largest target is 50
		 -> pwmBoi(BANK0[50]), 

    SVPWM_WriteV4@pm.setTran6	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V6(), 

    SVPWM_WriteV4@pm.setTran5	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V5(), 

    SVPWM_WriteV4@pm.setTran4	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V4(), 

    SVPWM_WriteV4@pm.setTran3	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V3(), 

    SVPWM_WriteV4@pm.setTran2	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V2(), 

    SVPWM_WriteV4@pm.setTran1	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V1(), 

    SVPWM_WriteV4@pm	PTR struct . size(2) Largest target is 50
		 -> pwmBoi(BANK0[50]), 

    SVPWM_WriteV3@pm.setTran6	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V6(), 

    SVPWM_WriteV3@pm.setTran5	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V5(), 

    SVPWM_WriteV3@pm.setTran4	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V4(), 

    SVPWM_WriteV3@pm.setTran3	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V3(), 

    SVPWM_WriteV3@pm.setTran2	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V2(), 

    SVPWM_WriteV3@pm.setTran1	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V1(), 

    SVPWM_WriteV3@pm	PTR struct . size(2) Largest target is 50
		 -> pwmBoi(BANK0[50]), 

    SVPWM_WriteV2@pm.setTran6	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V6(), 

    SVPWM_WriteV2@pm.setTran5	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V5(), 

    SVPWM_WriteV2@pm.setTran4	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V4(), 

    SVPWM_WriteV2@pm.setTran3	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V3(), 

    SVPWM_WriteV2@pm.setTran2	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V2(), 

    SVPWM_WriteV2@pm.setTran1	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V1(), 

    SVPWM_WriteV2@pm	PTR struct . size(2) Largest target is 50
		 -> pwmBoi(BANK0[50]), 

    SVPWM_WriteV1@pm.setTran6	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V6(), 

    SVPWM_WriteV1@pm.setTran5	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V5(), 

    SVPWM_WriteV1@pm.setTran4	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V4(), 

    SVPWM_WriteV1@pm.setTran3	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V3(), 

    SVPWM_WriteV1@pm.setTran2	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V2(), 

    SVPWM_WriteV1@pm.setTran1	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V1(), 

    SVPWM_WriteV1@pm	PTR struct . size(2) Largest target is 50
		 -> pwmBoi(BANK0[50]), 

    S56$setTran6	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V6(), 

    SVPWM_WriteV0@pm.setTran6	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V6(), 

    S56$setTran5	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V5(), 

    SVPWM_WriteV0@pm.setTran5	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V5(), 

    S56$setTran4	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V4(), 

    SVPWM_WriteV0@pm.setTran4	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V4(), 

    S56$setTran3	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V3(), 

    SVPWM_WriteV0@pm.setTran3	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V3(), 

    S56$setTran2	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V2(), 

    SVPWM_WriteV0@pm.setTran2	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V2(), 

    S56$setTran1	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V1(), 

    SVPWM_WriteV0@pm.setTran1	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> TEST_V1(), 

    SVPWM_WriteV0@pm	PTR struct . size(2) Largest target is 50
		 -> pwmBoi(BANK0[50]), 


Critical Paths under _main in COMRAM

    _SVPWM_WriteABSVector->_SVPWM_GetAbsoluteVoltageVector
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    ___fltol->___flsub
    ___flsub->___flmul
    ___fladd->___flneg
    ___flmul->___fladd
    _SVPWM_SetCurrentSEC->_SVPWM_GetControlAngleSEC
    _SVPWM_GetControlAngleSEC->___awmod
    ___awmod->___awdiv
    ___awdiv->___wmul
    ___lwdiv->___wmul
    _SVPWM_SetControlAngle->___lwdiv

Critical Paths under _main in BANK0

    _fakeISR->_SVPWM_STDISR
    _Test_setTimer->_printf
    _SVPWM_STDISR->_SVPWM_SetVectorTimes
    _SVPWM_SetVectorTimes->_printf
    _printf->_vfprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    41      0   79805
                                             35 BANK0     41    41      0
     _SVPWM_GetAbsoluteVoltageVector
              _SVPWM_SetControlAngle
                _SVPWM_SetCurrentSEC
               _SVPWM_SetVectorTimes
                            ___awdiv
                            ___lwdiv
                             ___wmul
                            _fakeISR
                             _printf
 ---------------------------------------------------------------------------------
 (1) _fakeISR                                              0     0      0   39438
                       _SVPWM_STDISR
                      _Test_setTimer
 ---------------------------------------------------------------------------------
 (2) _Test_setTimer                                        2     0      2   12614
                                             10 BANK0      2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (2) _SVPWM_STDISR                                         2     0      2   26824
                                             33 BANK0      2     0      2
                _SVPWM_SetCurrentSEC
         _SVPWM_SetNextRelativeState
               _SVPWM_SetVectorTimes
           _SVPWM_UpdateCurrentTimer
               _SVPWM_WriteABSVector
 ---------------------------------------------------------------------------------
 (3) _SVPWM_WriteABSVector                                 4     2      2    1462
                                              4 COMRAM     4     2      2
     _SVPWM_GetAbsoluteVoltageVector
                     _SVPWM_WriteOFF
                      _SVPWM_WriteV0
                      _SVPWM_WriteV1
                      _SVPWM_WriteV2
                      _SVPWM_WriteV3
                      _SVPWM_WriteV4
                      _SVPWM_WriteV5
                      _SVPWM_WriteV6
                      _SVPWM_WriteV7
 ---------------------------------------------------------------------------------
 (4) _SVPWM_WriteV7                                        2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _SVPWM_WriteV6                                        2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _SVPWM_WriteV5                                        2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _SVPWM_WriteV4                                        2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _SVPWM_WriteV3                                        2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _SVPWM_WriteV2                                        2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _SVPWM_WriteV1                                        2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _SVPWM_WriteV0                                        2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _SVPWM_WriteOFF                                       2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _SVPWM_GetAbsoluteVoltageVector                       4     2      2     482
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _SVPWM_UpdateCurrentTimer                             4     2      2     274
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _SVPWM_SetVectorTimes                                23    21      2   23380
                                             10 BANK0     23    21      2
                            ___awdiv
                            ___fladd
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                             ___wmul
                           ___xxtofl
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4   12516
                                              2 BANK0      8     4      4
     _SVPWM_GetAbsoluteVoltageVector (ARG)
                            ___awdiv (ARG)
                             ___wmul (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   10104
                                             89 COMRAM     6     0      6
                                              0 BANK0      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6    9747
                                             63 COMRAM    26    20      6
                               _dtoa
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    3855
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4454
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2805
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1169
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     768
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     420
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     851
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     327
                                             53 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    2737
                                             45 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    2414
                                              4 COMRAM    16     8      8
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    2592
                                             20 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _SVPWM_SetNextRelativeState                           4     2      2     186
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _SVPWM_SetCurrentSEC                                  3     1      2    1336
                                             22 COMRAM     3     1      2
           _SVPWM_GetControlAngleSEC
 ---------------------------------------------------------------------------------
 (4) _SVPWM_GetControlAngleSEC                             2     0      2    1140
                                             20 COMRAM     2     0      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     394
                                             14 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     648
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _SVPWM_SetControlAngle                                4     0      4     703
                                             13 COMRAM     4     0      4
                            ___lwdiv (ARG)
                            ___lwmod
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SVPWM_GetAbsoluteVoltageVector
   _SVPWM_SetControlAngle
     ___lwdiv (ARG)
       ___wmul (ARG)
     ___lwmod (ARG)
     ___wmul (ARG)
   _SVPWM_SetCurrentSEC
     _SVPWM_GetControlAngleSEC
       ___awdiv
         ___wmul (ARG)
       ___awmod
         ___awdiv (ARG)
           ___wmul (ARG)
   _SVPWM_SetVectorTimes
     ___awdiv
       ___wmul (ARG)
     ___fladd
       ___flneg (ARG)
     ___flmul
       ___fladd (ARG)
         ___flneg (ARG)
       ___flneg (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         ___flneg (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
           ___flneg (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         ___flneg (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
           ___flneg (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
           ___flneg (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
             ___flneg (ARG)
           ___flneg (ARG)
           ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___wmul
     ___xxtofl
     _printf
       _SVPWM_GetAbsoluteVoltageVector (ARG)
       ___awdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
   ___awdiv
     ___wmul (ARG)
   ___lwdiv
     ___wmul (ARG)
   ___wmul
   _fakeISR
     _SVPWM_STDISR
       _SVPWM_SetCurrentSEC
         _SVPWM_GetControlAngleSEC
           ___awdiv
             ___wmul (ARG)
           ___awmod
             ___awdiv (ARG)
               ___wmul (ARG)
       _SVPWM_SetNextRelativeState
       _SVPWM_SetVectorTimes
         ___awdiv
           ___wmul (ARG)
         ___fladd
           ___flneg (ARG)
         ___flmul
           ___fladd (ARG)
             ___flneg (ARG)
           ___flneg (ARG)
           ___xxtofl (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___flneg (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
               ___flneg (ARG)
             ___flneg (ARG)
             ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___flneg (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
               ___flneg (ARG)
             ___flneg (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
           ___flsub (ARG)
             ___fladd
               ___flneg (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
                 ___flneg (ARG)
               ___flneg (ARG)
               ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___wmul
         ___xxtofl
         _printf
           _SVPWM_GetAbsoluteVoltageVector (ARG)
           ___awdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
       _SVPWM_UpdateCurrentTimer
       _SVPWM_WriteABSVector
         _SVPWM_GetAbsoluteVoltageVector
         _SVPWM_WriteOFF
         _SVPWM_WriteV0
         _SVPWM_WriteV1
         _SVPWM_WriteV2
         _SVPWM_WriteV3
         _SVPWM_WriteV4
         _SVPWM_WriteV5
         _SVPWM_WriteV6
         _SVPWM_WriteV7
     _Test_setTimer
       _printf
         _SVPWM_GetAbsoluteVoltageVector (ARG)
         ___awdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
   _printf
     _SVPWM_GetAbsoluteVoltageVector (ARG)
     ___awdiv (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0      46       5       27.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     4C      86       4       83.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12B       8        0.0%
DATA                 0      0     12B      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Mar 11 10:58:14 2020

                           ___awdiv@sign 000C                      ___wmul@multiplicand 0003  
             ??_SVPWM_GetControlAngleSEC 0017          SVPWM_SetControlAngle@inputAngle 0010  
                                    l200 23B6                                      l223 1F8A  
                                    l225 1F92                                      l187 1622  
                                    l198 23AE                                      l805 2A50  
                                    l742 13B2                                      l806 2A4C  
                                    l752 12D8                                      l913 1C2E  
                                    l906 1BB0                                      l780 2918  
                                    l781 28F6                                      l926 11AA  
                                    l865 2B62                                      l689 1A2C  
                                    l882 2E00                                      l874 2D7A  
                                    l875 2D76                                      l699 1718  
                                    l796 29EA                                      _abs 1182  
                                    _pad 15F2                             ___awmod@sign 0014  
                                    wreg 000FE8                             ___flmul@aexp 0026  
                           ___flmul@bexp 0027                             ___flmul@sign 0021  
                           ___flmul@temp 002C                             ___flmul@prod 0028  
                           ___fltol@exp1 003F                                     ?_abs 0013  
                                   l3001 2B0E                                     l3003 2B12  
                                   l3101 2DDC                                     l3021 2B52  
                                   l3005 2B22                                     l2303 161A  
                                   l3113 2E1E                                     l3201 1C54  
                                   l2313 1672                                     l2305 162C  
                                   l3019 2B4E                                     l3203 1C60  
                                   l3029 2B80                                     l2341 1D2C  
                                   l2309 1644                                     l3301 18FC  
                                   l3071 2D22                                     l2343 1D40  
                                   l2335 1D06                                     l2407 19A6  
                                   l3231 183A                                     l3303 190A  
                                   l3129 1170                                     l2361 1DD8  
                                   l2353 1D9C                                     l2329 1CDE  
                                   l2409 19BA                                     l2513 1FCA  
                                   l3233 185C                                     l3305 1918  
                                   l3251 1526                                     l2611 2806  
                                   l3155 17A2                                     l3139 1758  
                                   l3219 1CA0                                     l2283 120C  
                                   l2419 1A16                                     l2435 1702  
                                   l2427 16A6                                     l2523 20B6  
                                   l3227 17F6                                     l3307 1926  
                                   l3245 14F0                                     l3077 2D40  
                                   l2701 293C                                     l3173 17E2  
                                   l3165 17BA                                     l2357 1DB2  
                                   l2381 1AB8                                     l2373 1A7A  
                                   l2269 142A                                     l2445 2390  
                                   l2429 16BA                                     l3229 1818  
                                   l3237 187E                                     l3309 1934  
                                   l3335 12CE                                     l3327 12AE  
                                   l3247 1502                                     l3255 1538  
                                   l2711 2962                                     l2631 284A  
                                   l2607 2802                                     l3167 17C6  
                                   l3159 17B2                                     l3191 1BE4  
                                   l3183 1BC0                                     l2383 1ACC  
                                   l2279 11F6                                     l2287 1134  
                                   l2463 23E0                                     l3329 12B6  
                                   l3353 1380                                     l3249 1514  
                                   l3097 2DBE                                     l3193 1BF0  
                                   l2393 1B2A                                     l2377 1A9E  
                                   l2289 1138                                     l2473 24D8  
                                   l3355 1388                                     l2811 1592  
                                   l2643 286E                                     l2635 284E  
                                   l3195 1C16                                     l2299 160C  
                                   l2459 23D0                                     l2563 22A8  
                                   l2555 220E                                     l3291 18B6  
                                   l3365 13A8                                     l2805 1582  
                                   l2709 295E                                     l3189 1BDE  
                                   l2397 1B50                                     l2389 1B14  
                                   l2493 2540                                     l2573 22EE  
                                   l3293 18C4                                     l2719 2974  
                                   l2591 13D0                                     l3295 18D2  
                                   l2817 15A8                                     l2833 15DA  
                                   l2737 2A0E                                     l2753 2A2E  
                                   l2729 29DA                                     l2673 28AA  
                                   l2497 2558                                     l2569 22E4  
                                   l2593 13F6                                     l2905 1E56  
                                   l3297 18E0                                     l3449 2626  
                                   l2819 15B0                                     l2747 2A24  
                                   l2579 2306                                     l3299 18EE  
                                   l2837 15E8                                     l2829 15D0  
                                   l2853 149E                                     l2781 2ABC  
                                   l2773 2A96                                     l2685 2904  
                                   l2941 1ED4                                     l2917 1E80  
                                   ?_pad 0011                                     l2687 2908  
                                   l2873 14E4                                     l2865 14CC  
                                   l2857 14AC                                     l2849 1492  
                                   l2785 2AC4                                     l2953 1EFE  
                                   l2929 1EAA                                     l2859 14B4  
                                   l2787 2AC6                                     l2971 1F2A  
                                   l2869 14D6                                     l2965 1F26  
                                   l2893 1E28                                     l2887 1E10  
                  __size_of_SVPWM_STDISR 003E                                     l2899 1E3E  
                                   STR_1 3F34                                     STR_2 3EDD  
                                   STR_3 3F01                                     STR_4 3F6E  
                                   STR_5 3F79                                     STR_6 3FBF  
                                   STR_7 3F83                                     STR_8 3FC8  
                                   STR_9 3F8D                                     u2100 19BE  
                                   u2050 1AD0                                     u2210 23CA  
                                   u2130 16BE                                     u3010 1EA6  
                                   u2220 24E6                                     u2150 2362  
                                   u2310 1F80                                     u3030 1ED0  
                                   u3200 2D70                                     u2240 2508  
                                   u2160 2364                                     u2241 2506  
                                   u2081 1986                                     u2250 2516  
                                   u3050 1EFA                                     u2260 251C  
                                   u2340 20E0                                     u2341 20DE  
                                   u3150 2B6E                                     u2190 23A4  
                                   u2350 20EE                                     u3240 2DCC  
                                   u3160 2CE4                                     u2520 28CC  
                                   u2280 252A                                     u2360 20F4  
                                   u3250 2DEA                                     u2530 28DC  
                                   u3330 17CC                                     u3410 1C6A  
                                   u2700 2A32                                     u2540 28DE  
                                   u3165 2CDA                                     u2390 2190  
                                   u2720 2A46                                     u3280 1746  
                                   u2570 2920                                     u3290 1776  
                                   u1850 1422                                     u3460 12BA  
                                   u1940 1190                                     u2910 14B8  
                                   u1870 146A                                     u3295 176C  
                                   u3490 138C                                     u2850 15B4  
                                   u1971 1D0C                                     u3651 2616  
                                   u2780 2AA2                                     u3660 27D2  
                                   u1990 1D44                                     u2960 1E3A  
                                   u2970 1E52                                     u2990 1E7C  
                  ?_SVPWM_SetVectorTimes 006A                                     abs@a 0013  
                                   _dbuf 0126                                     _main 2582  
                                   _dtoa 233A                                     _prec 00B0  
                                   _nout 00AC                                     pad@i 0018  
                                   pad@p 0015                                     fsr1h 000FE2  
                                   fsr2h 000FDA                                     indf2 000FDF  
                                   fsr1l 000FE1                                     pad@w 001A  
                                   fsr2l 000FD9                                     _utoa 1F6C  
                                   prodh 000FF4                                     prodl 000FF3  
                                   start 0000                             ___param_bank 000000  
               _SVPWM_UpdateCurrentTimer 17F4                                    ??_abs 0015  
                                  ??_pad 0017             __end_of_SVPWM_WriteABSVector 1980  
                          ___fltol@sign1 003E                          __end_of___aodiv 1DFA  
                        __end_of___fladd 2AE2                                    ?_main 0001  
                                  ?_dtoa 001C                          __end_of___aomod 1B72  
                        __end_of___awdiv 15F2                          __end_of___flneg 1182  
                                  STR_10 3FD1                                    STR_11 3F97  
                                  STR_12 3FDA                                    STR_20 3E59  
                                  STR_21 3F48                                    STR_13 3FA1  
                                  STR_22 3F48                                    STR_14 3FE3  
                                  STR_30 3F12                                    STR_15 3FAB  
                                  STR_31 3F23                                    STR_23 3E8E  
                                  STR_16 3FEC                                    STR_24 3F44  
                                  STR_17 3FB5                                    STR_25 3EEF  
                                  STR_18 3FF5                                    STR_26 3F54  
                                  STR_19 3F61                                    STR_27 3EA2  
                                  STR_28 3ECA                          __end_of___awmod 14EE  
                                  STR_29 3EB6                          __end_of___flmul 2E34  
                        __end_of___flsub 136A                          __end_of___fltol 17F4  
                                  ?_utoa 001C                          __end_of___lodiv 1A4E  
                        ___awdiv@divisor 0009                          __end_of___lomod 173A  
                        __end_of___lwdiv 13BC                          __end_of___lwmod 12E2  
                        ___awdiv@counter 000B                             vfpfcnvrt@fmt 0042  
                           vfpfcnvrt@llu 0052                          __end_of_fakeISR 1096  
                           _SVPWM_STDISR 1262             ??_SVPWM_SetNextRelativeState 0003  
                                  _flags 00B2                                    _fputc 1412  
                                  _fputs 11EC                                    pad@fp 0011  
                                  _width 00AE                                    _putch 104C  
                                  main@i 00AA                                    dtoa@d 001E  
                                  dtoa@i 003E                                    dtoa@n 0036  
                                  dtoa@p 0030                                    dtoa@s 0034  
                                  dtoa@w 0032                                    tablat 000FF5  
                                  plusw1 000FE3                                    plusw2 000FDB  
                                  utoa@d 001E                                    utoa@i 003A  
                                  utoa@n 0032                                    utoa@p 002E  
                                  utoa@w 0030                                    status 000FD8  
              _SVPWM_SetVectorTimes$1547 0074                _SVPWM_SetVectorTimes$1548 0078  
                 __size_of_SVPWM_WriteV0 0002                   __size_of_SVPWM_WriteV1 0002  
                 __size_of_SVPWM_WriteV2 0002                   __size_of_SVPWM_WriteV3 0002  
                 __size_of_SVPWM_WriteV4 0002                   __size_of_SVPWM_WriteV5 0002  
                 __size_of_SVPWM_WriteV6 0002                   __size_of_SVPWM_WriteV7 0002  
                       ___lodiv@dividend 0001                          __initialization 12E2  
                           __end_of_main 27D6                             __end_of_dtoa 2582  
                           __end_of_utoa 211E                                   ??_main 0083  
                                 ??_dtoa 0026                                   ??_utoa 0026  
                          __activetblptr 000002                         ___lodiv@quotient 0011  
                 SVPWM_SetVectorTimes@pm 006A                                   ?_fputc 0001  
                                 ?_fputs 000A                         ___awdiv@dividend 0007  
                                 ?_putch 0001                   ??_SVPWM_SetVectorTimes 006C  
                       __end_of___xxtofl 1CB2             __size_of_SVPWM_SetCurrentSEC 0020  
                           vfprintf@cfmt 0060                                ??___aodiv 0011  
                              ??___fladd 000D                                ??___aomod 0011  
                                 ___wmul 10B6                                ??___awdiv 000B  
                              ??___flneg 0005                                ??___awmod 0013  
                              ??___flmul 001D                                ??___flsub 0036  
                              ??___fltol 003A                                ??___lodiv 0011  
                              ??___lomod 0011                                ??___lwdiv 000B  
                              ??___lwmod 0005                                ??_fakeISR 0060  
                                 clear_0 1308                                   clear_1 1314  
                       ___awdiv@quotient 000D                          ___awmod@divisor 0011  
                                 _pwmBoi 00B4                          ___awmod@counter 0013  
                                 _printf 1102                                   pad@buf 0013  
                                 dtoa@fp 001C                                   _strlen 112A  
                          _SVPWM_WriteV0 1050                            _SVPWM_WriteV1 1052  
                          _SVPWM_WriteV2 1054                            _SVPWM_WriteV3 1056  
                          _SVPWM_WriteV4 1058                            _SVPWM_WriteV5 105A  
                          _SVPWM_WriteV6 105C                            _SVPWM_WriteV7 105E  
                                 fputc@c 0001                                   fputs@c 000E  
                                 fputs@i 000F                                   fputs@s 000A  
                           __mediumconst 3318                                   tblptrh 000FF7  
                                 tblptrl 000FF6                                   tblptru 000FF8  
                                 putch@c 0001                         __end_of_vfprintf 1412  
                                 utoa@fp 001C                  __size_of_SVPWM_WriteOFF 0002  
                           ___xxtofl@arg 000B                             ___xxtofl@exp 000A  
                           ___xxtofl@val 0001                               __accesstop 0060  
                __end_of__initialization 131A                               ___flneg@f1 0001  
         __size_of_SVPWM_SetControlAngle 003E                     _SVPWM_WriteABSVector 18B4  
          __end_of_SVPWM_SetControlAngle 1262                            ___rparam_used 000001  
                             ___fltol@f1 0036               SVPWM_UpdateCurrentTimer@pm 0001  
                         __pcstackCOMRAM 0001                             __pidataBANK1 10DC  
                          __end_of_fputc 147E                            __end_of_fputs 1224  
                         SVPWM_STDISR@pm 0081                            __end_of_putch 104E  
                         ?_SVPWM_WriteV0 0001                           ?_SVPWM_WriteV1 0001  
                         ?_SVPWM_WriteV2 0001                           ?_SVPWM_WriteV3 0001  
                         ?_SVPWM_WriteV4 0001                           ?_SVPWM_WriteV5 0001  
                         ?_SVPWM_WriteV6 0001                           ?_SVPWM_WriteV7 0001  
     __end_of_SVPWM_SetNextRelativeState 156E               _SVPWM_SetNextRelativeState 14EE  
                  __end_of_Test_setTimer 1078                                  ??_fputc 0005  
                                ??_fputs 000E                                  ??_putch 0001  
                 SVPWM_WriteABSVector@pm 0005                               __pbssBANK0 00AC  
                             __pbssBANK1 0126                    ?_SVPWM_WriteABSVector 0005  
             ??_SVPWM_UpdateCurrentTimer 0003                  SVPWM_SetControlAngle@pm 000E  
                                ?___wmul 0001                                  ?_printf 0062  
                                ?_strlen 0001                                ?___xxtofl 0001  
                     __size_of_vfpfcnvrt 021C                                  _TEST_V1 000000  
                                _TEST_V2 000000                                  _TEST_V3 000000  
                                _TEST_V4 000000                                  _TEST_V5 000000  
                                _TEST_V6 000000                         ___lomod@dividend 0001  
      __size_of_SVPWM_GetControlAngleSEC 0038                ?_SVPWM_GetControlAngleSEC 0015  
                                __Hparam 0000                                  __Lparam 0000  
                                ___aodiv 1CB2                                  ___fladd 27D6  
                                ___aomod 1A4E                                  ___awdiv 156E  
                                ___flneg 1154                                  ___awmod 147E  
                                ___flmul 2AE2                                  ___flsub 1324  
                                ___fltol 173A                          __size_of___wmul 0026  
                                ___lodiv 1980                                  ___lomod 168C  
                                ___lwdiv 136A                                  ___lwmod 12A0  
                        ??_SVPWM_WriteV0 0003                          ??_SVPWM_WriteV1 0003  
                        ??_SVPWM_WriteV2 0003                          ??_SVPWM_WriteV3 0003  
                        ??_SVPWM_WriteV4 0003                          ??_SVPWM_WriteV5 0003  
                        ??_SVPWM_WriteV6 0003                          ??_SVPWM_WriteV7 0003  
                              ?_vfprintf 005A                                  _fakeISR 1078  
                                __pcinit 12E2           SVPWM_SetVectorTimes@angleIndex 007D  
                                __ramtop 0300                                  __ptext0 2582  
                                __ptext1 1078                                  __ptext2 1060  
                                __ptext3 1262                                  __ptext4 18B4  
                                __ptext5 105E                                  __ptext6 105C  
                                __ptext7 105A                                  __ptext8 1058  
                                __ptext9 1056                          __size_of_printf 0028  
                        __size_of_strlen 002A                      _SVPWM_SetCurrentSEC 1096  
                           __size_of_abs 0032                             __size_of_pad 009A  
                             ??___xxtofl 0005                         ___awmod@dividend 000F  
                         _SVPWM_WriteOFF 104E                     end_of_initialization 131A  
                 ??_SVPWM_WriteABSVector 0007                                  fputc@fp 0003  
                      __end_of_sineTable 3E59                            __Lmediumconst 3318  
                                fputs@fp 000C                     ?_SVPWM_SetCurrentSEC 0017  
                      __end_of_vfpfcnvrt 233A                                  postdec1 000FE5  
                                postdec2 000FDD                                  postinc0 000FEE  
                                postinc1 000FE6                                  postinc2 000FDE  
                             ??_vfprintf 0060                                  strlen@a 0003  
                                strlen@s 0001                              ___fladd@grs 0014  
                          ___xxtofl@sign 0009                   __end_of_SVPWM_WriteOFF 1050  
                            ___flmul@grs 0022            __size_of_SVPWM_SetVectorTimes 04E4  
                  ??_SVPWM_SetCurrentSEC 0019                    SVPWM_SetCurrentSEC@pm 0017  
                            vfpfcnvrt@ap 0044                              vfpfcnvrt@fp 0040  
                            vfpfcnvrt@ll 004A                           __end_of___wmul 10DC  
                         __end_of_printf 112A                           __end_of_strlen 1154  
            ?_SVPWM_SetNextRelativeState 0001                      start_initialization 12E2  
                        ___lodiv@divisor 0009                          ___lodiv@counter 0019  
                            __end_of_abs 11B4                          ?_SVPWM_WriteOFF 0001  
                            __end_of_pad 168C   __end_of_SVPWM_GetAbsoluteVoltageVector 1F6C  
__size_of_SVPWM_GetAbsoluteVoltageVector 0172           _SVPWM_GetAbsoluteVoltageVector 1DFA  
                  _SVPWM_SetControlAngle 1224         SVPWM_GetAbsoluteVoltageVector@pm 0001  
                            vfprintf@fmt 005C                                 ??___wmul 0005  
                            __pdataBANK1 0100                                 ??_printf 0060  
                               ??_strlen 0003                                ___fladd@a 0009  
                              ___fladd@b 0005                            ?_SVPWM_STDISR 0081  
       __end_of_SVPWM_GetControlAngleSEC 11EC                                ___flmul@a 0019  
                              ___flmul@b 0015                                ___flsub@a 0032  
                              ___flsub@b 002E                            __pcstackBANK0 0060  
                       ___aodiv@dividend 0001                        __size_of___xxtofl 0140  
                    __end_of_cosineTable 38B9                         ___lwdiv@dividend 0007  
                 __size_of_Test_setTimer 0018                            __pmediumconst 3318  
                               ?___aodiv 0001                                 ?___fladd 0005  
                               ?___aomod 0001                                 ?___awdiv 0007  
                       ___aodiv@quotient 0013                                 ?___flneg 0001  
                               ?___awmod 000F                                 ?___flmul 0015  
                               ?___flsub 002E                                 ?___fltol 0036  
        SVPWM_SetVectorTimes@sectorIndex 007F                                 ?___lodiv 0001  
                               ?___lomod 0001                                 ?___lwdiv 0007  
                               ?___lwmod 0001                                 ?_fakeISR 0001  
      __size_of_SVPWM_UpdateCurrentTimer 00C0                ?_SVPWM_UpdateCurrentTimer 0001  
                      __size_of_vfprintf 0056                           ??_SVPWM_STDISR 0060  
                        ___lomod@divisor 0009                          ___lomod@counter 0011  
                       SVPWM_WriteOFF@pm 0001                         ___lwdiv@quotient 000B  
                         __size_of_fputc 006C                           __size_of_fputs 0038  
                         __size_of_putch 0002                           ___wmul@product 0005  
                 ?_SVPWM_SetControlAngle 000E                                _sineTable 38B9  
    __size_of_SVPWM_SetNextRelativeState 0080                                _vfpfcnvrt 211E  
                  __end_of_SVPWM_WriteV0 1052                    __end_of_SVPWM_WriteV1 1054  
                  __end_of_SVPWM_WriteV2 1056                    __end_of_SVPWM_WriteV3 1058  
                  __end_of_SVPWM_WriteV4 105A                    __end_of_SVPWM_WriteV5 105C  
                  __end_of_SVPWM_WriteV6 105E                    __end_of_SVPWM_WriteV7 1060  
                      ___wmul@multiplier 0001                              _cosineTable 3319  
                          _Test_setTimer 1060                        Test_setTimer@time 006A  
               _SVPWM_GetControlAngleSEC 11B4                                copy_data0 12F6  
          __size_of_SVPWM_WriteABSVector 00CC                                 __Hrparam 0000  
                             vfprintf@ap 005E                                 __Lrparam 0000  
                             vfprintf@fp 005A                         __size_of___aodiv 0148  
                       __size_of___fladd 030C                         __size_of___aomod 0124  
                       __size_of___awdiv 0084                         __size_of___flneg 002E  
                       __size_of___awmod 0070                         __size_of___flmul 0352  
                       __size_of___flsub 0046                         __size_of___fltol 00BA  
           SVPWM_SetNextRelativeState@pm 0001                         __size_of___lodiv 00CE  
                       __size_of___lomod 00AE                               ?_vfpfcnvrt 0040  
                       __size_of___lwdiv 0052                         __size_of___lwmod 0042  
           __end_of_SVPWM_SetVectorTimes 3318                         __size_of_fakeISR 001E  
                        ___aodiv@divisor 0009                          ___aodiv@counter 0011  
                       ??_SVPWM_WriteOFF 0003                           ?_Test_setTimer 006A  
                               ___xxtofl 1B72                                 _dtoa$792 002E  
                        ___lwdiv@divisor 0009                          ___lwdiv@counter 000D  
                               __ptext10 1054                                 __ptext11 1052  
                               __ptext20 1F6C                                 __ptext12 1050  
                               __ptext21 168C                                 __ptext13 104E  
                               __ptext30 1A4E                                 __ptext22 1980  
                               __ptext14 1DFA                                 __ptext31 1CB2  
                               __ptext23 233A                                 __ptext15 17F4  
                               __ptext40 1096                                 __ptext32 1B72  
                               __ptext24 15F2                                 __ptext16 2E34  
                               __ptext41 11B4                                 __ptext33 10B6  
                               __ptext25 112A                                 __ptext17 1102  
                               __ptext42 147E                                 __ptext34 173A  
                               __ptext26 11EC                                 __ptext18 13BC  
                               __ptext43 156E                                 __ptext35 1324  
                               __ptext27 1412                                 __ptext19 211E  
                               __ptext44 136A                                 __ptext36 27D6  
                               __ptext28 104C                                 __ptext45 1224  
                               __ptext37 1154                                 __ptext29 1182  
                               __ptext46 12A0                                 __ptext38 2AE2  
                               __ptext39 14EE              __end_of_SVPWM_SetCurrentSEC 10B6  
                        SVPWM_WriteV0@pm 0001                          SVPWM_WriteV1@pm 0001  
                        SVPWM_WriteV2@pm 0001                          SVPWM_WriteV3@pm 0001  
                        SVPWM_WriteV4@pm 0001                          SVPWM_WriteV5@pm 0001  
                        SVPWM_WriteV6@pm 0001                          SVPWM_WriteV7@pm 0001  
                          __size_of_main 0254                            __size_of_dtoa 0248  
             SVPWM_GetControlAngleSEC@pm 0015                            __size_of_utoa 01B2  
                   __end_of_SVPWM_STDISR 12A0                                 main@F779 0100  
                        main@TEST_Angles 0084         ??_SVPWM_GetAbsoluteVoltageVector 0003  
        ?_SVPWM_GetAbsoluteVoltageVector 0001                                 _vfprintf 13BC  
                              printf@fmt 0062                         ___aomod@dividend 0001  
             SVPWM_SetVectorTimes@sector 007C                         ___lwmod@dividend 0001  
       __end_of_SVPWM_UpdateCurrentTimer 18B4                                 printf@ap 0068  
                        ___aomod@divisor 0009                              ??_vfpfcnvrt 0046  
                        ___aomod@counter 0011                          ??_Test_setTimer 0060  
                        ___lwmod@divisor 0003                          ___lwmod@counter 0005  
                          ___fladd@signs 0011                             ___aodiv@sign 0012  
                ??_SVPWM_SetControlAngle 0012                             ___fladd@aexp 0012  
                           ___fladd@bexp 0013                     _SVPWM_SetVectorTimes 2E34  
                           ___aomod@sign 0012  
